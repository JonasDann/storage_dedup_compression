// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gzipcMulticoreStreaming_huffmanEncoderStatic_47_Pipeline_huffman_loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        encodedOutStream_dout,
        encodedOutStream_num_data_valid,
        encodedOutStream_fifo_cap,
        encodedOutStream_empty_n,
        encodedOutStream_read,
        hufCodeStream_din,
        hufCodeStream_num_data_valid,
        hufCodeStream_fifo_cap,
        hufCodeStream_full_n,
        hufCodeStream_write,
        tmp_data_V
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [32:0] encodedOutStream_dout;
input  [2:0] encodedOutStream_num_data_valid;
input  [2:0] encodedOutStream_fifo_cap;
input   encodedOutStream_empty_n;
output   encodedOutStream_read;
output  [19:0] hufCodeStream_din;
input  [2:0] hufCodeStream_num_data_valid;
input  [2:0] hufCodeStream_fifo_cap;
input   hufCodeStream_full_n;
output   hufCodeStream_write;
input  [31:0] tmp_data_V;

reg ap_idle;
reg encodedOutStream_read;
reg[19:0] hufCodeStream_din;
reg hufCodeStream_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire   [31:0] next_state_15_load_fu_354_p1;
wire   [0:0] done_load_load_fu_389_p1;
reg    ap_predicate_op52_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg   [31:0] next_state_15_reg_838;
reg   [31:0] next_state_15_reg_838_pp0_iter3_reg;
reg   [0:0] done_load_reg_867;
reg   [0:0] done_load_reg_867_pp0_iter3_reg;
reg   [0:0] icmp_ln342_reg_896;
reg   [0:0] icmp_ln342_reg_896_pp0_iter3_reg;
reg    ap_predicate_op157_write_state5;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [8:0] dist_code23_address0;
reg    dist_code23_ce0;
wire   [4:0] dist_code23_q0;
wire   [8:0] length_code53_address0;
reg    length_code53_ce0;
wire   [4:0] length_code53_q0;
reg   [8:0] lit_code_fixed67_address0;
reg    lit_code_fixed67_ce0;
wire   [8:0] lit_code_fixed67_q0;
reg   [8:0] lit_blen_fixed_V60_address0;
reg    lit_blen_fixed_V60_ce0;
wire   [3:0] lit_blen_fixed_V60_q0;
wire   [4:0] huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits46_address0;
reg    huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits46_ce0;
wire   [2:0] huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits46_q0;
wire   [4:0] dist_codes_fixed30_address0;
reg    dist_codes_fixed30_ce0;
wire   [4:0] dist_codes_fixed30_q0;
wire   [4:0] dist_blen_fixed_V16_address0;
reg    dist_blen_fixed_V16_ce0;
wire   [2:0] dist_blen_fixed_V16_q0;
wire   [4:0] huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits38_address0;
reg    huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits38_ce0;
wire   [3:0] huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits38_q0;
wire   [4:0] base_length9_address0;
reg    base_length9_ce0;
wire   [7:0] base_length9_q0;
wire   [4:0] base_dist2_address0;
reg    base_dist2_ce0;
wire   [14:0] base_dist2_q0;
reg    encodedOutStream_blk_n;
wire    ap_block_pp0_stage0;
reg    hufCodeStream_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] next_state_15_reg_838_pp0_iter2_reg;
wire   [8:0] trunc_ln352_fu_380_p1;
reg   [8:0] trunc_ln352_reg_857;
reg   [8:0] trunc_ln352_reg_857_pp0_iter2_reg;
reg   [0:0] done_load_reg_867_pp0_iter2_reg;
wire   [7:0] tCh_fu_413_p1;
reg   [7:0] tCh_reg_871;
reg   [7:0] tCh_reg_871_pp0_iter2_reg;
wire   [7:0] tLen_14_fu_417_p4;
reg   [7:0] tLen_14_reg_876;
reg   [15:0] tOffset_14_reg_881;
wire   [0:0] icmp_ln342_fu_497_p2;
reg   [0:0] icmp_ln342_reg_896_pp0_iter2_reg;
reg   [4:0] code_s_7_reg_910;
reg   [4:0] code_s_7_reg_910_pp0_iter3_reg;
reg   [2:0] dist_blen_fixed_V16_load_reg_915;
reg   [2:0] dist_blen_fixed_V16_load_reg_915_pp0_iter3_reg;
reg   [2:0] lextra_6_reg_920;
wire   [14:0] trunc_ln259_fu_633_p1;
reg   [14:0] trunc_ln259_reg_925;
wire   [3:0] trunc_ln257_7_fu_637_p1;
reg   [3:0] trunc_ln257_7_reg_930;
wire   [7:0] tLen_13_fu_655_p2;
reg   [7:0] tLen_13_reg_935;
wire   [63:0] zext_ln366_fu_370_p1;
wire   [63:0] zext_ln354_fu_384_p1;
wire   [63:0] zext_ln339_fu_487_p1;
wire   [63:0] zext_ln340_fu_492_p1;
wire   [63:0] zext_ln388_fu_526_p1;
wire   [63:0] zext_ln380_fu_534_p1;
wire   [63:0] zext_ln352_fu_671_p1;
wire   [63:0] zext_ln345_fu_685_p1;
reg   [7:0] dextra_fu_108;
wire   [7:0] dextra_8_cast_cast_fu_539_p1;
wire    ap_loop_init;
reg   [7:0] lextra_fu_112;
wire   [7:0] lextra_8_cast_cast_fu_677_p1;
reg   [0:0] done_fu_116;
wire   [0:0] done_239_fu_407_p2;
reg   [15:0] lcode_fu_120;
wire   [15:0] zext_ln340_6_fu_590_p1;
reg   [15:0] ap_sig_allocacmp_lcode_load;
reg   [15:0] dcode_fu_124;
wire   [15:0] zext_ln339_7_fu_586_p1;
reg   [15:0] ap_sig_allocacmp_dcode_load_7;
reg   [31:0] p_Val2_s_fu_128;
wire   [31:0] tmp_data_V_78_fu_395_p1;
reg   [7:0] tLen_fu_132;
reg   [15:0] tOffset_fu_136;
wire   [15:0] tOffset_13_fu_627_p2;
reg   [31:0] next_state_fu_140;
wire   [31:0] select_ln379_fu_549_p3;
wire   [31:0] select_ln365_fu_573_p3;
reg   [31:0] ap_sig_allocacmp_next_state_15;
wire   [19:0] p_011_fu_690_p4;
reg    ap_block_pp0_stage0_01001;
wire   [19:0] p_012_fu_706_p5;
wire   [19:0] p_013_fu_724_p4;
wire   [19:0] p_s_fu_739_p4;
wire   [19:0] p_0_fu_754_p4;
wire   [0:0] tmp_strobe_V_fu_399_p3;
wire   [7:0] tmp_fu_437_p4;
wire   [8:0] trunc_ln_fu_463_p4;
wire   [0:0] icmp_ln339_fu_447_p2;
wire   [8:0] tOffset_14_cast_fu_453_p4;
wire   [8:0] xor_ln339_fu_473_p2;
wire   [8:0] select_ln339_fu_479_p3;
wire   [0:0] icmp_ln374_fu_543_p2;
wire   [0:0] icmp_ln360_fu_567_p2;
wire   [15:0] base_dist_load_cast_fu_623_p1;
wire   [7:0] add_ln380_fu_649_p2;
wire   [8:0] add_ln352_fu_666_p2;
wire   [3:0] trunc_ln257_fu_702_p1;
wire   [3:0] dist_blen_fixed_V_load_cast_fu_718_p1;
wire   [14:0] zext_ln259_11_fu_721_p1;
wire   [14:0] zext_ln259_fu_735_p1;
wire   [14:0] zext_ln259_12_fu_750_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_664;
reg    ap_condition_668;
reg    ap_condition_313;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
end

gzipcMulticoreStreaming_huffmanEncoderStatic_Pipeline_huffman_loop_dist_code_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
dist_code23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dist_code23_address0),
    .ce0(dist_code23_ce0),
    .q0(dist_code23_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_Pipeline_huffman_loop_length_code_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 259 ),
    .AddressWidth( 9 ))
length_code53_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(length_code53_address0),
    .ce0(length_code53_ce0),
    .q0(length_code53_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_Pipeline_huffman_loop_lit_code_fixed_ROM_AUTO_1R #(
    .DataWidth( 9 ),
    .AddressRange( 288 ),
    .AddressWidth( 9 ))
lit_code_fixed67_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lit_code_fixed67_address0),
    .ce0(lit_code_fixed67_ce0),
    .q0(lit_code_fixed67_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_Pipeline_huffman_loop_lit_blen_fixed_V_ROM_AUTO_1R #(
    .DataWidth( 4 ),
    .AddressRange( 288 ),
    .AddressWidth( 9 ))
lit_blen_fixed_V60_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lit_blen_fixed_V60_address0),
    .ce0(lit_blen_fixed_V60_ce0),
    .q0(lit_blen_fixed_V60_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_Pipeline_huffman_loop_huffmanEncoderStatic_stream_streamjbC #(
    .DataWidth( 3 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits46_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits46_address0),
    .ce0(huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits46_ce0),
    .q0(huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits46_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_Pipeline_huffman_loop_dist_codes_fixed_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dist_codes_fixed30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dist_codes_fixed30_address0),
    .ce0(dist_codes_fixed30_ce0),
    .q0(dist_codes_fixed30_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_Pipeline_huffman_loop_dist_blen_fixed_V_ROM_AUTO_1R #(
    .DataWidth( 3 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dist_blen_fixed_V16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dist_blen_fixed_V16_address0),
    .ce0(dist_blen_fixed_V16_ce0),
    .q0(dist_blen_fixed_V16_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_Pipeline_huffman_loop_huffmanEncoderStatic_stream_streamkbM #(
    .DataWidth( 4 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits38_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits38_address0),
    .ce0(huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits38_ce0),
    .q0(huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits38_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_Pipeline_huffman_loop_base_length_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
base_length9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(base_length9_address0),
    .ce0(base_length9_ce0),
    .q0(base_length9_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_Pipeline_huffman_loop_base_dist_ROM_AUTO_1R #(
    .DataWidth( 15 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
base_dist2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(base_dist2_address0),
    .ce0(base_dist2_ce0),
    .q0(base_dist2_q0)
);

gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                        dcode_fu_124[0] <= 1'b0;
            dcode_fu_124[1] <= 1'b0;
            dcode_fu_124[2] <= 1'b0;
            dcode_fu_124[3] <= 1'b0;
            dcode_fu_124[4] <= 1'b0;
        end else if ((1'b1 == ap_condition_664)) begin
                        dcode_fu_124[4 : 0] <= zext_ln339_7_fu_586_p1[4 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                        dextra_fu_108[0] <= 1'b0;
            dextra_fu_108[1] <= 1'b0;
            dextra_fu_108[2] <= 1'b0;
            dextra_fu_108[3] <= 1'b0;
        end else if (((next_state_15_reg_838 == 32'd5) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
                        dextra_fu_108[3 : 0] <= dextra_8_cast_cast_fu_539_p1[3 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            done_fu_116 <= 1'd0;
        end else if ((1'b1 == ap_condition_668)) begin
            done_fu_116 <= done_239_fu_407_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                        lcode_fu_120[0] <= 1'b0;
            lcode_fu_120[1] <= 1'b0;
            lcode_fu_120[2] <= 1'b0;
            lcode_fu_120[3] <= 1'b0;
            lcode_fu_120[4] <= 1'b0;
        end else if ((1'b1 == ap_condition_664)) begin
                        lcode_fu_120[4 : 0] <= zext_ln340_6_fu_590_p1[4 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                        lextra_fu_112[0] <= 1'b0;
            lextra_fu_112[1] <= 1'b0;
            lextra_fu_112[2] <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (next_state_15_reg_838_pp0_iter2_reg == 32'd1))) begin
                        lextra_fu_112[2 : 0] <= lextra_8_cast_cast_fu_677_p1[2 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (((done_fu_116 == 1'd0) & (ap_sig_allocacmp_next_state_15 == 32'd0) & (icmp_ln342_fu_497_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
                next_state_fu_140[0] <= 1'b1;
        next_state_fu_140[1] <= 1'b0;
        next_state_fu_140[2] <= 1'b0;
    end else if (((next_state_15_load_fu_354_p1 == 32'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
                next_state_fu_140[0] <= 1'b1;
        next_state_fu_140[1] <= 1'b0;
        next_state_fu_140[2] <= 1'b1;
    end else if ((((done_fu_116 == 1'd0) & (ap_sig_allocacmp_next_state_15 == 32'd0) & (icmp_ln342_fu_497_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((next_state_15_load_fu_354_p1 == 32'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
                next_state_fu_140[0] <= 1'b0;
        next_state_fu_140[1] <= 1'b0;
        next_state_fu_140[2] <= 1'b0;
    end else if (((next_state_15_reg_838 == 32'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
                next_state_fu_140[2 : 0] <= select_ln365_fu_573_p3[2 : 0];
    end else if (((next_state_15_reg_838 == 32'd5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
                next_state_fu_140[2 : 0] <= select_ln379_fu_549_p3[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_s_fu_128 <= tmp_data_V;
        end else if ((1'b1 == ap_condition_668)) begin
            p_Val2_s_fu_128 <= tmp_data_V_78_fu_395_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln342_reg_896 == 1'd1) & (done_load_reg_867 == 1'd0) & (next_state_15_reg_838 == 32'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tLen_fu_132 <= 8'd0;
    end else if (((icmp_ln342_reg_896 == 1'd0) & (done_load_reg_867 == 1'd0) & (next_state_15_reg_838 == 32'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tLen_fu_132 <= tLen_14_reg_876;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (next_state_15_reg_838_pp0_iter2_reg == 32'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tLen_fu_132 <= tLen_13_fu_655_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tOffset_fu_136 <= 16'd0;
        end else if ((1'b1 == ap_condition_664)) begin
            tOffset_fu_136 <= tOffset_14_reg_881;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (next_state_15_reg_838_pp0_iter2_reg == 32'd6))) begin
            tOffset_fu_136 <= tOffset_13_fu_627_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        next_state_15_reg_838[2 : 0] <= ap_sig_allocacmp_next_state_15[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        code_s_7_reg_910_pp0_iter3_reg <= code_s_7_reg_910;
        dist_blen_fixed_V16_load_reg_915_pp0_iter3_reg <= dist_blen_fixed_V16_load_reg_915;
        done_load_reg_867_pp0_iter2_reg <= done_load_reg_867;
        done_load_reg_867_pp0_iter3_reg <= done_load_reg_867_pp0_iter2_reg;
        icmp_ln342_reg_896_pp0_iter2_reg <= icmp_ln342_reg_896;
        icmp_ln342_reg_896_pp0_iter3_reg <= icmp_ln342_reg_896_pp0_iter2_reg;
        next_state_15_reg_838_pp0_iter2_reg[2 : 0] <= next_state_15_reg_838[2 : 0];
        next_state_15_reg_838_pp0_iter3_reg[2 : 0] <= next_state_15_reg_838_pp0_iter2_reg[2 : 0];
        tCh_reg_871_pp0_iter2_reg <= tCh_reg_871;
        trunc_ln352_reg_857_pp0_iter2_reg[4 : 0] <= trunc_ln352_reg_857[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((next_state_15_reg_838 == 32'd5) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        code_s_7_reg_910 <= dist_codes_fixed30_q0;
        dist_blen_fixed_V16_load_reg_915 <= dist_blen_fixed_V16_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sig_allocacmp_next_state_15 == 32'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        done_load_reg_867 <= done_fu_116;
    end
end

always @ (posedge ap_clk) begin
    if (((done_fu_116 == 1'd0) & (ap_sig_allocacmp_next_state_15 == 32'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln342_reg_896 <= icmp_ln342_fu_497_p2;
        tCh_reg_871 <= tCh_fu_413_p1;
        tLen_14_reg_876 <= {{p_Val2_s_fu_128[15:8]}};
        tOffset_14_reg_881 <= {{p_Val2_s_fu_128[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((next_state_15_reg_838 == 32'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lextra_6_reg_920 <= huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits46_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((next_state_15_reg_838_pp0_iter2_reg == 32'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tLen_13_reg_935 <= tLen_13_fu_655_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((next_state_15_reg_838_pp0_iter2_reg == 32'd6) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln257_7_reg_930 <= trunc_ln257_7_fu_637_p1;
        trunc_ln259_reg_925 <= trunc_ln259_fu_633_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((next_state_15_load_fu_354_p1 == 32'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln352_reg_857[4 : 0] <= trunc_ln352_fu_380_p1[4 : 0];
    end
end

always @ (*) begin
    if (((done_load_load_fu_389_p1 == 1'd1) & (ap_sig_allocacmp_next_state_15 == 32'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((done_load_reg_867 == 1'd0) & (next_state_15_reg_838 == 32'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_dcode_load_7 = zext_ln339_7_fu_586_p1;
    end else begin
        ap_sig_allocacmp_dcode_load_7 = dcode_fu_124;
    end
end

always @ (*) begin
    if (((done_load_reg_867 == 1'd0) & (next_state_15_reg_838 == 32'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_lcode_load = zext_ln340_6_fu_590_p1;
    end else begin
        ap_sig_allocacmp_lcode_load = lcode_fu_120;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((next_state_15_reg_838 == 32'd1)) begin
            ap_sig_allocacmp_next_state_15 = select_ln365_fu_573_p3;
        end else if ((next_state_15_reg_838 == 32'd5)) begin
            ap_sig_allocacmp_next_state_15 = select_ln379_fu_549_p3;
        end else begin
            ap_sig_allocacmp_next_state_15 = next_state_fu_140;
        end
    end else begin
        ap_sig_allocacmp_next_state_15 = next_state_fu_140;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        base_dist2_ce0 = 1'b1;
    end else begin
        base_dist2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        base_length9_ce0 = 1'b1;
    end else begin
        base_length9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dist_blen_fixed_V16_ce0 = 1'b1;
    end else begin
        dist_blen_fixed_V16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dist_code23_ce0 = 1'b1;
    end else begin
        dist_code23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dist_codes_fixed30_ce0 = 1'b1;
    end else begin
        dist_codes_fixed30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op52_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        encodedOutStream_blk_n = encodedOutStream_empty_n;
    end else begin
        encodedOutStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op52_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        encodedOutStream_read = 1'b1;
    end else begin
        encodedOutStream_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op157_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd5) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd4) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        hufCodeStream_blk_n = hufCodeStream_full_n;
    end else begin
        hufCodeStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        if ((ap_predicate_op157_write_state5 == 1'b1)) begin
            hufCodeStream_din = p_0_fu_754_p4;
        end else if ((next_state_15_reg_838_pp0_iter3_reg == 32'd1)) begin
            hufCodeStream_din = p_s_fu_739_p4;
        end else if ((next_state_15_reg_838_pp0_iter3_reg == 32'd5)) begin
            hufCodeStream_din = p_013_fu_724_p4;
        end else if ((next_state_15_reg_838_pp0_iter3_reg == 32'd4)) begin
            hufCodeStream_din = p_012_fu_706_p5;
        end else if ((next_state_15_reg_838_pp0_iter3_reg == 32'd6)) begin
            hufCodeStream_din = p_011_fu_690_p4;
        end else begin
            hufCodeStream_din = 'bx;
        end
    end else begin
        hufCodeStream_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op157_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd5) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd4) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        hufCodeStream_write = 1'b1;
    end else begin
        hufCodeStream_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits38_ce0 = 1'b1;
    end else begin
        huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits46_ce0 = 1'b1;
    end else begin
        huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        length_code53_ce0 = 1'b1;
    end else begin
        length_code53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((1'b1 == ap_condition_313)) begin
            lit_blen_fixed_V60_address0 = zext_ln345_fu_685_p1;
        end else if ((next_state_15_reg_838_pp0_iter2_reg == 32'd1)) begin
            lit_blen_fixed_V60_address0 = zext_ln352_fu_671_p1;
        end else begin
            lit_blen_fixed_V60_address0 = 'bx;
        end
    end else begin
        lit_blen_fixed_V60_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln342_reg_896_pp0_iter2_reg == 1'd1) & (done_load_reg_867_pp0_iter2_reg == 1'd0) & (next_state_15_reg_838_pp0_iter2_reg == 32'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (next_state_15_reg_838_pp0_iter2_reg == 32'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        lit_blen_fixed_V60_ce0 = 1'b1;
    end else begin
        lit_blen_fixed_V60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((1'b1 == ap_condition_313)) begin
            lit_code_fixed67_address0 = zext_ln345_fu_685_p1;
        end else if ((next_state_15_reg_838_pp0_iter2_reg == 32'd1)) begin
            lit_code_fixed67_address0 = zext_ln352_fu_671_p1;
        end else begin
            lit_code_fixed67_address0 = 'bx;
        end
    end else begin
        lit_code_fixed67_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln342_reg_896_pp0_iter2_reg == 1'd1) & (done_load_reg_867_pp0_iter2_reg == 1'd0) & (next_state_15_reg_838_pp0_iter2_reg == 32'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (next_state_15_reg_838_pp0_iter2_reg == 32'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        lit_code_fixed67_ce0 = 1'b1;
    end else begin
        lit_code_fixed67_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln352_fu_666_p2 = ($signed(trunc_ln352_reg_857_pp0_iter2_reg) + $signed(9'd257));

assign add_ln380_fu_649_p2 = ($signed(tLen_fu_132) + $signed(8'd253));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((ap_predicate_op157_write_state5 == 1'b1) & (hufCodeStream_full_n == 1'b0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd1) & (hufCodeStream_full_n == 1'b0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd5) & (hufCodeStream_full_n == 1'b0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd4) & (hufCodeStream_full_n == 1'b0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd6) & (hufCodeStream_full_n == 1'b0)))) | ((ap_predicate_op52_read_state2 == 1'b1) & (encodedOutStream_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((ap_predicate_op157_write_state5 == 1'b1) & (hufCodeStream_full_n == 1'b0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd1) & (hufCodeStream_full_n == 1'b0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd5) & (hufCodeStream_full_n == 1'b0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd4) & (hufCodeStream_full_n == 1'b0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd6) & (hufCodeStream_full_n == 1'b0)))) | ((ap_predicate_op52_read_state2 == 1'b1) & (encodedOutStream_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((ap_predicate_op157_write_state5 == 1'b1) & (hufCodeStream_full_n == 1'b0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd1) & (hufCodeStream_full_n == 1'b0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd5) & (hufCodeStream_full_n == 1'b0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd4) & (hufCodeStream_full_n == 1'b0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd6) & (hufCodeStream_full_n == 1'b0)))) | ((ap_predicate_op52_read_state2 == 1'b1) & (encodedOutStream_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op52_read_state2 == 1'b1) & (encodedOutStream_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = (((ap_predicate_op157_write_state5 == 1'b1) & (hufCodeStream_full_n == 1'b0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd1) & (hufCodeStream_full_n == 1'b0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd5) & (hufCodeStream_full_n == 1'b0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd4) & (hufCodeStream_full_n == 1'b0)) | ((next_state_15_reg_838_pp0_iter3_reg == 32'd6) & (hufCodeStream_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_313 = ((icmp_ln342_reg_896_pp0_iter2_reg == 1'd1) & (done_load_reg_867_pp0_iter2_reg == 1'd0) & (next_state_15_reg_838_pp0_iter2_reg == 32'd0));
end

always @ (*) begin
    ap_condition_664 = ((done_load_reg_867 == 1'd0) & (next_state_15_reg_838 == 32'd0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_668 = ((done_fu_116 == 1'd0) & (ap_sig_allocacmp_next_state_15 == 32'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

always @ (*) begin
    ap_predicate_op157_write_state5 = ((icmp_ln342_reg_896_pp0_iter3_reg == 1'd1) & (done_load_reg_867_pp0_iter3_reg == 1'd0) & (next_state_15_reg_838_pp0_iter3_reg == 32'd0));
end

always @ (*) begin
    ap_predicate_op52_read_state2 = ((done_fu_116 == 1'd0) & (ap_sig_allocacmp_next_state_15 == 32'd0));
end

assign base_dist2_address0 = zext_ln388_fu_526_p1;

assign base_dist_load_cast_fu_623_p1 = base_dist2_q0;

assign base_length9_address0 = zext_ln380_fu_534_p1;

assign dextra_8_cast_cast_fu_539_p1 = huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits38_q0;

assign dist_blen_fixed_V16_address0 = zext_ln366_fu_370_p1;

assign dist_blen_fixed_V_load_cast_fu_718_p1 = dist_blen_fixed_V16_load_reg_915_pp0_iter3_reg;

assign dist_code23_address0 = zext_ln339_fu_487_p1;

assign dist_codes_fixed30_address0 = zext_ln366_fu_370_p1;

assign done_239_fu_407_p2 = (tmp_strobe_V_fu_399_p3 ^ 1'd1);

assign done_load_load_fu_389_p1 = done_fu_116;

assign huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits38_address0 = zext_ln366_fu_370_p1;

assign huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits46_address0 = zext_ln354_fu_384_p1;

assign icmp_ln339_fu_447_p2 = ((tmp_fu_437_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln342_fu_497_p2 = ((tLen_14_fu_417_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln360_fu_567_p2 = ((huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits46_q0 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln374_fu_543_p2 = ((huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits38_q0 != 4'd0) ? 1'b1 : 1'b0);

assign length_code53_address0 = zext_ln340_fu_492_p1;

assign lextra_8_cast_cast_fu_677_p1 = lextra_6_reg_920;

assign next_state_15_load_fu_354_p1 = ap_sig_allocacmp_next_state_15;

assign p_011_fu_690_p4 = {{{{1'd1}, {trunc_ln257_7_reg_930}}}, {trunc_ln259_reg_925}};

assign p_012_fu_706_p5 = {{{{{{1'd1}, {trunc_ln257_fu_702_p1}}}, {7'd0}}}, {tLen_13_reg_935}};

assign p_013_fu_724_p4 = {{{{1'd1}, {dist_blen_fixed_V_load_cast_fu_718_p1}}}, {zext_ln259_11_fu_721_p1}};

assign p_0_fu_754_p4 = {{{{1'd1}, {lit_blen_fixed_V60_q0}}}, {zext_ln259_12_fu_750_p1}};

assign p_s_fu_739_p4 = {{{{1'd1}, {lit_blen_fixed_V60_q0}}}, {zext_ln259_fu_735_p1}};

assign select_ln339_fu_479_p3 = ((icmp_ln339_fu_447_p2[0:0] == 1'b1) ? tOffset_14_cast_fu_453_p4 : xor_ln339_fu_473_p2);

assign select_ln365_fu_573_p3 = ((icmp_ln360_fu_567_p2[0:0] == 1'b1) ? 32'd4 : 32'd5);

assign select_ln379_fu_549_p3 = ((icmp_ln374_fu_543_p2[0:0] == 1'b1) ? 32'd6 : 32'd0);

assign tCh_fu_413_p1 = p_Val2_s_fu_128[7:0];

assign tLen_13_fu_655_p2 = (add_ln380_fu_649_p2 - base_length9_q0);

assign tLen_14_fu_417_p4 = {{p_Val2_s_fu_128[15:8]}};

assign tOffset_13_fu_627_p2 = (tOffset_fu_136 - base_dist_load_cast_fu_623_p1);

assign tOffset_14_cast_fu_453_p4 = {{p_Val2_s_fu_128[24:16]}};

assign tmp_data_V_78_fu_395_p1 = encodedOutStream_dout[31:0];

assign tmp_fu_437_p4 = {{p_Val2_s_fu_128[31:24]}};

assign tmp_strobe_V_fu_399_p3 = encodedOutStream_dout[32'd32];

assign trunc_ln257_7_fu_637_p1 = dextra_fu_108[3:0];

assign trunc_ln257_fu_702_p1 = lextra_fu_112[3:0];

assign trunc_ln259_fu_633_p1 = tOffset_13_fu_627_p2[14:0];

assign trunc_ln352_fu_380_p1 = ap_sig_allocacmp_lcode_load[8:0];

assign trunc_ln_fu_463_p4 = {{p_Val2_s_fu_128[31:23]}};

assign xor_ln339_fu_473_p2 = (trunc_ln_fu_463_p4 ^ 9'd256);

assign zext_ln259_11_fu_721_p1 = code_s_7_reg_910_pp0_iter3_reg;

assign zext_ln259_12_fu_750_p1 = lit_code_fixed67_q0;

assign zext_ln259_fu_735_p1 = lit_code_fixed67_q0;

assign zext_ln339_7_fu_586_p1 = dist_code23_q0;

assign zext_ln339_fu_487_p1 = select_ln339_fu_479_p3;

assign zext_ln340_6_fu_590_p1 = length_code53_q0;

assign zext_ln340_fu_492_p1 = tLen_14_fu_417_p4;

assign zext_ln345_fu_685_p1 = tCh_reg_871_pp0_iter2_reg;

assign zext_ln352_fu_671_p1 = add_ln352_fu_666_p2;

assign zext_ln354_fu_384_p1 = ap_sig_allocacmp_lcode_load;

assign zext_ln366_fu_370_p1 = ap_sig_allocacmp_dcode_load_7;

assign zext_ln380_fu_534_p1 = lcode_fu_120;

assign zext_ln388_fu_526_p1 = dcode_fu_124;

always @ (posedge ap_clk) begin
    next_state_15_reg_838[31:3] <= 29'b00000000000000000000000000000;
    next_state_15_reg_838_pp0_iter3_reg[31:3] <= 29'b00000000000000000000000000000;
    next_state_15_reg_838_pp0_iter2_reg[31:3] <= 29'b00000000000000000000000000000;
    trunc_ln352_reg_857[8:5] <= 4'b0000;
    trunc_ln352_reg_857_pp0_iter2_reg[8:5] <= 4'b0000;
    dextra_fu_108[7:4] <= 4'b0000;
    lextra_fu_112[7:3] <= 5'b00000;
    lcode_fu_120[15:5] <= 11'b00000000000;
    dcode_fu_124[15:5] <= 11'b00000000000;
    next_state_fu_140[31:3] <= 29'b00000000000000000000000000000;
end

endmodule //gzipcMulticoreStreaming_huffmanEncoderStatic_47_Pipeline_huffman_loop
