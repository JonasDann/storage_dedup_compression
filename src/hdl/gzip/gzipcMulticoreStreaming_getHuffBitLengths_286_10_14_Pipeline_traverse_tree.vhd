-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_getHuffBitLengths_286_10_14_Pipeline_traverse_tree is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    length_r : IN STD_LOGIC_VECTOR (13 downto 0);
    prevParent_V : IN STD_LOGIC_VECTOR (9 downto 0);
    sext_ln724 : IN STD_LOGIC_VECTOR (10 downto 0);
    temp_array_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    temp_array_V_ce0 : OUT STD_LOGIC;
    temp_array_V_we0 : OUT STD_LOGIC;
    temp_array_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    temp_array_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    parent_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    parent_V_ce0 : OUT STD_LOGIC;
    parent_V_q0 : IN STD_LOGIC_VECTOR (9 downto 0);
    empty : IN STD_LOGIC_VECTOR (285 downto 0);
    p_lcssa341354 : IN STD_LOGIC_VECTOR (285 downto 0);
    length_histogram_V_19_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_19_out_ap_vld : OUT STD_LOGIC;
    length_histogram_V_18_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_18_out_ap_vld : OUT STD_LOGIC;
    length_histogram_V_17_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_17_out_ap_vld : OUT STD_LOGIC;
    length_histogram_V_16_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_16_out_ap_vld : OUT STD_LOGIC;
    length_histogram_V_15_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_15_out_ap_vld : OUT STD_LOGIC;
    length_histogram_V_14_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_14_out_ap_vld : OUT STD_LOGIC;
    length_histogram_V_13_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_13_out_ap_vld : OUT STD_LOGIC;
    length_histogram_V_12_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_12_out_ap_vld : OUT STD_LOGIC;
    length_histogram_V_11_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_11_out_ap_vld : OUT STD_LOGIC;
    length_histogram_V_10_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_10_out_ap_vld : OUT STD_LOGIC;
    length_histogram_V_9_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_9_out_ap_vld : OUT STD_LOGIC;
    length_histogram_V_8_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_8_out_ap_vld : OUT STD_LOGIC;
    length_histogram_V_7_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_7_out_ap_vld : OUT STD_LOGIC;
    length_histogram_V_6_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_6_out_ap_vld : OUT STD_LOGIC;
    length_histogram_V_5_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_5_out_ap_vld : OUT STD_LOGIC;
    length_histogram_V_4_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_4_out_ap_vld : OUT STD_LOGIC;
    length_histogram_V_3_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_3_out_ap_vld : OUT STD_LOGIC;
    length_histogram_V_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    length_histogram_V_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of gzipcMulticoreStreaming_getHuffBitLengths_286_10_14_Pipeline_traverse_tree is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv286_lc_3 : STD_LOGIC_VECTOR (285 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv286_lc_2 : STD_LOGIC_VECTOR (285 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal tmp_311_fu_532_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_81_reg_1104 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_311_reg_1111 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_311_reg_1111_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln727_fu_540_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln727_reg_1115 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln727_reg_1115_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal prevParent_V_2_reg_1125 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln1069_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_reg_1130 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_reg_1130_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_fu_563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_reg_1134 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_reg_1134_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_fu_577_p2 : STD_LOGIC_VECTOR (285 downto 0);
    signal tmp_V_reg_1139 : STD_LOGIC_VECTOR (285 downto 0);
    signal length_4_load_reg_1145 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln739_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln739_reg_1157 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln740_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln740_reg_1161 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln587_fu_597_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal length_histogram_V_fu_146 : STD_LOGIC_VECTOR (11 downto 0);
    signal length_histogram_V_20_fu_758_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln886_fu_764_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal length_histogram_V_3_fu_150 : STD_LOGIC_VECTOR (11 downto 0);
    signal length_histogram_V_4_fu_154 : STD_LOGIC_VECTOR (11 downto 0);
    signal length_histogram_V_5_fu_158 : STD_LOGIC_VECTOR (11 downto 0);
    signal length_histogram_V_6_fu_162 : STD_LOGIC_VECTOR (11 downto 0);
    signal length_histogram_V_7_fu_166 : STD_LOGIC_VECTOR (11 downto 0);
    signal length_histogram_V_8_fu_170 : STD_LOGIC_VECTOR (11 downto 0);
    signal length_histogram_V_9_fu_174 : STD_LOGIC_VECTOR (11 downto 0);
    signal length_histogram_V_10_fu_178 : STD_LOGIC_VECTOR (11 downto 0);
    signal length_histogram_V_11_fu_182 : STD_LOGIC_VECTOR (11 downto 0);
    signal length_histogram_V_12_fu_186 : STD_LOGIC_VECTOR (11 downto 0);
    signal length_histogram_V_13_fu_190 : STD_LOGIC_VECTOR (11 downto 0);
    signal length_histogram_V_14_fu_194 : STD_LOGIC_VECTOR (11 downto 0);
    signal length_histogram_V_15_fu_198 : STD_LOGIC_VECTOR (11 downto 0);
    signal length_histogram_V_16_fu_202 : STD_LOGIC_VECTOR (11 downto 0);
    signal length_histogram_V_17_fu_206 : STD_LOGIC_VECTOR (11 downto 0);
    signal length_histogram_V_18_fu_210 : STD_LOGIC_VECTOR (11 downto 0);
    signal length_histogram_V_19_fu_214 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_fu_218 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_fu_583_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln724_cast_fu_420_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_i_81 : STD_LOGIC_VECTOR (15 downto 0);
    signal prevParent_V_1_fu_222 : STD_LOGIC_VECTOR (9 downto 0);
    signal length_4_fu_226 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln232_fu_645_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_sig_allocacmp_length_4_load : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln1069_fu_548_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln730_fu_558_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1027_fu_574_p1 : STD_LOGIC_VECTOR (285 downto 0);
    signal ret_V_fu_601_p2 : STD_LOGIC_VECTOR (285 downto 0);
    signal ret_V_4_fu_611_p2 : STD_LOGIC_VECTOR (285 downto 0);
    signal is_left_internal_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_right_internal_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln740_fu_627_p2 : STD_LOGIC_VECTOR (285 downto 0);
    signal select_ln1065_fu_639_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_fu_717_p20 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln886_fu_710_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_685 : BOOLEAN;
    signal ap_condition_690 : BOOLEAN;
    signal ap_condition_695 : BOOLEAN;
    signal ap_condition_700 : BOOLEAN;
    signal ap_condition_705 : BOOLEAN;
    signal ap_condition_710 : BOOLEAN;
    signal ap_condition_715 : BOOLEAN;
    signal ap_condition_720 : BOOLEAN;
    signal ap_condition_725 : BOOLEAN;
    signal ap_condition_746 : BOOLEAN;
    signal ap_condition_751 : BOOLEAN;
    signal ap_condition_756 : BOOLEAN;
    signal ap_condition_761 : BOOLEAN;
    signal ap_condition_766 : BOOLEAN;
    signal ap_condition_771 : BOOLEAN;
    signal ap_condition_776 : BOOLEAN;
    signal ap_condition_781 : BOOLEAN;
    signal ap_condition_786 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component gzipcMulticoreStreaming_mux_1814_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        din3 : IN STD_LOGIC_VECTOR (11 downto 0);
        din4 : IN STD_LOGIC_VECTOR (11 downto 0);
        din5 : IN STD_LOGIC_VECTOR (11 downto 0);
        din6 : IN STD_LOGIC_VECTOR (11 downto 0);
        din7 : IN STD_LOGIC_VECTOR (11 downto 0);
        din8 : IN STD_LOGIC_VECTOR (11 downto 0);
        din9 : IN STD_LOGIC_VECTOR (11 downto 0);
        din10 : IN STD_LOGIC_VECTOR (11 downto 0);
        din11 : IN STD_LOGIC_VECTOR (11 downto 0);
        din12 : IN STD_LOGIC_VECTOR (11 downto 0);
        din13 : IN STD_LOGIC_VECTOR (11 downto 0);
        din14 : IN STD_LOGIC_VECTOR (11 downto 0);
        din15 : IN STD_LOGIC_VECTOR (11 downto 0);
        din16 : IN STD_LOGIC_VECTOR (11 downto 0);
        din17 : IN STD_LOGIC_VECTOR (11 downto 0);
        din18 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_1814_12_1_1_U1372 : component gzipcMulticoreStreaming_mux_1814_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        din4_WIDTH => 12,
        din5_WIDTH => 12,
        din6_WIDTH => 12,
        din7_WIDTH => 12,
        din8_WIDTH => 12,
        din9_WIDTH => 12,
        din10_WIDTH => 12,
        din11_WIDTH => 12,
        din12_WIDTH => 12,
        din13_WIDTH => 12,
        din14_WIDTH => 12,
        din15_WIDTH => 12,
        din16_WIDTH => 12,
        din17_WIDTH => 12,
        din18_WIDTH => 14,
        dout_WIDTH => 12)
    port map (
        din0 => length_histogram_V_fu_146,
        din1 => length_histogram_V_3_fu_150,
        din2 => length_histogram_V_4_fu_154,
        din3 => length_histogram_V_5_fu_158,
        din4 => length_histogram_V_6_fu_162,
        din5 => length_histogram_V_7_fu_166,
        din6 => length_histogram_V_8_fu_170,
        din7 => length_histogram_V_9_fu_174,
        din8 => length_histogram_V_10_fu_178,
        din9 => length_histogram_V_11_fu_182,
        din10 => length_histogram_V_12_fu_186,
        din11 => length_histogram_V_13_fu_190,
        din12 => length_histogram_V_14_fu_194,
        din13 => length_histogram_V_15_fu_198,
        din14 => length_histogram_V_16_fu_202,
        din15 => length_histogram_V_17_fu_206,
        din16 => length_histogram_V_18_fu_210,
        din17 => length_histogram_V_19_fu_214,
        din18 => length_4_load_reg_1145,
        dout => tmp_s_fu_717_p20);

    flow_control_loop_pipe_sequential_init_U : component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    length_4_fu_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_4_fu_226 <= length_r;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_0))) then 
                    length_4_fu_226 <= add_ln232_fu_645_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_10_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_10_fu_178 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_685)) then 
                    length_histogram_V_10_fu_178 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_11_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_11_fu_182 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_690)) then 
                    length_histogram_V_11_fu_182 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_12_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_12_fu_186 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_695)) then 
                    length_histogram_V_12_fu_186 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_13_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_13_fu_190 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_700)) then 
                    length_histogram_V_13_fu_190 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_14_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_14_fu_194 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_705)) then 
                    length_histogram_V_14_fu_194 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_15_fu_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_15_fu_198 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_710)) then 
                    length_histogram_V_15_fu_198 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_16_fu_202_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_16_fu_202 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_715)) then 
                    length_histogram_V_16_fu_202 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_17_fu_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_17_fu_206 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_720)) then 
                    length_histogram_V_17_fu_206 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_18_fu_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_18_fu_210 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_725)) then 
                    length_histogram_V_18_fu_210 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_19_fu_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_19_fu_214 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_746)) then 
                    length_histogram_V_19_fu_214 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_3_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_3_fu_150 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_751)) then 
                    length_histogram_V_3_fu_150 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_4_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_4_fu_154 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_756)) then 
                    length_histogram_V_4_fu_154 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_5_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_5_fu_158 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_761)) then 
                    length_histogram_V_5_fu_158 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_6_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_6_fu_162 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_766)) then 
                    length_histogram_V_6_fu_162 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_7_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_7_fu_166 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_771)) then 
                    length_histogram_V_7_fu_166 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_8_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_8_fu_170 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_776)) then 
                    length_histogram_V_8_fu_170 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_9_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_9_fu_174 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_781)) then 
                    length_histogram_V_9_fu_174 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    length_histogram_V_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    length_histogram_V_fu_146 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_786)) then 
                    length_histogram_V_fu_146 <= length_histogram_V_20_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    prevParent_V_1_fu_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    prevParent_V_1_fu_222 <= prevParent_V;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1069_fu_552_p2 = ap_const_lv1_0))) then 
                    prevParent_V_1_fu_222 <= parent_V_q0;
                end if;
            end if; 
        end if;
    end process;

    sh_fu_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    sh_fu_218 <= sext_ln724_cast_fu_420_p1;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1069_fu_552_p2 = ap_const_lv1_1))) then 
                    sh_fu_218 <= i_fu_583_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                i_81_reg_1104 <= ap_sig_allocacmp_i_81;
                icmp_ln1069_reg_1130 <= icmp_ln1069_fu_552_p2;
                prevParent_V_2_reg_1125 <= parent_V_q0;
                tmp_311_reg_1111 <= ap_sig_allocacmp_i_81(15 downto 15);
                tmp_311_reg_1111_pp0_iter1_reg <= tmp_311_reg_1111;
                    zext_ln727_reg_1115_pp0_iter1_reg(15 downto 0) <= zext_ln727_reg_1115(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1069_fu_552_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1065_reg_1134 <= icmp_ln1065_fu_563_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln1065_reg_1134_pp0_iter2_reg <= icmp_ln1065_reg_1134;
                icmp_ln1069_reg_1130_pp0_iter2_reg <= icmp_ln1069_reg_1130;
                length_4_load_reg_1145 <= ap_sig_allocacmp_length_4_load;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln739_fu_621_p2 = ap_const_lv1_1) and (icmp_ln1069_reg_1130 = ap_const_lv1_1))) then
                icmp_ln740_reg_1161 <= icmp_ln740_fu_633_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1069_reg_1130 = ap_const_lv1_1))) then
                or_ln739_reg_1157 <= or_ln739_fu_621_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1069_fu_552_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_V_reg_1139 <= tmp_V_fu_577_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_311_fu_532_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    zext_ln727_reg_1115(15 downto 0) <= zext_ln727_fu_540_p1(15 downto 0);
            end if;
        end if;
    end process;
    zext_ln727_reg_1115(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    zext_ln727_reg_1115_pp0_iter1_reg(63 downto 16) <= "000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln232_fu_645_p2 <= std_logic_vector(unsigned(select_ln1065_fu_639_p3) + unsigned(ap_const_lv14_1));
    add_ln730_fu_558_p2 <= std_logic_vector(unsigned(i_81_reg_1104) + unsigned(ap_const_lv16_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_685_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_685 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln886_fu_764_p1 = ap_const_lv5_8) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_690_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_690 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln886_fu_764_p1 = ap_const_lv5_9) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_695_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_695 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln886_fu_764_p1 = ap_const_lv5_A) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_700_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_700 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln886_fu_764_p1 = ap_const_lv5_B) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_705_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_705 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln886_fu_764_p1 = ap_const_lv5_C) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_710_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_710 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln886_fu_764_p1 = ap_const_lv5_D) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_715_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_715 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln886_fu_764_p1 = ap_const_lv5_E) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_720_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_720 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln886_fu_764_p1 = ap_const_lv5_F) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_725_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_725 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln886_fu_764_p1 = ap_const_lv5_10) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_746_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_746 <= (not((trunc_ln886_fu_764_p1 = ap_const_lv5_10)) and not((trunc_ln886_fu_764_p1 = ap_const_lv5_F)) and not((trunc_ln886_fu_764_p1 = ap_const_lv5_E)) and not((trunc_ln886_fu_764_p1 = ap_const_lv5_D)) and not((trunc_ln886_fu_764_p1 = ap_const_lv5_C)) and not((trunc_ln886_fu_764_p1 = ap_const_lv5_B)) and not((trunc_ln886_fu_764_p1 = ap_const_lv5_A)) and not((trunc_ln886_fu_764_p1 = ap_const_lv5_9)) and not((trunc_ln886_fu_764_p1 = ap_const_lv5_8)) and not((trunc_ln886_fu_764_p1 = ap_const_lv5_7)) and not((trunc_ln886_fu_764_p1 = ap_const_lv5_6)) and not((trunc_ln886_fu_764_p1 = ap_const_lv5_5)) and not((trunc_ln886_fu_764_p1 = ap_const_lv5_4)) and not((trunc_ln886_fu_764_p1 = ap_const_lv5_3)) and not((trunc_ln886_fu_764_p1 = ap_const_lv5_2)) and not((trunc_ln886_fu_764_p1 = ap_const_lv5_1)) and not((trunc_ln886_fu_764_p1 = ap_const_lv5_0)) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_751_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_751 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln886_fu_764_p1 = ap_const_lv5_1) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_756_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_756 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln886_fu_764_p1 = ap_const_lv5_2) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_761_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_761 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln886_fu_764_p1 = ap_const_lv5_3) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_766_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_766 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln886_fu_764_p1 = ap_const_lv5_4) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_771_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_771 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln886_fu_764_p1 = ap_const_lv5_5) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_776_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_776 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln886_fu_764_p1 = ap_const_lv5_6) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_781_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_781 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln886_fu_764_p1 = ap_const_lv5_7) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_786_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, or_ln739_reg_1157, trunc_ln886_fu_764_p1)
    begin
                ap_condition_786 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln886_fu_764_p1 = ap_const_lv5_0) and (or_ln739_reg_1157 = ap_const_lv1_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, tmp_311_fu_532_p3)
    begin
        if (((tmp_311_fu_532_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_81_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1069_fu_552_p2, ap_block_pp0_stage0, ap_loop_init, sh_fu_218, i_fu_583_p2, sext_ln724_cast_fu_420_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                ap_sig_allocacmp_i_81 <= sext_ln724_cast_fu_420_p1;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1069_fu_552_p2 = ap_const_lv1_1))) then 
                ap_sig_allocacmp_i_81 <= i_fu_583_p2;
            else 
                ap_sig_allocacmp_i_81 <= sh_fu_218;
            end if;
        else 
            ap_sig_allocacmp_i_81 <= sh_fu_218;
        end if; 
    end process;


    ap_sig_allocacmp_length_4_load_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1069_reg_1130_pp0_iter2_reg, ap_block_pp0_stage0, length_4_fu_226, add_ln232_fu_645_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1069_reg_1130_pp0_iter2_reg = ap_const_lv1_0))) then 
            ap_sig_allocacmp_length_4_load <= add_ln232_fu_645_p2;
        else 
            ap_sig_allocacmp_length_4_load <= length_4_fu_226;
        end if; 
    end process;

    i_fu_583_p2 <= std_logic_vector(unsigned(i_81_reg_1104) + unsigned(ap_const_lv16_FFFF));
    icmp_ln1065_fu_563_p2 <= "1" when (zext_ln1069_fu_548_p1 = add_ln730_fu_558_p2) else "0";
    icmp_ln1069_fu_552_p2 <= "1" when (parent_V_q0 = prevParent_V_1_fu_222) else "0";
    icmp_ln740_fu_633_p2 <= "1" when (or_ln740_fu_627_p2 = ap_const_lv286_lc_2) else "0";
    is_left_internal_fu_605_p2 <= "1" when (ret_V_fu_601_p2 = ap_const_lv286_lc_2) else "0";
    is_right_internal_fu_615_p2 <= "1" when (ret_V_4_fu_611_p2 = ap_const_lv286_lc_2) else "0";
    length_histogram_V_10_out <= length_histogram_V_10_fu_178;

    length_histogram_V_10_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_10_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    length_histogram_V_11_out <= length_histogram_V_11_fu_182;

    length_histogram_V_11_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_11_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_11_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    length_histogram_V_12_out <= length_histogram_V_12_fu_186;

    length_histogram_V_12_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_12_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_12_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    length_histogram_V_13_out <= length_histogram_V_13_fu_190;

    length_histogram_V_13_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_13_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_13_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    length_histogram_V_14_out <= length_histogram_V_14_fu_194;

    length_histogram_V_14_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_14_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_14_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    length_histogram_V_15_out <= length_histogram_V_15_fu_198;

    length_histogram_V_15_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_15_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_15_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    length_histogram_V_16_out <= length_histogram_V_16_fu_202;

    length_histogram_V_16_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_16_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_16_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    length_histogram_V_17_out <= length_histogram_V_17_fu_206;

    length_histogram_V_17_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_17_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_17_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    length_histogram_V_18_out <= length_histogram_V_18_fu_210;

    length_histogram_V_18_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_18_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_18_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    length_histogram_V_19_out <= length_histogram_V_19_fu_214;

    length_histogram_V_19_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_19_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_19_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    length_histogram_V_20_fu_758_p2 <= std_logic_vector(unsigned(tmp_s_fu_717_p20) + unsigned(select_ln886_fu_710_p3));
    length_histogram_V_3_out <= length_histogram_V_3_fu_150;

    length_histogram_V_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_3_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    length_histogram_V_4_out <= length_histogram_V_4_fu_154;

    length_histogram_V_4_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_4_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    length_histogram_V_5_out <= length_histogram_V_5_fu_158;

    length_histogram_V_5_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_5_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    length_histogram_V_6_out <= length_histogram_V_6_fu_162;

    length_histogram_V_6_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_6_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    length_histogram_V_7_out <= length_histogram_V_7_fu_166;

    length_histogram_V_7_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_7_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    length_histogram_V_8_out <= length_histogram_V_8_fu_170;

    length_histogram_V_8_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_8_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    length_histogram_V_9_out <= length_histogram_V_9_fu_174;

    length_histogram_V_9_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_9_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    length_histogram_V_out <= length_histogram_V_fu_146;

    length_histogram_V_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, tmp_311_reg_1111_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_311_reg_1111_pp0_iter1_reg = ap_const_lv1_1))) then 
            length_histogram_V_out_ap_vld <= ap_const_logic_1;
        else 
            length_histogram_V_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln739_fu_621_p2 <= (is_right_internal_fu_615_p2 or is_left_internal_fu_605_p2);
    or_ln740_fu_627_p2 <= (ret_V_fu_601_p2 or ret_V_4_fu_611_p2);
    parent_V_address0 <= zext_ln727_fu_540_p1(9 - 1 downto 0);

    parent_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            parent_V_ce0 <= ap_const_logic_1;
        else 
            parent_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_4_fu_611_p2 <= (tmp_V_reg_1139 and p_lcssa341354);
    ret_V_fu_601_p2 <= (tmp_V_reg_1139 and empty);
    select_ln1065_fu_639_p3 <= 
        length_4_load_reg_1145 when (icmp_ln1065_reg_1134_pp0_iter2_reg(0) = '1') else 
        temp_array_V_q0;
    select_ln886_fu_710_p3 <= 
        ap_const_lv12_2 when (icmp_ln740_reg_1161(0) = '1') else 
        ap_const_lv12_1;
        sext_ln724_cast_fu_420_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln724),16));


    temp_array_V_address0_assign_proc : process(ap_enable_reg_pp0_iter2, zext_ln727_reg_1115_pp0_iter1_reg, icmp_ln1069_reg_1130, icmp_ln1065_reg_1134, ap_block_pp0_stage0, zext_ln587_fu_597_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((icmp_ln1069_reg_1130 = ap_const_lv1_1)) then 
                temp_array_V_address0 <= zext_ln727_reg_1115_pp0_iter1_reg(9 - 1 downto 0);
            elsif (((icmp_ln1065_reg_1134 = ap_const_lv1_0) and (icmp_ln1069_reg_1130 = ap_const_lv1_0))) then 
                temp_array_V_address0 <= zext_ln587_fu_597_p1(9 - 1 downto 0);
            else 
                temp_array_V_address0 <= "XXXXXXXXX";
            end if;
        else 
            temp_array_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    temp_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln1069_reg_1130, icmp_ln1065_reg_1134)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1069_reg_1130 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1065_reg_1134 = ap_const_lv1_0) and (icmp_ln1069_reg_1130 = ap_const_lv1_0)))) then 
            temp_array_V_ce0 <= ap_const_logic_1;
        else 
            temp_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_array_V_d0 <= ap_sig_allocacmp_length_4_load;

    temp_array_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln1069_reg_1130)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1069_reg_1130 = ap_const_lv1_1))) then 
            temp_array_V_we0 <= ap_const_logic_1;
        else 
            temp_array_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_311_fu_532_p3 <= ap_sig_allocacmp_i_81(15 downto 15);
    tmp_V_fu_577_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv286_lc_3),to_integer(unsigned('0' & zext_ln1027_fu_574_p1(31-1 downto 0)))));
    trunc_ln886_fu_764_p1 <= length_4_load_reg_1145(5 - 1 downto 0);
    zext_ln1027_fu_574_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_81_reg_1104),286));
    zext_ln1069_fu_548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(parent_V_q0),16));
    zext_ln587_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(prevParent_V_2_reg_1125),64));
    zext_ln727_fu_540_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_i_81),64));
end behav;
