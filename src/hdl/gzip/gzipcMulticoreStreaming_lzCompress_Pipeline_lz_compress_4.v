// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gzipcMulticoreStreaming_lzCompress_Pipeline_lz_compress_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        downStream_3_dout,
        downStream_3_num_data_valid,
        downStream_3_fifo_cap,
        downStream_3_empty_n,
        downStream_3_read,
        lclBufStream_dout,
        lclBufStream_empty_n,
        lclBufStream_read,
        lclBufStream_din,
        lclBufStream_full_n,
        lclBufStream_write,
        compressedStream_din,
        compressedStream_num_data_valid,
        compressedStream_fifo_cap,
        compressedStream_full_n,
        compressedStream_write,
        present_window_89_reload,
        present_window_88_reload,
        present_window_87_reload,
        present_window_86_reload,
        present_window_85_reload,
        inVal_data_V_reload,
        tmp_205_cast,
        dict_V_address0,
        dict_V_ce0,
        dict_V_we0,
        dict_V_d0,
        dict_V_address1,
        dict_V_ce1,
        dict_V_q1,
        mul,
        trunc_ln16,
        present_window_96_out,
        present_window_96_out_ap_vld,
        present_window_97_out,
        present_window_97_out_ap_vld,
        present_window_98_out,
        present_window_98_out_ap_vld,
        present_window_99_out,
        present_window_99_out_ap_vld,
        present_window_100_out,
        present_window_100_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [8:0] downStream_3_dout;
input  [5:0] downStream_3_num_data_valid;
input  [5:0] downStream_3_fifo_cap;
input   downStream_3_empty_n;
output   downStream_3_read;
input  [7:0] lclBufStream_dout;
input   lclBufStream_empty_n;
output   lclBufStream_read;
output  [7:0] lclBufStream_din;
input   lclBufStream_full_n;
output   lclBufStream_write;
output  [32:0] compressedStream_din;
input  [2:0] compressedStream_num_data_valid;
input  [2:0] compressedStream_fifo_cap;
input   compressedStream_full_n;
output   compressedStream_write;
input  [7:0] present_window_89_reload;
input  [7:0] present_window_88_reload;
input  [7:0] present_window_87_reload;
input  [7:0] present_window_86_reload;
input  [7:0] present_window_85_reload;
input  [7:0] inVal_data_V_reload;
input  [0:0] tmp_205_cast;
output  [11:0] dict_V_address0;
output   dict_V_ce0;
output   dict_V_we0;
output  [431:0] dict_V_d0;
output  [11:0] dict_V_address1;
output   dict_V_ce1;
input  [431:0] dict_V_q1;
input  [31:0] mul;
input  [23:0] trunc_ln16;
output  [7:0] present_window_96_out;
output   present_window_96_out_ap_vld;
output  [7:0] present_window_97_out;
output   present_window_97_out_ap_vld;
output  [7:0] present_window_98_out;
output   present_window_98_out_ap_vld;
output  [7:0] present_window_99_out;
output   present_window_99_out_ap_vld;
output  [7:0] present_window_100_out;
output   present_window_100_out_ap_vld;

reg ap_idle;
reg downStream_3_read;
reg lclBufStream_read;
reg lclBufStream_write;
reg compressedStream_write;
reg dict_V_ce0;
reg dict_V_we0;
reg dict_V_ce1;
reg present_window_96_out_ap_vld;
reg present_window_97_out_ap_vld;
reg present_window_98_out_ap_vld;
reg present_window_99_out_ap_vld;
reg present_window_100_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
reg   [0:0] ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] nextVal_strobe_V_reg_462;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
reg   [0:0] nextVal_strobe_V_reg_462_pp0_iter6_reg;
reg    ap_block_state8_pp0_stage0_iter7;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    lclBufStream_i_blk_n;
wire    ap_block_pp0_stage0;
reg    lclBufStream_o_blk_n;
reg    downStream_3_blk_n;
reg    compressedStream_blk_n;
reg   [0:0] nextVal_strobe_V_reg_462_pp0_iter1_reg;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] nextVal_strobe_V_reg_462_pp0_iter2_reg;
reg   [0:0] nextVal_strobe_V_reg_462_pp0_iter3_reg;
reg   [0:0] nextVal_strobe_V_reg_462_pp0_iter4_reg;
reg   [0:0] nextVal_strobe_V_reg_462_pp0_iter5_reg;
reg   [7:0] tmp_data_V_load_reg_2942;
reg   [0:0] tmp_reg_2947;
reg   [7:0] present_window_90_reg_2952;
reg   [7:0] present_window_90_reg_2952_pp0_iter2_reg;
reg   [7:0] present_window_90_reg_2952_pp0_iter3_reg;
reg   [7:0] present_window_90_reg_2952_pp0_iter4_reg;
reg   [7:0] present_window_90_reg_2952_pp0_iter5_reg;
reg   [7:0] present_window_89_reg_2964;
reg   [7:0] present_window_89_reg_2964_pp0_iter2_reg;
reg   [7:0] present_window_89_reg_2964_pp0_iter3_reg;
reg   [7:0] present_window_89_reg_2964_pp0_iter4_reg;
reg   [7:0] present_window_89_reg_2964_pp0_iter5_reg;
reg   [7:0] present_window_88_reg_2976;
reg   [7:0] present_window_88_reg_2976_pp0_iter2_reg;
reg   [7:0] present_window_88_reg_2976_pp0_iter3_reg;
reg   [7:0] present_window_88_reg_2976_pp0_iter4_reg;
reg   [7:0] present_window_88_reg_2976_pp0_iter5_reg;
reg   [7:0] present_window_87_reg_2988;
reg   [7:0] present_window_87_reg_2988_pp0_iter2_reg;
reg   [7:0] present_window_87_reg_2988_pp0_iter3_reg;
reg   [7:0] present_window_87_reg_2988_pp0_iter4_reg;
reg   [7:0] present_window_87_reg_2988_pp0_iter5_reg;
reg   [7:0] present_window_load_reg_3000;
reg   [7:0] present_window_load_reg_3000_pp0_iter2_reg;
reg   [7:0] present_window_load_reg_3000_pp0_iter3_reg;
reg   [7:0] present_window_load_reg_3000_pp0_iter4_reg;
reg   [7:0] present_window_load_reg_3000_pp0_iter5_reg;
reg   [7:0] present_window_load_reg_3000_pp0_iter6_reg;
reg   [7:0] tmp_158_reg_3012;
reg   [7:0] tmp_158_reg_3012_pp0_iter2_reg;
reg   [11:0] dict_V_addr_reg_3023;
reg   [11:0] dict_V_addr_reg_3023_pp0_iter2_reg;
wire   [359:0] trunc_ln1715_fu_645_p1;
reg   [359:0] trunc_ln1715_reg_3029;
reg   [23:0] compareIdx_reg_3034;
wire   [0:0] len_fu_663_p2;
reg   [0:0] len_reg_3039;
wire   [0:0] icmp_ln321_fu_678_p2;
reg   [0:0] icmp_ln321_reg_3046;
wire   [0:0] icmp_ln321_107_fu_693_p2;
reg   [0:0] icmp_ln321_107_reg_3051;
wire   [0:0] icmp_ln321_108_fu_708_p2;
reg   [0:0] icmp_ln321_108_reg_3056;
wire   [0:0] icmp_ln321_109_fu_723_p2;
reg   [0:0] icmp_ln321_109_reg_3061;
wire   [0:0] icmp_ln321_110_fu_738_p2;
reg   [0:0] icmp_ln321_110_reg_3066;
reg   [0:0] icmp_ln321_110_reg_3066_pp0_iter3_reg;
reg   [23:0] compareIdx_16_reg_3071;
wire   [0:0] len_243_fu_763_p2;
reg   [0:0] len_243_reg_3076;
wire   [0:0] icmp_ln321_112_fu_778_p2;
reg   [0:0] icmp_ln321_112_reg_3083;
wire   [0:0] icmp_ln321_113_fu_793_p2;
reg   [0:0] icmp_ln321_113_reg_3088;
wire   [0:0] icmp_ln321_114_fu_808_p2;
reg   [0:0] icmp_ln321_114_reg_3093;
wire   [0:0] icmp_ln321_115_fu_823_p2;
reg   [0:0] icmp_ln321_115_reg_3098;
wire   [0:0] icmp_ln321_116_fu_838_p2;
reg   [0:0] icmp_ln321_116_reg_3103;
reg   [0:0] icmp_ln321_116_reg_3103_pp0_iter3_reg;
reg   [23:0] compareIdx_17_reg_3108;
wire   [0:0] len_255_fu_863_p2;
reg   [0:0] len_255_reg_3113;
wire   [0:0] icmp_ln321_118_fu_878_p2;
reg   [0:0] icmp_ln321_118_reg_3120;
wire   [0:0] icmp_ln321_119_fu_893_p2;
reg   [0:0] icmp_ln321_119_reg_3125;
wire   [0:0] icmp_ln321_120_fu_908_p2;
reg   [0:0] icmp_ln321_120_reg_3130;
wire   [0:0] icmp_ln321_121_fu_923_p2;
reg   [0:0] icmp_ln321_121_reg_3135;
wire   [0:0] icmp_ln321_122_fu_938_p2;
reg   [0:0] icmp_ln321_122_reg_3140;
reg   [0:0] icmp_ln321_122_reg_3140_pp0_iter3_reg;
reg   [23:0] compareIdx_18_reg_3145;
wire   [0:0] len_267_fu_963_p2;
reg   [0:0] len_267_reg_3150;
wire   [0:0] icmp_ln321_124_fu_978_p2;
reg   [0:0] icmp_ln321_124_reg_3157;
wire   [0:0] icmp_ln321_125_fu_993_p2;
reg   [0:0] icmp_ln321_125_reg_3162;
wire   [0:0] icmp_ln321_126_fu_1008_p2;
reg   [0:0] icmp_ln321_126_reg_3167;
wire   [0:0] icmp_ln321_127_fu_1023_p2;
reg   [0:0] icmp_ln321_127_reg_3172;
wire   [0:0] icmp_ln321_128_fu_1038_p2;
reg   [0:0] icmp_ln321_128_reg_3177;
reg   [0:0] icmp_ln321_128_reg_3177_pp0_iter3_reg;
reg   [23:0] compareIdx_19_reg_3182;
wire   [0:0] len_279_fu_1063_p2;
reg   [0:0] len_279_reg_3187;
wire   [0:0] icmp_ln321_130_fu_1078_p2;
reg   [0:0] icmp_ln321_130_reg_3194;
wire   [0:0] icmp_ln321_131_fu_1093_p2;
reg   [0:0] icmp_ln321_131_reg_3199;
wire   [0:0] icmp_ln321_132_fu_1108_p2;
reg   [0:0] icmp_ln321_132_reg_3204;
wire   [0:0] icmp_ln321_133_fu_1123_p2;
reg   [0:0] icmp_ln321_133_reg_3209;
wire   [0:0] icmp_ln321_134_fu_1138_p2;
reg   [0:0] icmp_ln321_134_reg_3214;
reg   [0:0] icmp_ln321_134_reg_3214_pp0_iter3_reg;
reg   [23:0] compareIdx_20_reg_3219;
wire   [0:0] len_291_fu_1163_p2;
reg   [0:0] len_291_reg_3224;
wire   [0:0] icmp_ln321_136_fu_1178_p2;
reg   [0:0] icmp_ln321_136_reg_3231;
wire   [0:0] icmp_ln321_137_fu_1193_p2;
reg   [0:0] icmp_ln321_137_reg_3236;
wire   [0:0] icmp_ln321_138_fu_1208_p2;
reg   [0:0] icmp_ln321_138_reg_3241;
wire   [0:0] icmp_ln321_139_fu_1223_p2;
reg   [0:0] icmp_ln321_139_reg_3246;
wire   [0:0] icmp_ln321_140_fu_1238_p2;
reg   [0:0] icmp_ln321_140_reg_3251;
reg   [0:0] icmp_ln321_140_reg_3251_pp0_iter3_reg;
wire   [2:0] len_237_fu_1351_p3;
reg   [2:0] len_237_reg_3256;
wire   [0:0] done_91_fu_1359_p2;
reg   [0:0] done_91_reg_3261;
wire   [2:0] len_238_fu_1364_p2;
reg   [2:0] len_238_reg_3267;
wire   [0:0] icmp_ln327_52_fu_1370_p2;
reg   [0:0] icmp_ln327_52_reg_3272;
wire   [31:0] sub_ln327_fu_1376_p2;
reg   [31:0] sub_ln327_reg_3277;
wire   [0:0] icmp_ln327_53_fu_1392_p2;
reg   [0:0] icmp_ln327_53_reg_3282;
wire   [15:0] trunc_ln338_fu_1398_p1;
reg   [15:0] trunc_ln338_reg_3287;
reg   [15:0] trunc_ln338_reg_3287_pp0_iter4_reg;
wire   [0:0] icmp_ln329_fu_1402_p2;
reg   [0:0] icmp_ln329_reg_3292;
wire   [2:0] len_249_fu_1472_p3;
reg   [2:0] len_249_reg_3297;
wire   [0:0] done_96_fu_1480_p2;
reg   [0:0] done_96_reg_3302;
wire   [2:0] len_250_fu_1485_p2;
reg   [2:0] len_250_reg_3308;
wire   [0:0] icmp_ln327_55_fu_1491_p2;
reg   [0:0] icmp_ln327_55_reg_3313;
wire   [31:0] sub_ln327_16_fu_1497_p2;
reg   [31:0] sub_ln327_16_reg_3318;
wire   [0:0] icmp_ln327_56_fu_1513_p2;
reg   [0:0] icmp_ln327_56_reg_3323;
wire   [15:0] trunc_ln338_16_fu_1519_p1;
reg   [15:0] trunc_ln338_16_reg_3328;
reg   [15:0] trunc_ln338_16_reg_3328_pp0_iter4_reg;
wire   [0:0] icmp_ln329_16_fu_1523_p2;
reg   [0:0] icmp_ln329_16_reg_3333;
wire   [2:0] len_261_fu_1593_p3;
reg   [2:0] len_261_reg_3338;
wire   [0:0] done_101_fu_1601_p2;
reg   [0:0] done_101_reg_3344;
wire   [0:0] icmp_ln327_58_fu_1606_p2;
reg   [0:0] icmp_ln327_58_reg_3350;
wire   [31:0] sub_ln327_17_fu_1612_p2;
reg   [31:0] sub_ln327_17_reg_3355;
wire   [0:0] icmp_ln327_59_fu_1628_p2;
reg   [0:0] icmp_ln327_59_reg_3360;
wire   [15:0] trunc_ln338_17_fu_1634_p1;
reg   [15:0] trunc_ln338_17_reg_3365;
reg   [15:0] trunc_ln338_17_reg_3365_pp0_iter4_reg;
wire   [0:0] icmp_ln329_17_fu_1638_p2;
reg   [0:0] icmp_ln329_17_reg_3370;
wire   [2:0] len_273_fu_1708_p3;
reg   [2:0] len_273_reg_3375;
wire   [0:0] done_106_fu_1716_p2;
reg   [0:0] done_106_reg_3381;
wire   [0:0] icmp_ln327_61_fu_1721_p2;
reg   [0:0] icmp_ln327_61_reg_3387;
wire   [31:0] sub_ln327_18_fu_1727_p2;
reg   [31:0] sub_ln327_18_reg_3392;
wire   [0:0] icmp_ln327_62_fu_1743_p2;
reg   [0:0] icmp_ln327_62_reg_3397;
wire   [15:0] trunc_ln338_18_fu_1749_p1;
reg   [15:0] trunc_ln338_18_reg_3402;
reg   [15:0] trunc_ln338_18_reg_3402_pp0_iter4_reg;
reg   [15:0] trunc_ln338_18_reg_3402_pp0_iter5_reg;
wire   [0:0] icmp_ln329_18_fu_1753_p2;
reg   [0:0] icmp_ln329_18_reg_3407;
wire   [2:0] len_285_fu_1823_p3;
reg   [2:0] len_285_reg_3412;
wire   [0:0] done_111_fu_1831_p2;
reg   [0:0] done_111_reg_3418;
wire   [0:0] icmp_ln327_64_fu_1836_p2;
reg   [0:0] icmp_ln327_64_reg_3424;
wire   [31:0] sub_ln327_19_fu_1842_p2;
reg   [31:0] sub_ln327_19_reg_3429;
wire   [0:0] icmp_ln327_65_fu_1858_p2;
reg   [0:0] icmp_ln327_65_reg_3434;
wire   [15:0] trunc_ln338_19_fu_1864_p1;
reg   [15:0] trunc_ln338_19_reg_3439;
reg   [15:0] trunc_ln338_19_reg_3439_pp0_iter4_reg;
reg   [15:0] trunc_ln338_19_reg_3439_pp0_iter5_reg;
wire   [0:0] icmp_ln329_19_fu_1868_p2;
reg   [0:0] icmp_ln329_19_reg_3444;
wire   [2:0] len_297_fu_1938_p3;
reg   [2:0] len_297_reg_3449;
wire   [0:0] done_116_fu_1946_p2;
reg   [0:0] done_116_reg_3455;
wire   [0:0] icmp_ln327_67_fu_1951_p2;
reg   [0:0] icmp_ln327_67_reg_3461;
wire   [31:0] sub_ln327_20_fu_1957_p2;
reg   [31:0] sub_ln327_20_reg_3466;
wire   [0:0] icmp_ln327_68_fu_1973_p2;
reg   [0:0] icmp_ln327_68_reg_3471;
wire   [15:0] trunc_ln338_20_fu_1979_p1;
reg   [15:0] trunc_ln338_20_reg_3476;
reg   [15:0] trunc_ln338_20_reg_3476_pp0_iter4_reg;
reg   [15:0] trunc_ln338_20_reg_3476_pp0_iter5_reg;
wire   [0:0] icmp_ln329_20_fu_1983_p2;
reg   [0:0] icmp_ln329_20_reg_3481;
wire   [2:0] len_303_fu_2110_p3;
reg   [2:0] len_303_reg_3486;
wire   [2:0] len_304_fu_2229_p3;
reg   [2:0] len_304_reg_3493;
wire   [2:0] len_265_fu_2258_p3;
reg   [2:0] len_265_reg_3499;
wire   [0:0] icmp_ln330_38_fu_2288_p2;
reg   [0:0] icmp_ln330_38_reg_3505;
wire   [0:0] and_ln328_80_fu_2310_p2;
reg   [0:0] and_ln328_80_reg_3510;
wire   [2:0] len_277_fu_2337_p3;
reg   [2:0] len_277_reg_3516;
wire   [0:0] icmp_ln330_40_fu_2367_p2;
reg   [0:0] icmp_ln330_40_reg_3522;
wire   [0:0] and_ln328_84_fu_2389_p2;
reg   [0:0] and_ln328_84_reg_3527;
wire   [2:0] len_289_fu_2416_p3;
reg   [2:0] len_289_reg_3533;
wire   [0:0] icmp_ln330_42_fu_2446_p2;
reg   [0:0] icmp_ln330_42_reg_3539;
wire   [0:0] and_ln328_88_fu_2468_p2;
reg   [0:0] and_ln328_88_reg_3544;
wire   [2:0] len_301_fu_2495_p3;
reg   [2:0] len_301_reg_3550;
wire   [0:0] icmp_ln330_44_fu_2525_p2;
reg   [0:0] icmp_ln330_44_reg_3556;
wire   [0:0] and_ln328_92_fu_2547_p2;
reg   [0:0] and_ln328_92_reg_3561;
wire   [15:0] match_offset_29_fu_2654_p3;
reg   [15:0] match_offset_29_reg_3567;
wire   [0:0] icmp_ln336_18_fu_2703_p2;
reg   [0:0] icmp_ln336_18_reg_3572;
wire   [2:0] match_length_36_fu_2709_p3;
reg   [2:0] match_length_36_reg_3577;
wire   [2:0] len_307_fu_2751_p3;
reg   [2:0] len_307_reg_3583;
wire   [2:0] len_308_fu_2792_p3;
reg   [2:0] len_308_reg_3589;
wire   [2:0] match_length_40_fu_2838_p3;
reg   [2:0] match_length_40_reg_3595;
wire   [15:0] select_ln336_20_fu_2850_p3;
reg   [15:0] select_ln336_20_reg_3600;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_init;
wire   [63:0] zext_ln301_fu_615_p1;
reg   [31:0] iIdx_1_fu_302;
wire   [31:0] iIdx_fu_1988_p2;
reg   [7:0] tmp_data_V_fu_306;
wire   [7:0] tmp_data_V_43_fu_511_p1;
reg   [7:0] ap_sig_allocacmp_tmp_data_V_load;
reg   [7:0] present_window_fu_310;
reg   [7:0] present_window_83_fu_314;
reg   [7:0] present_window_84_fu_318;
reg   [7:0] present_window_85_fu_322;
reg   [7:0] present_window_86_fu_326;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] shl_ln5_fu_571_p3;
wire   [9:0] shl_ln293_s_fu_563_p3;
wire   [9:0] zext_ln293_fu_551_p1;
wire   [9:0] xor_ln293_fu_583_p2;
wire   [10:0] shl_ln293_9_fu_555_p3;
wire   [10:0] zext_ln293_8_fu_589_p1;
wire   [10:0] xor_ln293_4_fu_593_p2;
wire   [10:0] zext_ln293_7_fu_579_p1;
wire   [10:0] xor_ln294_fu_599_p2;
wire   [11:0] zext_ln294_fu_605_p1;
wire   [11:0] shl_ln_fu_543_p3;
wire   [11:0] hash_fu_609_p2;
wire   [7:0] trunc_ln714_fu_659_p1;
wire   [7:0] tmp_s_fu_668_p4;
wire   [7:0] tmp_118_fu_683_p4;
wire   [7:0] tmp_119_fu_698_p4;
wire   [7:0] tmp_120_fu_713_p4;
wire   [7:0] tmp_121_fu_728_p4;
wire   [7:0] tmp_123_fu_753_p4;
wire   [7:0] tmp_124_fu_768_p4;
wire   [7:0] tmp_125_fu_783_p4;
wire   [7:0] tmp_126_fu_798_p4;
wire   [7:0] tmp_127_fu_813_p4;
wire   [7:0] tmp_128_fu_828_p4;
wire   [7:0] tmp_130_fu_853_p4;
wire   [7:0] tmp_131_fu_868_p4;
wire   [7:0] tmp_132_fu_883_p4;
wire   [7:0] tmp_133_fu_898_p4;
wire   [7:0] tmp_134_fu_913_p4;
wire   [7:0] tmp_135_fu_928_p4;
wire   [7:0] tmp_137_fu_953_p4;
wire   [7:0] tmp_138_fu_968_p4;
wire   [7:0] tmp_139_fu_983_p4;
wire   [7:0] tmp_140_fu_998_p4;
wire   [7:0] tmp_141_fu_1013_p4;
wire   [7:0] tmp_142_fu_1028_p4;
wire   [7:0] tmp_144_fu_1053_p4;
wire   [7:0] tmp_145_fu_1068_p4;
wire   [7:0] tmp_146_fu_1083_p4;
wire   [7:0] tmp_147_fu_1098_p4;
wire   [7:0] tmp_148_fu_1113_p4;
wire   [7:0] tmp_149_fu_1128_p4;
wire   [7:0] tmp_151_fu_1153_p4;
wire   [7:0] tmp_152_fu_1168_p4;
wire   [7:0] tmp_153_fu_1183_p4;
wire   [7:0] tmp_154_fu_1198_p4;
wire   [7:0] tmp_155_fu_1213_p4;
wire   [7:0] tmp_156_fu_1228_p4;
wire   [31:0] add_ln276_fu_1250_p2;
wire   [23:0] trunc_ln276_fu_1246_p1;
wire   [23:0] add_ln392_4_fu_1261_p2;
wire   [23:0] add_ln392_fu_1267_p2;
wire   [0:0] done_fu_1292_p2;
wire   [0:0] done_88_fu_1297_p2;
wire   [1:0] zext_ln321_fu_1289_p1;
wire   [1:0] len_232_fu_1302_p3;
wire   [1:0] len_233_fu_1309_p3;
wire   [0:0] done_89_fu_1317_p2;
wire   [1:0] len_234_fu_1322_p2;
wire   [1:0] len_235_fu_1328_p3;
wire   [2:0] zext_ln317_fu_1336_p1;
wire   [0:0] done_90_fu_1340_p2;
wire   [2:0] len_236_fu_1345_p2;
wire   [31:0] zext_ln319_fu_1286_p1;
wire   [31:0] currIdx_fu_1256_p2;
wire   [16:0] tmp_122_fu_1382_p4;
wire   [0:0] done_92_fu_1413_p2;
wire   [0:0] done_93_fu_1418_p2;
wire   [1:0] zext_ln321_16_fu_1410_p1;
wire   [1:0] len_244_fu_1423_p3;
wire   [1:0] len_245_fu_1430_p3;
wire   [0:0] done_94_fu_1438_p2;
wire   [1:0] len_246_fu_1443_p2;
wire   [1:0] len_247_fu_1449_p3;
wire   [2:0] zext_ln317_16_fu_1457_p1;
wire   [0:0] done_95_fu_1461_p2;
wire   [2:0] len_248_fu_1466_p2;
wire   [31:0] zext_ln319_16_fu_1407_p1;
wire   [16:0] tmp_129_fu_1503_p4;
wire   [0:0] done_97_fu_1534_p2;
wire   [0:0] done_98_fu_1539_p2;
wire   [1:0] zext_ln321_17_fu_1531_p1;
wire   [1:0] len_256_fu_1544_p3;
wire   [1:0] len_257_fu_1551_p3;
wire   [0:0] done_99_fu_1559_p2;
wire   [1:0] len_258_fu_1564_p2;
wire   [1:0] len_259_fu_1570_p3;
wire   [2:0] zext_ln317_17_fu_1578_p1;
wire   [0:0] done_100_fu_1582_p2;
wire   [2:0] len_260_fu_1587_p2;
wire   [31:0] zext_ln319_17_fu_1528_p1;
wire   [16:0] tmp_136_fu_1618_p4;
wire   [0:0] done_102_fu_1649_p2;
wire   [0:0] done_103_fu_1654_p2;
wire   [1:0] zext_ln321_18_fu_1646_p1;
wire   [1:0] len_268_fu_1659_p3;
wire   [1:0] len_269_fu_1666_p3;
wire   [0:0] done_104_fu_1674_p2;
wire   [1:0] len_270_fu_1679_p2;
wire   [1:0] len_271_fu_1685_p3;
wire   [2:0] zext_ln317_18_fu_1693_p1;
wire   [0:0] done_105_fu_1697_p2;
wire   [2:0] len_272_fu_1702_p2;
wire   [31:0] zext_ln319_18_fu_1643_p1;
wire   [16:0] tmp_143_fu_1733_p4;
wire   [0:0] done_107_fu_1764_p2;
wire   [0:0] done_108_fu_1769_p2;
wire   [1:0] zext_ln321_19_fu_1761_p1;
wire   [1:0] len_280_fu_1774_p3;
wire   [1:0] len_281_fu_1781_p3;
wire   [0:0] done_109_fu_1789_p2;
wire   [1:0] len_282_fu_1794_p2;
wire   [1:0] len_283_fu_1800_p3;
wire   [2:0] zext_ln317_19_fu_1808_p1;
wire   [0:0] done_110_fu_1812_p2;
wire   [2:0] len_284_fu_1817_p2;
wire   [31:0] zext_ln319_19_fu_1758_p1;
wire   [16:0] tmp_150_fu_1848_p4;
wire   [0:0] done_112_fu_1879_p2;
wire   [0:0] done_113_fu_1884_p2;
wire   [1:0] zext_ln321_20_fu_1876_p1;
wire   [1:0] len_292_fu_1889_p3;
wire   [1:0] len_293_fu_1896_p3;
wire   [0:0] done_114_fu_1904_p2;
wire   [1:0] len_294_fu_1909_p2;
wire   [1:0] len_295_fu_1915_p3;
wire   [2:0] zext_ln317_20_fu_1923_p1;
wire   [0:0] done_115_fu_1927_p2;
wire   [2:0] len_296_fu_1932_p2;
wire   [31:0] zext_ln319_20_fu_1873_p1;
wire   [16:0] tmp_157_fu_1963_p4;
wire   [2:0] len_239_fu_1999_p3;
wire   [0:0] or_ln321_fu_2004_p2;
wire   [2:0] len_240_fu_2008_p2;
wire   [2:0] len_241_fu_2014_p3;
wire   [31:0] match_offset_fu_2028_p2;
wire   [0:0] xor_ln329_fu_2039_p2;
wire   [0:0] icmp_ln328_fu_2033_p2;
wire   [0:0] and_ln328_70_fu_2060_p2;
wire   [0:0] icmp_ln327_fu_2022_p2;
wire   [0:0] and_ln328_71_fu_2066_p2;
wire   [0:0] and_ln328_fu_2056_p2;
wire   [0:0] and_ln328_72_fu_2072_p2;
wire   [0:0] icmp_ln330_fu_2044_p2;
wire   [0:0] and_ln330_fu_2078_p2;
wire   [0:0] icmp_ln330_34_fu_2050_p2;
wire   [0:0] and_ln330_52_fu_2084_p2;
wire   [0:0] xor_ln330_fu_2098_p2;
wire   [0:0] and_ln330_53_fu_2104_p2;
wire   [2:0] select_ln330_fu_2090_p3;
wire   [2:0] len_251_fu_2118_p3;
wire   [0:0] or_ln321_96_fu_2123_p2;
wire   [2:0] len_252_fu_2127_p2;
wire   [2:0] len_253_fu_2133_p3;
wire   [31:0] match_offset_26_fu_2147_p2;
wire   [0:0] xor_ln329_16_fu_2158_p2;
wire   [0:0] icmp_ln328_16_fu_2152_p2;
wire   [0:0] and_ln328_74_fu_2179_p2;
wire   [0:0] icmp_ln327_54_fu_2141_p2;
wire   [0:0] and_ln328_75_fu_2185_p2;
wire   [0:0] and_ln328_73_fu_2175_p2;
wire   [0:0] and_ln328_76_fu_2191_p2;
wire   [0:0] icmp_ln330_35_fu_2163_p2;
wire   [0:0] and_ln330_54_fu_2197_p2;
wire   [0:0] icmp_ln330_36_fu_2169_p2;
wire   [0:0] and_ln330_55_fu_2203_p2;
wire   [0:0] xor_ln330_16_fu_2217_p2;
wire   [0:0] and_ln330_56_fu_2223_p2;
wire   [2:0] select_ln330_35_fu_2209_p3;
wire   [2:0] len_262_fu_2237_p2;
wire   [2:0] len_263_fu_2242_p3;
wire   [0:0] or_ln321_101_fu_2248_p2;
wire   [2:0] len_264_fu_2252_p2;
wire   [31:0] match_offset_28_fu_2272_p2;
wire   [0:0] xor_ln329_17_fu_2283_p2;
wire   [0:0] icmp_ln328_17_fu_2277_p2;
wire   [0:0] and_ln328_78_fu_2298_p2;
wire   [0:0] icmp_ln327_57_fu_2266_p2;
wire   [0:0] and_ln328_79_fu_2304_p2;
wire   [0:0] and_ln328_77_fu_2294_p2;
wire   [2:0] len_274_fu_2316_p2;
wire   [2:0] len_275_fu_2321_p3;
wire   [0:0] or_ln321_106_fu_2327_p2;
wire   [2:0] len_276_fu_2331_p2;
wire   [31:0] match_offset_30_fu_2351_p2;
wire   [0:0] xor_ln329_18_fu_2362_p2;
wire   [0:0] icmp_ln328_18_fu_2356_p2;
wire   [0:0] and_ln328_82_fu_2377_p2;
wire   [0:0] icmp_ln327_60_fu_2345_p2;
wire   [0:0] and_ln328_83_fu_2383_p2;
wire   [0:0] and_ln328_81_fu_2373_p2;
wire   [2:0] len_286_fu_2395_p2;
wire   [2:0] len_287_fu_2400_p3;
wire   [0:0] or_ln321_111_fu_2406_p2;
wire   [2:0] len_288_fu_2410_p2;
wire   [31:0] match_offset_31_fu_2430_p2;
wire   [0:0] xor_ln329_19_fu_2441_p2;
wire   [0:0] icmp_ln328_19_fu_2435_p2;
wire   [0:0] and_ln328_86_fu_2456_p2;
wire   [0:0] icmp_ln327_63_fu_2424_p2;
wire   [0:0] and_ln328_87_fu_2462_p2;
wire   [0:0] and_ln328_85_fu_2452_p2;
wire   [2:0] len_298_fu_2474_p2;
wire   [2:0] len_299_fu_2479_p3;
wire   [0:0] or_ln321_116_fu_2485_p2;
wire   [2:0] len_300_fu_2489_p2;
wire   [31:0] match_offset_32_fu_2509_p2;
wire   [0:0] xor_ln329_20_fu_2520_p2;
wire   [0:0] icmp_ln328_20_fu_2514_p2;
wire   [0:0] and_ln328_90_fu_2535_p2;
wire   [0:0] icmp_ln327_66_fu_2503_p2;
wire   [0:0] and_ln328_91_fu_2541_p2;
wire   [0:0] and_ln328_89_fu_2531_p2;
wire   [0:0] icmp_ln336_fu_2558_p2;
wire   [15:0] add_ln327_fu_2553_p2;
wire   [0:0] icmp_ln336_16_fu_2576_p2;
wire   [15:0] add_ln327_7_fu_2571_p2;
wire   [15:0] match_offset_25_fu_2563_p3;
wire   [0:0] icmp_ln330_37_fu_2599_p2;
wire   [0:0] and_ln330_57_fu_2604_p2;
wire   [0:0] and_ln330_58_fu_2609_p2;
wire   [0:0] xor_ln330_17_fu_2622_p2;
wire   [0:0] and_ln330_59_fu_2628_p2;
wire   [2:0] select_ln330_37_fu_2614_p3;
wire   [2:0] len_305_fu_2633_p3;
wire   [2:0] match_length_32_fu_2580_p3;
wire   [0:0] icmp_ln336_17_fu_2640_p2;
wire   [15:0] add_ln327_8_fu_2594_p2;
wire   [15:0] match_offset_27_fu_2586_p3;
wire   [0:0] icmp_ln330_39_fu_2662_p2;
wire   [0:0] and_ln330_60_fu_2667_p2;
wire   [0:0] and_ln330_61_fu_2672_p2;
wire   [0:0] xor_ln330_18_fu_2685_p2;
wire   [0:0] and_ln330_62_fu_2691_p2;
wire   [2:0] select_ln330_39_fu_2677_p3;
wire   [2:0] len_306_fu_2696_p3;
wire   [2:0] match_length_34_fu_2646_p3;
wire   [0:0] icmp_ln330_41_fu_2717_p2;
wire   [0:0] and_ln330_63_fu_2722_p2;
wire   [0:0] and_ln330_64_fu_2727_p2;
wire   [0:0] xor_ln330_19_fu_2740_p2;
wire   [0:0] and_ln330_65_fu_2746_p2;
wire   [2:0] select_ln330_41_fu_2732_p3;
wire   [0:0] icmp_ln330_43_fu_2758_p2;
wire   [0:0] and_ln330_66_fu_2763_p2;
wire   [0:0] and_ln330_67_fu_2768_p2;
wire   [0:0] xor_ln330_20_fu_2781_p2;
wire   [0:0] and_ln330_68_fu_2787_p2;
wire   [2:0] select_ln330_43_fu_2773_p3;
wire   [15:0] add_ln336_6_fu_2799_p2;
wire   [0:0] icmp_ln336_19_fu_2810_p2;
wire   [15:0] add_ln336_fu_2820_p2;
wire   [15:0] select_ln336_18_fu_2804_p3;
wire   [2:0] match_length_38_fu_2814_p3;
wire   [0:0] icmp_ln336_20_fu_2833_p2;
wire   [15:0] add_ln336_5_fu_2845_p2;
wire   [15:0] select_ln336_19_fu_2825_p3;
wire   [7:0] zext_ln336_fu_2858_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_68;
reg    ap_enable_state2_pp0_iter1_stage0;
reg    ap_enable_operation_74;
reg    ap_enable_state3_pp0_iter2_stage0;
reg    ap_enable_operation_161;
reg    ap_enable_state4_pp0_iter3_stage0;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_2190;
reg    ap_condition_2195;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_done_reg = 1'b0;
end

gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            iIdx_1_fu_302 <= 32'd5;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (nextVal_strobe_V_reg_462_pp0_iter2_reg == 1'd1))) begin
            iIdx_1_fu_302 <= iIdx_fu_1988_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_2195)) begin
            nextVal_strobe_V_reg_462 <= tmp_reg_2947;
        end else if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            nextVal_strobe_V_reg_462 <= tmp_205_cast;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            present_window_83_fu_314 <= present_window_86_reload;
        end else if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            present_window_83_fu_314 <= present_window_84_fu_318;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            present_window_84_fu_318 <= present_window_87_reload;
        end else if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            present_window_84_fu_318 <= present_window_85_fu_322;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            present_window_85_fu_322 <= present_window_88_reload;
        end else if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            present_window_85_fu_322 <= present_window_86_fu_326;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            present_window_86_fu_326 <= present_window_89_reload;
        end else if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            present_window_86_fu_326 <= lclBufStream_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            present_window_fu_310 <= present_window_85_reload;
        end else if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            present_window_fu_310 <= present_window_83_fu_314;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (ap_start_int == 1'b1))) begin
            tmp_data_V_fu_306 <= tmp_data_V_43_fu_511_p1;
        end else if ((ap_loop_init == 1'b1)) begin
            tmp_data_V_fu_306 <= inVal_data_V_reload;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln328_80_reg_3510 <= and_ln328_80_fu_2310_p2;
        and_ln328_84_reg_3527 <= and_ln328_84_fu_2389_p2;
        and_ln328_88_reg_3544 <= and_ln328_88_fu_2468_p2;
        and_ln328_92_reg_3561 <= and_ln328_92_fu_2547_p2;
        icmp_ln330_38_reg_3505 <= icmp_ln330_38_fu_2288_p2;
        icmp_ln330_40_reg_3522 <= icmp_ln330_40_fu_2367_p2;
        icmp_ln330_42_reg_3539 <= icmp_ln330_42_fu_2446_p2;
        icmp_ln330_44_reg_3556 <= icmp_ln330_44_fu_2525_p2;
        len_265_reg_3499 <= len_265_fu_2258_p3;
        len_277_reg_3516 <= len_277_fu_2337_p3;
        len_289_reg_3533 <= len_289_fu_2416_p3;
        len_301_reg_3550 <= len_301_fu_2495_p3;
        len_303_reg_3486 <= len_303_fu_2110_p3;
        len_304_reg_3493 <= len_304_fu_2229_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        nextVal_strobe_V_reg_462_pp0_iter1_reg <= nextVal_strobe_V_reg_462;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        dict_V_addr_reg_3023_pp0_iter2_reg <= dict_V_addr_reg_3023;
        icmp_ln321_110_reg_3066_pp0_iter3_reg <= icmp_ln321_110_reg_3066;
        icmp_ln321_116_reg_3103_pp0_iter3_reg <= icmp_ln321_116_reg_3103;
        icmp_ln321_122_reg_3140_pp0_iter3_reg <= icmp_ln321_122_reg_3140;
        icmp_ln321_128_reg_3177_pp0_iter3_reg <= icmp_ln321_128_reg_3177;
        icmp_ln321_134_reg_3214_pp0_iter3_reg <= icmp_ln321_134_reg_3214;
        icmp_ln321_140_reg_3251_pp0_iter3_reg <= icmp_ln321_140_reg_3251;
        nextVal_strobe_V_reg_462_pp0_iter2_reg <= nextVal_strobe_V_reg_462_pp0_iter1_reg;
        nextVal_strobe_V_reg_462_pp0_iter3_reg <= nextVal_strobe_V_reg_462_pp0_iter2_reg;
        nextVal_strobe_V_reg_462_pp0_iter4_reg <= nextVal_strobe_V_reg_462_pp0_iter3_reg;
        nextVal_strobe_V_reg_462_pp0_iter5_reg <= nextVal_strobe_V_reg_462_pp0_iter4_reg;
        nextVal_strobe_V_reg_462_pp0_iter6_reg <= nextVal_strobe_V_reg_462_pp0_iter5_reg;
        present_window_87_reg_2988_pp0_iter2_reg <= present_window_87_reg_2988;
        present_window_87_reg_2988_pp0_iter3_reg <= present_window_87_reg_2988_pp0_iter2_reg;
        present_window_87_reg_2988_pp0_iter4_reg <= present_window_87_reg_2988_pp0_iter3_reg;
        present_window_87_reg_2988_pp0_iter5_reg <= present_window_87_reg_2988_pp0_iter4_reg;
        present_window_88_reg_2976_pp0_iter2_reg <= present_window_88_reg_2976;
        present_window_88_reg_2976_pp0_iter3_reg <= present_window_88_reg_2976_pp0_iter2_reg;
        present_window_88_reg_2976_pp0_iter4_reg <= present_window_88_reg_2976_pp0_iter3_reg;
        present_window_88_reg_2976_pp0_iter5_reg <= present_window_88_reg_2976_pp0_iter4_reg;
        present_window_89_reg_2964_pp0_iter2_reg <= present_window_89_reg_2964;
        present_window_89_reg_2964_pp0_iter3_reg <= present_window_89_reg_2964_pp0_iter2_reg;
        present_window_89_reg_2964_pp0_iter4_reg <= present_window_89_reg_2964_pp0_iter3_reg;
        present_window_89_reg_2964_pp0_iter5_reg <= present_window_89_reg_2964_pp0_iter4_reg;
        present_window_90_reg_2952_pp0_iter2_reg <= present_window_90_reg_2952;
        present_window_90_reg_2952_pp0_iter3_reg <= present_window_90_reg_2952_pp0_iter2_reg;
        present_window_90_reg_2952_pp0_iter4_reg <= present_window_90_reg_2952_pp0_iter3_reg;
        present_window_90_reg_2952_pp0_iter5_reg <= present_window_90_reg_2952_pp0_iter4_reg;
        present_window_load_reg_3000_pp0_iter2_reg <= present_window_load_reg_3000;
        present_window_load_reg_3000_pp0_iter3_reg <= present_window_load_reg_3000_pp0_iter2_reg;
        present_window_load_reg_3000_pp0_iter4_reg <= present_window_load_reg_3000_pp0_iter3_reg;
        present_window_load_reg_3000_pp0_iter5_reg <= present_window_load_reg_3000_pp0_iter4_reg;
        present_window_load_reg_3000_pp0_iter6_reg <= present_window_load_reg_3000_pp0_iter5_reg;
        tmp_158_reg_3012_pp0_iter2_reg <= tmp_158_reg_3012;
        trunc_ln338_16_reg_3328_pp0_iter4_reg <= trunc_ln338_16_reg_3328;
        trunc_ln338_17_reg_3365_pp0_iter4_reg <= trunc_ln338_17_reg_3365;
        trunc_ln338_18_reg_3402_pp0_iter4_reg <= trunc_ln338_18_reg_3402;
        trunc_ln338_18_reg_3402_pp0_iter5_reg <= trunc_ln338_18_reg_3402_pp0_iter4_reg;
        trunc_ln338_19_reg_3439_pp0_iter4_reg <= trunc_ln338_19_reg_3439;
        trunc_ln338_19_reg_3439_pp0_iter5_reg <= trunc_ln338_19_reg_3439_pp0_iter4_reg;
        trunc_ln338_20_reg_3476_pp0_iter4_reg <= trunc_ln338_20_reg_3476;
        trunc_ln338_20_reg_3476_pp0_iter5_reg <= trunc_ln338_20_reg_3476_pp0_iter4_reg;
        trunc_ln338_reg_3287_pp0_iter4_reg <= trunc_ln338_reg_3287;
    end
end

always @ (posedge ap_clk) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        compareIdx_16_reg_3071 <= {{dict_V_q1[143:120]}};
        compareIdx_17_reg_3108 <= {{dict_V_q1[215:192]}};
        compareIdx_18_reg_3145 <= {{dict_V_q1[287:264]}};
        compareIdx_19_reg_3182 <= {{dict_V_q1[359:336]}};
        compareIdx_20_reg_3219 <= {{dict_V_q1[431:408]}};
        compareIdx_reg_3034 <= {{dict_V_q1[71:48]}};
        icmp_ln321_107_reg_3051 <= icmp_ln321_107_fu_693_p2;
        icmp_ln321_108_reg_3056 <= icmp_ln321_108_fu_708_p2;
        icmp_ln321_109_reg_3061 <= icmp_ln321_109_fu_723_p2;
        icmp_ln321_110_reg_3066 <= icmp_ln321_110_fu_738_p2;
        icmp_ln321_112_reg_3083 <= icmp_ln321_112_fu_778_p2;
        icmp_ln321_113_reg_3088 <= icmp_ln321_113_fu_793_p2;
        icmp_ln321_114_reg_3093 <= icmp_ln321_114_fu_808_p2;
        icmp_ln321_115_reg_3098 <= icmp_ln321_115_fu_823_p2;
        icmp_ln321_116_reg_3103 <= icmp_ln321_116_fu_838_p2;
        icmp_ln321_118_reg_3120 <= icmp_ln321_118_fu_878_p2;
        icmp_ln321_119_reg_3125 <= icmp_ln321_119_fu_893_p2;
        icmp_ln321_120_reg_3130 <= icmp_ln321_120_fu_908_p2;
        icmp_ln321_121_reg_3135 <= icmp_ln321_121_fu_923_p2;
        icmp_ln321_122_reg_3140 <= icmp_ln321_122_fu_938_p2;
        icmp_ln321_124_reg_3157 <= icmp_ln321_124_fu_978_p2;
        icmp_ln321_125_reg_3162 <= icmp_ln321_125_fu_993_p2;
        icmp_ln321_126_reg_3167 <= icmp_ln321_126_fu_1008_p2;
        icmp_ln321_127_reg_3172 <= icmp_ln321_127_fu_1023_p2;
        icmp_ln321_128_reg_3177 <= icmp_ln321_128_fu_1038_p2;
        icmp_ln321_130_reg_3194 <= icmp_ln321_130_fu_1078_p2;
        icmp_ln321_131_reg_3199 <= icmp_ln321_131_fu_1093_p2;
        icmp_ln321_132_reg_3204 <= icmp_ln321_132_fu_1108_p2;
        icmp_ln321_133_reg_3209 <= icmp_ln321_133_fu_1123_p2;
        icmp_ln321_134_reg_3214 <= icmp_ln321_134_fu_1138_p2;
        icmp_ln321_136_reg_3231 <= icmp_ln321_136_fu_1178_p2;
        icmp_ln321_137_reg_3236 <= icmp_ln321_137_fu_1193_p2;
        icmp_ln321_138_reg_3241 <= icmp_ln321_138_fu_1208_p2;
        icmp_ln321_139_reg_3246 <= icmp_ln321_139_fu_1223_p2;
        icmp_ln321_140_reg_3251 <= icmp_ln321_140_fu_1238_p2;
        icmp_ln321_reg_3046 <= icmp_ln321_fu_678_p2;
        len_243_reg_3076 <= len_243_fu_763_p2;
        len_255_reg_3113 <= len_255_fu_863_p2;
        len_267_reg_3150 <= len_267_fu_963_p2;
        len_279_reg_3187 <= len_279_fu_1063_p2;
        len_291_reg_3224 <= len_291_fu_1163_p2;
        len_reg_3039 <= len_fu_663_p2;
        trunc_ln1715_reg_3029 <= trunc_ln1715_fu_645_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((nextVal_strobe_V_reg_462 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dict_V_addr_reg_3023 <= zext_ln301_fu_615_p1;
        present_window_load_reg_3000 <= present_window_fu_310;
        tmp_158_reg_3012 <= lclBufStream_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        done_101_reg_3344 <= done_101_fu_1601_p2;
        done_106_reg_3381 <= done_106_fu_1716_p2;
        done_111_reg_3418 <= done_111_fu_1831_p2;
        done_116_reg_3455 <= done_116_fu_1946_p2;
        done_91_reg_3261 <= done_91_fu_1359_p2;
        done_96_reg_3302 <= done_96_fu_1480_p2;
        icmp_ln327_52_reg_3272 <= icmp_ln327_52_fu_1370_p2;
        icmp_ln327_53_reg_3282 <= icmp_ln327_53_fu_1392_p2;
        icmp_ln327_55_reg_3313 <= icmp_ln327_55_fu_1491_p2;
        icmp_ln327_56_reg_3323 <= icmp_ln327_56_fu_1513_p2;
        icmp_ln327_58_reg_3350 <= icmp_ln327_58_fu_1606_p2;
        icmp_ln327_59_reg_3360 <= icmp_ln327_59_fu_1628_p2;
        icmp_ln327_61_reg_3387 <= icmp_ln327_61_fu_1721_p2;
        icmp_ln327_62_reg_3397 <= icmp_ln327_62_fu_1743_p2;
        icmp_ln327_64_reg_3424 <= icmp_ln327_64_fu_1836_p2;
        icmp_ln327_65_reg_3434 <= icmp_ln327_65_fu_1858_p2;
        icmp_ln327_67_reg_3461 <= icmp_ln327_67_fu_1951_p2;
        icmp_ln327_68_reg_3471 <= icmp_ln327_68_fu_1973_p2;
        icmp_ln329_16_reg_3333 <= icmp_ln329_16_fu_1523_p2;
        icmp_ln329_17_reg_3370 <= icmp_ln329_17_fu_1638_p2;
        icmp_ln329_18_reg_3407 <= icmp_ln329_18_fu_1753_p2;
        icmp_ln329_19_reg_3444 <= icmp_ln329_19_fu_1868_p2;
        icmp_ln329_20_reg_3481 <= icmp_ln329_20_fu_1983_p2;
        icmp_ln329_reg_3292 <= icmp_ln329_fu_1402_p2;
        len_237_reg_3256 <= len_237_fu_1351_p3;
        len_238_reg_3267 <= len_238_fu_1364_p2;
        len_249_reg_3297 <= len_249_fu_1472_p3;
        len_250_reg_3308 <= len_250_fu_1485_p2;
        len_261_reg_3338 <= len_261_fu_1593_p3;
        len_273_reg_3375 <= len_273_fu_1708_p3;
        len_285_reg_3412 <= len_285_fu_1823_p3;
        len_297_reg_3449 <= len_297_fu_1938_p3;
        sub_ln327_16_reg_3318 <= sub_ln327_16_fu_1497_p2;
        sub_ln327_17_reg_3355 <= sub_ln327_17_fu_1612_p2;
        sub_ln327_18_reg_3392 <= sub_ln327_18_fu_1727_p2;
        sub_ln327_19_reg_3429 <= sub_ln327_19_fu_1842_p2;
        sub_ln327_20_reg_3466 <= sub_ln327_20_fu_1957_p2;
        sub_ln327_reg_3277 <= sub_ln327_fu_1376_p2;
        trunc_ln338_16_reg_3328 <= trunc_ln338_16_fu_1519_p1;
        trunc_ln338_17_reg_3365 <= trunc_ln338_17_fu_1634_p1;
        trunc_ln338_18_reg_3402 <= trunc_ln338_18_fu_1749_p1;
        trunc_ln338_19_reg_3439 <= trunc_ln338_19_fu_1864_p1;
        trunc_ln338_20_reg_3476 <= trunc_ln338_20_fu_1979_p1;
        trunc_ln338_reg_3287 <= trunc_ln338_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln336_18_reg_3572 <= icmp_ln336_18_fu_2703_p2;
        len_307_reg_3583 <= len_307_fu_2751_p3;
        len_308_reg_3589 <= len_308_fu_2792_p3;
        match_length_36_reg_3577 <= match_length_36_fu_2709_p3;
        match_offset_29_reg_3567 <= match_offset_29_fu_2654_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        match_length_40_reg_3595 <= match_length_40_fu_2838_p3;
        select_ln336_20_reg_3600 <= select_ln336_20_fu_2850_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        present_window_87_reg_2988 <= present_window_86_fu_326;
        present_window_88_reg_2976 <= present_window_85_fu_322;
        present_window_89_reg_2964 <= present_window_84_fu_318;
        present_window_90_reg_2952 <= present_window_83_fu_314;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_V_load_reg_2942 <= ap_sig_allocacmp_tmp_data_V_load;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_2947 <= downStream_3_dout[32'd8];
    end
end

always @ (*) begin
    if (((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_2190)) begin
            ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 = tmp_reg_2947;
        end else if ((ap_loop_init == 1'b1)) begin
            ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 = tmp_205_cast;
        end else begin
            ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 = tmp_reg_2947;
        end
    end else begin
        ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 = tmp_reg_2947;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_tmp_data_V_load = inVal_data_V_reload;
    end else begin
        ap_sig_allocacmp_tmp_data_V_load = tmp_data_V_fu_306;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        compressedStream_blk_n = compressedStream_full_n;
    end else begin
        compressedStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        compressedStream_write = 1'b1;
    end else begin
        compressedStream_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dict_V_ce0 = 1'b1;
    end else begin
        dict_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dict_V_ce1 = 1'b1;
    end else begin
        dict_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (nextVal_strobe_V_reg_462_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dict_V_we0 = 1'b1;
    end else begin
        dict_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        downStream_3_blk_n = downStream_3_empty_n;
    end else begin
        downStream_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        downStream_3_read = 1'b1;
    end else begin
        downStream_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        lclBufStream_i_blk_n = lclBufStream_empty_n;
    end else begin
        lclBufStream_i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        lclBufStream_o_blk_n = lclBufStream_full_n;
    end else begin
        lclBufStream_o_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lclBufStream_read = 1'b1;
    end else begin
        lclBufStream_read = 1'b0;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lclBufStream_write = 1'b1;
    end else begin
        lclBufStream_write = 1'b0;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        present_window_100_out_ap_vld = 1'b1;
    end else begin
        present_window_100_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        present_window_96_out_ap_vld = 1'b1;
    end else begin
        present_window_96_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        present_window_97_out_ap_vld = 1'b1;
    end else begin
        present_window_97_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        present_window_98_out_ap_vld = 1'b1;
    end else begin
        present_window_98_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        present_window_99_out_ap_vld = 1'b1;
    end else begin
        present_window_99_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln276_fu_1250_p2 = ($signed(iIdx_1_fu_302) + $signed(32'd4294967291));

assign add_ln327_7_fu_2571_p2 = ($signed(trunc_ln338_16_reg_3328_pp0_iter4_reg) + $signed(16'd65535));

assign add_ln327_8_fu_2594_p2 = ($signed(trunc_ln338_17_reg_3365_pp0_iter4_reg) + $signed(16'd65535));

assign add_ln327_fu_2553_p2 = ($signed(trunc_ln338_reg_3287_pp0_iter4_reg) + $signed(16'd65535));

assign add_ln336_5_fu_2845_p2 = ($signed(trunc_ln338_20_reg_3476_pp0_iter5_reg) + $signed(16'd65535));

assign add_ln336_6_fu_2799_p2 = ($signed(trunc_ln338_18_reg_3402_pp0_iter5_reg) + $signed(16'd65535));

assign add_ln336_fu_2820_p2 = ($signed(trunc_ln338_19_reg_3439_pp0_iter5_reg) + $signed(16'd65535));

assign add_ln392_4_fu_1261_p2 = ($signed(trunc_ln276_fu_1246_p1) + $signed(24'd16777211));

assign add_ln392_fu_1267_p2 = (add_ln392_4_fu_1261_p2 + trunc_ln16);

assign and_ln328_70_fu_2060_p2 = (xor_ln329_fu_2039_p2 & icmp_ln328_fu_2033_p2);

assign and_ln328_71_fu_2066_p2 = (icmp_ln327_fu_2022_p2 & and_ln328_70_fu_2060_p2);

assign and_ln328_72_fu_2072_p2 = (and_ln328_fu_2056_p2 & and_ln328_71_fu_2066_p2);

assign and_ln328_73_fu_2175_p2 = (icmp_ln327_56_reg_3323 & icmp_ln327_55_reg_3313);

assign and_ln328_74_fu_2179_p2 = (xor_ln329_16_fu_2158_p2 & icmp_ln328_16_fu_2152_p2);

assign and_ln328_75_fu_2185_p2 = (icmp_ln327_54_fu_2141_p2 & and_ln328_74_fu_2179_p2);

assign and_ln328_76_fu_2191_p2 = (and_ln328_75_fu_2185_p2 & and_ln328_73_fu_2175_p2);

assign and_ln328_77_fu_2294_p2 = (icmp_ln327_59_reg_3360 & icmp_ln327_58_reg_3350);

assign and_ln328_78_fu_2298_p2 = (xor_ln329_17_fu_2283_p2 & icmp_ln328_17_fu_2277_p2);

assign and_ln328_79_fu_2304_p2 = (icmp_ln327_57_fu_2266_p2 & and_ln328_78_fu_2298_p2);

assign and_ln328_80_fu_2310_p2 = (and_ln328_79_fu_2304_p2 & and_ln328_77_fu_2294_p2);

assign and_ln328_81_fu_2373_p2 = (icmp_ln327_62_reg_3397 & icmp_ln327_61_reg_3387);

assign and_ln328_82_fu_2377_p2 = (xor_ln329_18_fu_2362_p2 & icmp_ln328_18_fu_2356_p2);

assign and_ln328_83_fu_2383_p2 = (icmp_ln327_60_fu_2345_p2 & and_ln328_82_fu_2377_p2);

assign and_ln328_84_fu_2389_p2 = (and_ln328_83_fu_2383_p2 & and_ln328_81_fu_2373_p2);

assign and_ln328_85_fu_2452_p2 = (icmp_ln327_65_reg_3434 & icmp_ln327_64_reg_3424);

assign and_ln328_86_fu_2456_p2 = (xor_ln329_19_fu_2441_p2 & icmp_ln328_19_fu_2435_p2);

assign and_ln328_87_fu_2462_p2 = (icmp_ln327_63_fu_2424_p2 & and_ln328_86_fu_2456_p2);

assign and_ln328_88_fu_2468_p2 = (and_ln328_87_fu_2462_p2 & and_ln328_85_fu_2452_p2);

assign and_ln328_89_fu_2531_p2 = (icmp_ln327_68_reg_3471 & icmp_ln327_67_reg_3461);

assign and_ln328_90_fu_2535_p2 = (xor_ln329_20_fu_2520_p2 & icmp_ln328_20_fu_2514_p2);

assign and_ln328_91_fu_2541_p2 = (icmp_ln327_66_fu_2503_p2 & and_ln328_90_fu_2535_p2);

assign and_ln328_92_fu_2547_p2 = (and_ln328_91_fu_2541_p2 & and_ln328_89_fu_2531_p2);

assign and_ln328_fu_2056_p2 = (icmp_ln327_53_reg_3282 & icmp_ln327_52_reg_3272);

assign and_ln330_52_fu_2084_p2 = (icmp_ln330_34_fu_2050_p2 & and_ln330_fu_2078_p2);

assign and_ln330_53_fu_2104_p2 = (xor_ln330_fu_2098_p2 & and_ln328_72_fu_2072_p2);

assign and_ln330_54_fu_2197_p2 = (icmp_ln330_35_fu_2163_p2 & and_ln328_76_fu_2191_p2);

assign and_ln330_55_fu_2203_p2 = (icmp_ln330_36_fu_2169_p2 & and_ln330_54_fu_2197_p2);

assign and_ln330_56_fu_2223_p2 = (xor_ln330_16_fu_2217_p2 & and_ln328_76_fu_2191_p2);

assign and_ln330_57_fu_2604_p2 = (icmp_ln330_37_fu_2599_p2 & and_ln328_80_reg_3510);

assign and_ln330_58_fu_2609_p2 = (icmp_ln330_38_reg_3505 & and_ln330_57_fu_2604_p2);

assign and_ln330_59_fu_2628_p2 = (xor_ln330_17_fu_2622_p2 & and_ln328_80_reg_3510);

assign and_ln330_60_fu_2667_p2 = (icmp_ln330_39_fu_2662_p2 & and_ln328_84_reg_3527);

assign and_ln330_61_fu_2672_p2 = (icmp_ln330_40_reg_3522 & and_ln330_60_fu_2667_p2);

assign and_ln330_62_fu_2691_p2 = (xor_ln330_18_fu_2685_p2 & and_ln328_84_reg_3527);

assign and_ln330_63_fu_2722_p2 = (icmp_ln330_41_fu_2717_p2 & and_ln328_88_reg_3544);

assign and_ln330_64_fu_2727_p2 = (icmp_ln330_42_reg_3539 & and_ln330_63_fu_2722_p2);

assign and_ln330_65_fu_2746_p2 = (xor_ln330_19_fu_2740_p2 & and_ln328_88_reg_3544);

assign and_ln330_66_fu_2763_p2 = (icmp_ln330_43_fu_2758_p2 & and_ln328_92_reg_3561);

assign and_ln330_67_fu_2768_p2 = (icmp_ln330_44_reg_3556 & and_ln330_66_fu_2763_p2);

assign and_ln330_68_fu_2787_p2 = (xor_ln330_20_fu_2781_p2 & and_ln328_92_reg_3561);

assign and_ln330_fu_2078_p2 = (icmp_ln330_fu_2044_p2 & and_ln328_72_fu_2072_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((nextVal_strobe_V_reg_462_pp0_iter6_reg == 1'd1) & (compressedStream_full_n == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((lclBufStream_full_n == 1'b0) & (nextVal_strobe_V_reg_462 == 1'd1)) | ((nextVal_strobe_V_reg_462 == 1'd1) & (lclBufStream_empty_n == 1'b0)))) | ((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (downStream_3_empty_n == 1'b0) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((nextVal_strobe_V_reg_462_pp0_iter6_reg == 1'd1) & (compressedStream_full_n == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((lclBufStream_full_n == 1'b0) & (nextVal_strobe_V_reg_462 == 1'd1)) | ((nextVal_strobe_V_reg_462 == 1'd1) & (lclBufStream_empty_n == 1'b0)))) | ((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (downStream_3_empty_n == 1'b0) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((nextVal_strobe_V_reg_462_pp0_iter6_reg == 1'd1) & (compressedStream_full_n == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((lclBufStream_full_n == 1'b0) & (nextVal_strobe_V_reg_462 == 1'd1)) | ((nextVal_strobe_V_reg_462 == 1'd1) & (lclBufStream_empty_n == 1'b0)))) | ((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (downStream_3_empty_n == 1'b0) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (downStream_3_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((lclBufStream_full_n == 1'b0) & (nextVal_strobe_V_reg_462 == 1'd1)) | ((nextVal_strobe_V_reg_462 == 1'd1) & (lclBufStream_empty_n == 1'b0)));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter7 = ((nextVal_strobe_V_reg_462_pp0_iter6_reg == 1'd1) & (compressedStream_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_2190 = ((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_2195 = ((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_enable_operation_161 = (nextVal_strobe_V_reg_462_pp0_iter2_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_68 = (nextVal_strobe_V_reg_462 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_74 = (nextVal_strobe_V_reg_462_pp0_iter1_reg == 1'd1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign compressedStream_din = {{{{{{1'd1}, {select_ln336_20_reg_3600}}}, {zext_ln336_fu_2858_p1}}}, {present_window_load_reg_3000_pp0_iter6_reg}};

assign currIdx_fu_1256_p2 = (add_ln276_fu_1250_p2 + mul);

assign dict_V_address0 = dict_V_addr_reg_3023_pp0_iter2_reg;

assign dict_V_address1 = zext_ln301_fu_615_p1;

assign dict_V_d0 = {{{{{{{{trunc_ln1715_reg_3029}, {add_ln392_fu_1267_p2}}, {tmp_158_reg_3012_pp0_iter2_reg}}, {present_window_87_reg_2988_pp0_iter2_reg}}, {present_window_88_reg_2976_pp0_iter2_reg}}, {present_window_89_reg_2964_pp0_iter2_reg}}, {present_window_90_reg_2952_pp0_iter2_reg}}, {present_window_load_reg_3000_pp0_iter2_reg}};

assign done_100_fu_1582_p2 = (icmp_ln321_120_reg_3130 | done_99_fu_1559_p2);

assign done_101_fu_1601_p2 = (icmp_ln321_121_reg_3135 | done_100_fu_1582_p2);

assign done_102_fu_1649_p2 = (len_267_reg_3150 ^ 1'd1);

assign done_103_fu_1654_p2 = (icmp_ln321_124_reg_3157 | done_102_fu_1649_p2);

assign done_104_fu_1674_p2 = (icmp_ln321_125_reg_3162 | done_103_fu_1654_p2);

assign done_105_fu_1697_p2 = (icmp_ln321_126_reg_3167 | done_104_fu_1674_p2);

assign done_106_fu_1716_p2 = (icmp_ln321_127_reg_3172 | done_105_fu_1697_p2);

assign done_107_fu_1764_p2 = (len_279_reg_3187 ^ 1'd1);

assign done_108_fu_1769_p2 = (icmp_ln321_130_reg_3194 | done_107_fu_1764_p2);

assign done_109_fu_1789_p2 = (icmp_ln321_131_reg_3199 | done_108_fu_1769_p2);

assign done_110_fu_1812_p2 = (icmp_ln321_132_reg_3204 | done_109_fu_1789_p2);

assign done_111_fu_1831_p2 = (icmp_ln321_133_reg_3209 | done_110_fu_1812_p2);

assign done_112_fu_1879_p2 = (len_291_reg_3224 ^ 1'd1);

assign done_113_fu_1884_p2 = (icmp_ln321_136_reg_3231 | done_112_fu_1879_p2);

assign done_114_fu_1904_p2 = (icmp_ln321_137_reg_3236 | done_113_fu_1884_p2);

assign done_115_fu_1927_p2 = (icmp_ln321_138_reg_3241 | done_114_fu_1904_p2);

assign done_116_fu_1946_p2 = (icmp_ln321_139_reg_3246 | done_115_fu_1927_p2);

assign done_88_fu_1297_p2 = (icmp_ln321_reg_3046 | done_fu_1292_p2);

assign done_89_fu_1317_p2 = (icmp_ln321_107_reg_3051 | done_88_fu_1297_p2);

assign done_90_fu_1340_p2 = (icmp_ln321_108_reg_3056 | done_89_fu_1317_p2);

assign done_91_fu_1359_p2 = (icmp_ln321_109_reg_3061 | done_90_fu_1340_p2);

assign done_92_fu_1413_p2 = (len_243_reg_3076 ^ 1'd1);

assign done_93_fu_1418_p2 = (icmp_ln321_112_reg_3083 | done_92_fu_1413_p2);

assign done_94_fu_1438_p2 = (icmp_ln321_113_reg_3088 | done_93_fu_1418_p2);

assign done_95_fu_1461_p2 = (icmp_ln321_114_reg_3093 | done_94_fu_1438_p2);

assign done_96_fu_1480_p2 = (icmp_ln321_115_reg_3098 | done_95_fu_1461_p2);

assign done_97_fu_1534_p2 = (len_255_reg_3113 ^ 1'd1);

assign done_98_fu_1539_p2 = (icmp_ln321_118_reg_3120 | done_97_fu_1534_p2);

assign done_99_fu_1559_p2 = (icmp_ln321_119_reg_3125 | done_98_fu_1539_p2);

assign done_fu_1292_p2 = (len_reg_3039 ^ 1'd1);

assign hash_fu_609_p2 = (zext_ln294_fu_605_p1 ^ shl_ln_fu_543_p3);

assign iIdx_fu_1988_p2 = (iIdx_1_fu_302 + 32'd1);

assign icmp_ln321_107_fu_693_p2 = ((present_window_89_reg_2964 != tmp_118_fu_683_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_108_fu_708_p2 = ((present_window_88_reg_2976 != tmp_119_fu_698_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_109_fu_723_p2 = ((present_window_87_reg_2988 != tmp_120_fu_713_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_110_fu_738_p2 = ((tmp_158_reg_3012 != tmp_121_fu_728_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_112_fu_778_p2 = ((present_window_90_reg_2952 != tmp_124_fu_768_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_113_fu_793_p2 = ((present_window_89_reg_2964 != tmp_125_fu_783_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_114_fu_808_p2 = ((present_window_88_reg_2976 != tmp_126_fu_798_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_115_fu_823_p2 = ((present_window_87_reg_2988 != tmp_127_fu_813_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_116_fu_838_p2 = ((tmp_158_reg_3012 != tmp_128_fu_828_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_118_fu_878_p2 = ((present_window_90_reg_2952 != tmp_131_fu_868_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_119_fu_893_p2 = ((present_window_89_reg_2964 != tmp_132_fu_883_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_120_fu_908_p2 = ((present_window_88_reg_2976 != tmp_133_fu_898_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_121_fu_923_p2 = ((present_window_87_reg_2988 != tmp_134_fu_913_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_122_fu_938_p2 = ((tmp_158_reg_3012 != tmp_135_fu_928_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_124_fu_978_p2 = ((present_window_90_reg_2952 != tmp_138_fu_968_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_125_fu_993_p2 = ((present_window_89_reg_2964 != tmp_139_fu_983_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_126_fu_1008_p2 = ((present_window_88_reg_2976 != tmp_140_fu_998_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_127_fu_1023_p2 = ((present_window_87_reg_2988 != tmp_141_fu_1013_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_128_fu_1038_p2 = ((tmp_158_reg_3012 != tmp_142_fu_1028_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_130_fu_1078_p2 = ((present_window_90_reg_2952 != tmp_145_fu_1068_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_131_fu_1093_p2 = ((present_window_89_reg_2964 != tmp_146_fu_1083_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_132_fu_1108_p2 = ((present_window_88_reg_2976 != tmp_147_fu_1098_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_133_fu_1123_p2 = ((present_window_87_reg_2988 != tmp_148_fu_1113_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_134_fu_1138_p2 = ((tmp_158_reg_3012 != tmp_149_fu_1128_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_136_fu_1178_p2 = ((present_window_90_reg_2952 != tmp_152_fu_1168_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_137_fu_1193_p2 = ((present_window_89_reg_2964 != tmp_153_fu_1183_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_138_fu_1208_p2 = ((present_window_88_reg_2976 != tmp_154_fu_1198_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_139_fu_1223_p2 = ((present_window_87_reg_2988 != tmp_155_fu_1213_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_140_fu_1238_p2 = ((tmp_158_reg_3012 != tmp_156_fu_1228_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_fu_678_p2 = ((present_window_90_reg_2952 != tmp_s_fu_668_p4) ? 1'b1 : 1'b0);

assign icmp_ln327_52_fu_1370_p2 = ((zext_ln319_fu_1286_p1 < currIdx_fu_1256_p2) ? 1'b1 : 1'b0);

assign icmp_ln327_53_fu_1392_p2 = ((tmp_122_fu_1382_p4 == 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln327_54_fu_2141_p2 = ((len_253_fu_2133_p3 > 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln327_55_fu_1491_p2 = ((zext_ln319_16_fu_1407_p1 < currIdx_fu_1256_p2) ? 1'b1 : 1'b0);

assign icmp_ln327_56_fu_1513_p2 = ((tmp_129_fu_1503_p4 == 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln327_57_fu_2266_p2 = ((len_265_fu_2258_p3 > 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln327_58_fu_1606_p2 = ((zext_ln319_17_fu_1528_p1 < currIdx_fu_1256_p2) ? 1'b1 : 1'b0);

assign icmp_ln327_59_fu_1628_p2 = ((tmp_136_fu_1618_p4 == 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln327_60_fu_2345_p2 = ((len_277_fu_2337_p3 > 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln327_61_fu_1721_p2 = ((zext_ln319_18_fu_1643_p1 < currIdx_fu_1256_p2) ? 1'b1 : 1'b0);

assign icmp_ln327_62_fu_1743_p2 = ((tmp_143_fu_1733_p4 == 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln327_63_fu_2424_p2 = ((len_289_fu_2416_p3 > 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln327_64_fu_1836_p2 = ((zext_ln319_19_fu_1758_p1 < currIdx_fu_1256_p2) ? 1'b1 : 1'b0);

assign icmp_ln327_65_fu_1858_p2 = ((tmp_150_fu_1848_p4 == 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln327_66_fu_2503_p2 = ((len_301_fu_2495_p3 > 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln327_67_fu_1951_p2 = ((zext_ln319_20_fu_1873_p1 < currIdx_fu_1256_p2) ? 1'b1 : 1'b0);

assign icmp_ln327_68_fu_1973_p2 = ((tmp_157_fu_1963_p4 == 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln327_fu_2022_p2 = ((len_241_fu_2014_p3 > 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln328_16_fu_2152_p2 = ((match_offset_26_fu_2147_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln328_17_fu_2277_p2 = ((match_offset_28_fu_2272_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln328_18_fu_2356_p2 = ((match_offset_30_fu_2351_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln328_19_fu_2435_p2 = ((match_offset_31_fu_2430_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln328_20_fu_2514_p2 = ((match_offset_32_fu_2509_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln328_fu_2033_p2 = ((match_offset_fu_2028_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln329_16_fu_1523_p2 = ((zext_ln319_16_fu_1407_p1 < mul) ? 1'b1 : 1'b0);

assign icmp_ln329_17_fu_1638_p2 = ((zext_ln319_17_fu_1528_p1 < mul) ? 1'b1 : 1'b0);

assign icmp_ln329_18_fu_1753_p2 = ((zext_ln319_18_fu_1643_p1 < mul) ? 1'b1 : 1'b0);

assign icmp_ln329_19_fu_1868_p2 = ((zext_ln319_19_fu_1758_p1 < mul) ? 1'b1 : 1'b0);

assign icmp_ln329_20_fu_1983_p2 = ((zext_ln319_20_fu_1873_p1 < mul) ? 1'b1 : 1'b0);

assign icmp_ln329_fu_1402_p2 = ((zext_ln319_fu_1286_p1 < mul) ? 1'b1 : 1'b0);

assign icmp_ln330_34_fu_2050_p2 = ((match_offset_fu_2028_p2 < 32'd4097) ? 1'b1 : 1'b0);

assign icmp_ln330_35_fu_2163_p2 = ((len_253_fu_2133_p3 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln330_36_fu_2169_p2 = ((match_offset_26_fu_2147_p2 < 32'd4097) ? 1'b1 : 1'b0);

assign icmp_ln330_37_fu_2599_p2 = ((len_265_reg_3499 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln330_38_fu_2288_p2 = ((match_offset_28_fu_2272_p2 < 32'd4097) ? 1'b1 : 1'b0);

assign icmp_ln330_39_fu_2662_p2 = ((len_277_reg_3516 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln330_40_fu_2367_p2 = ((match_offset_30_fu_2351_p2 < 32'd4097) ? 1'b1 : 1'b0);

assign icmp_ln330_41_fu_2717_p2 = ((len_289_reg_3533 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln330_42_fu_2446_p2 = ((match_offset_31_fu_2430_p2 < 32'd4097) ? 1'b1 : 1'b0);

assign icmp_ln330_43_fu_2758_p2 = ((len_301_reg_3550 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln330_44_fu_2525_p2 = ((match_offset_32_fu_2509_p2 < 32'd4097) ? 1'b1 : 1'b0);

assign icmp_ln330_fu_2044_p2 = ((len_241_fu_2014_p3 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln336_16_fu_2576_p2 = ((len_304_reg_3493 > len_303_reg_3486) ? 1'b1 : 1'b0);

assign icmp_ln336_17_fu_2640_p2 = ((len_305_fu_2633_p3 > match_length_32_fu_2580_p3) ? 1'b1 : 1'b0);

assign icmp_ln336_18_fu_2703_p2 = ((len_306_fu_2696_p3 > match_length_34_fu_2646_p3) ? 1'b1 : 1'b0);

assign icmp_ln336_19_fu_2810_p2 = ((len_307_reg_3583 > match_length_36_reg_3577) ? 1'b1 : 1'b0);

assign icmp_ln336_20_fu_2833_p2 = ((len_308_reg_3589 > match_length_38_fu_2814_p3) ? 1'b1 : 1'b0);

assign icmp_ln336_fu_2558_p2 = ((len_303_reg_3486 != 3'd0) ? 1'b1 : 1'b0);

assign lclBufStream_din = tmp_data_V_load_reg_2942;

assign len_232_fu_1302_p3 = ((len_reg_3039[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign len_233_fu_1309_p3 = ((done_88_fu_1297_p2[0:0] == 1'b1) ? zext_ln321_fu_1289_p1 : len_232_fu_1302_p3);

assign len_234_fu_1322_p2 = (len_233_fu_1309_p3 + 2'd1);

assign len_235_fu_1328_p3 = ((done_89_fu_1317_p2[0:0] == 1'b1) ? len_233_fu_1309_p3 : len_234_fu_1322_p2);

assign len_236_fu_1345_p2 = (zext_ln317_fu_1336_p1 + 3'd1);

assign len_237_fu_1351_p3 = ((done_90_fu_1340_p2[0:0] == 1'b1) ? zext_ln317_fu_1336_p1 : len_236_fu_1345_p2);

assign len_238_fu_1364_p2 = (len_237_fu_1351_p3 + 3'd1);

assign len_239_fu_1999_p3 = ((done_91_reg_3261[0:0] == 1'b1) ? len_237_reg_3256 : len_238_reg_3267);

assign len_240_fu_2008_p2 = (len_239_fu_1999_p3 + 3'd1);

assign len_241_fu_2014_p3 = ((or_ln321_fu_2004_p2[0:0] == 1'b1) ? len_239_fu_1999_p3 : len_240_fu_2008_p2);

assign len_243_fu_763_p2 = ((present_window_load_reg_3000 == tmp_123_fu_753_p4) ? 1'b1 : 1'b0);

assign len_244_fu_1423_p3 = ((len_243_reg_3076[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign len_245_fu_1430_p3 = ((done_93_fu_1418_p2[0:0] == 1'b1) ? zext_ln321_16_fu_1410_p1 : len_244_fu_1423_p3);

assign len_246_fu_1443_p2 = (len_245_fu_1430_p3 + 2'd1);

assign len_247_fu_1449_p3 = ((done_94_fu_1438_p2[0:0] == 1'b1) ? len_245_fu_1430_p3 : len_246_fu_1443_p2);

assign len_248_fu_1466_p2 = (zext_ln317_16_fu_1457_p1 + 3'd1);

assign len_249_fu_1472_p3 = ((done_95_fu_1461_p2[0:0] == 1'b1) ? zext_ln317_16_fu_1457_p1 : len_248_fu_1466_p2);

assign len_250_fu_1485_p2 = (len_249_fu_1472_p3 + 3'd1);

assign len_251_fu_2118_p3 = ((done_96_reg_3302[0:0] == 1'b1) ? len_249_reg_3297 : len_250_reg_3308);

assign len_252_fu_2127_p2 = (len_251_fu_2118_p3 + 3'd1);

assign len_253_fu_2133_p3 = ((or_ln321_96_fu_2123_p2[0:0] == 1'b1) ? len_251_fu_2118_p3 : len_252_fu_2127_p2);

assign len_255_fu_863_p2 = ((present_window_load_reg_3000 == tmp_130_fu_853_p4) ? 1'b1 : 1'b0);

assign len_256_fu_1544_p3 = ((len_255_reg_3113[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign len_257_fu_1551_p3 = ((done_98_fu_1539_p2[0:0] == 1'b1) ? zext_ln321_17_fu_1531_p1 : len_256_fu_1544_p3);

assign len_258_fu_1564_p2 = (len_257_fu_1551_p3 + 2'd1);

assign len_259_fu_1570_p3 = ((done_99_fu_1559_p2[0:0] == 1'b1) ? len_257_fu_1551_p3 : len_258_fu_1564_p2);

assign len_260_fu_1587_p2 = (zext_ln317_17_fu_1578_p1 + 3'd1);

assign len_261_fu_1593_p3 = ((done_100_fu_1582_p2[0:0] == 1'b1) ? zext_ln317_17_fu_1578_p1 : len_260_fu_1587_p2);

assign len_262_fu_2237_p2 = (len_261_reg_3338 + 3'd1);

assign len_263_fu_2242_p3 = ((done_101_reg_3344[0:0] == 1'b1) ? len_261_reg_3338 : len_262_fu_2237_p2);

assign len_264_fu_2252_p2 = (len_263_fu_2242_p3 + 3'd1);

assign len_265_fu_2258_p3 = ((or_ln321_101_fu_2248_p2[0:0] == 1'b1) ? len_263_fu_2242_p3 : len_264_fu_2252_p2);

assign len_267_fu_963_p2 = ((present_window_load_reg_3000 == tmp_137_fu_953_p4) ? 1'b1 : 1'b0);

assign len_268_fu_1659_p3 = ((len_267_reg_3150[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign len_269_fu_1666_p3 = ((done_103_fu_1654_p2[0:0] == 1'b1) ? zext_ln321_18_fu_1646_p1 : len_268_fu_1659_p3);

assign len_270_fu_1679_p2 = (len_269_fu_1666_p3 + 2'd1);

assign len_271_fu_1685_p3 = ((done_104_fu_1674_p2[0:0] == 1'b1) ? len_269_fu_1666_p3 : len_270_fu_1679_p2);

assign len_272_fu_1702_p2 = (zext_ln317_18_fu_1693_p1 + 3'd1);

assign len_273_fu_1708_p3 = ((done_105_fu_1697_p2[0:0] == 1'b1) ? zext_ln317_18_fu_1693_p1 : len_272_fu_1702_p2);

assign len_274_fu_2316_p2 = (len_273_reg_3375 + 3'd1);

assign len_275_fu_2321_p3 = ((done_106_reg_3381[0:0] == 1'b1) ? len_273_reg_3375 : len_274_fu_2316_p2);

assign len_276_fu_2331_p2 = (len_275_fu_2321_p3 + 3'd1);

assign len_277_fu_2337_p3 = ((or_ln321_106_fu_2327_p2[0:0] == 1'b1) ? len_275_fu_2321_p3 : len_276_fu_2331_p2);

assign len_279_fu_1063_p2 = ((present_window_load_reg_3000 == tmp_144_fu_1053_p4) ? 1'b1 : 1'b0);

assign len_280_fu_1774_p3 = ((len_279_reg_3187[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign len_281_fu_1781_p3 = ((done_108_fu_1769_p2[0:0] == 1'b1) ? zext_ln321_19_fu_1761_p1 : len_280_fu_1774_p3);

assign len_282_fu_1794_p2 = (len_281_fu_1781_p3 + 2'd1);

assign len_283_fu_1800_p3 = ((done_109_fu_1789_p2[0:0] == 1'b1) ? len_281_fu_1781_p3 : len_282_fu_1794_p2);

assign len_284_fu_1817_p2 = (zext_ln317_19_fu_1808_p1 + 3'd1);

assign len_285_fu_1823_p3 = ((done_110_fu_1812_p2[0:0] == 1'b1) ? zext_ln317_19_fu_1808_p1 : len_284_fu_1817_p2);

assign len_286_fu_2395_p2 = (len_285_reg_3412 + 3'd1);

assign len_287_fu_2400_p3 = ((done_111_reg_3418[0:0] == 1'b1) ? len_285_reg_3412 : len_286_fu_2395_p2);

assign len_288_fu_2410_p2 = (len_287_fu_2400_p3 + 3'd1);

assign len_289_fu_2416_p3 = ((or_ln321_111_fu_2406_p2[0:0] == 1'b1) ? len_287_fu_2400_p3 : len_288_fu_2410_p2);

assign len_291_fu_1163_p2 = ((present_window_load_reg_3000 == tmp_151_fu_1153_p4) ? 1'b1 : 1'b0);

assign len_292_fu_1889_p3 = ((len_291_reg_3224[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign len_293_fu_1896_p3 = ((done_113_fu_1884_p2[0:0] == 1'b1) ? zext_ln321_20_fu_1876_p1 : len_292_fu_1889_p3);

assign len_294_fu_1909_p2 = (len_293_fu_1896_p3 + 2'd1);

assign len_295_fu_1915_p3 = ((done_114_fu_1904_p2[0:0] == 1'b1) ? len_293_fu_1896_p3 : len_294_fu_1909_p2);

assign len_296_fu_1932_p2 = (zext_ln317_20_fu_1923_p1 + 3'd1);

assign len_297_fu_1938_p3 = ((done_115_fu_1927_p2[0:0] == 1'b1) ? zext_ln317_20_fu_1923_p1 : len_296_fu_1932_p2);

assign len_298_fu_2474_p2 = (len_297_reg_3449 + 3'd1);

assign len_299_fu_2479_p3 = ((done_116_reg_3455[0:0] == 1'b1) ? len_297_reg_3449 : len_298_fu_2474_p2);

assign len_300_fu_2489_p2 = (len_299_fu_2479_p3 + 3'd1);

assign len_301_fu_2495_p3 = ((or_ln321_116_fu_2485_p2[0:0] == 1'b1) ? len_299_fu_2479_p3 : len_300_fu_2489_p2);

assign len_303_fu_2110_p3 = ((and_ln330_53_fu_2104_p2[0:0] == 1'b1) ? len_241_fu_2014_p3 : select_ln330_fu_2090_p3);

assign len_304_fu_2229_p3 = ((and_ln330_56_fu_2223_p2[0:0] == 1'b1) ? len_253_fu_2133_p3 : select_ln330_35_fu_2209_p3);

assign len_305_fu_2633_p3 = ((and_ln330_59_fu_2628_p2[0:0] == 1'b1) ? len_265_reg_3499 : select_ln330_37_fu_2614_p3);

assign len_306_fu_2696_p3 = ((and_ln330_62_fu_2691_p2[0:0] == 1'b1) ? len_277_reg_3516 : select_ln330_39_fu_2677_p3);

assign len_307_fu_2751_p3 = ((and_ln330_65_fu_2746_p2[0:0] == 1'b1) ? len_289_reg_3533 : select_ln330_41_fu_2732_p3);

assign len_308_fu_2792_p3 = ((and_ln330_68_fu_2787_p2[0:0] == 1'b1) ? len_301_reg_3550 : select_ln330_43_fu_2773_p3);

assign len_fu_663_p2 = ((present_window_load_reg_3000 == trunc_ln714_fu_659_p1) ? 1'b1 : 1'b0);

assign match_length_32_fu_2580_p3 = ((icmp_ln336_16_fu_2576_p2[0:0] == 1'b1) ? len_304_reg_3493 : len_303_reg_3486);

assign match_length_34_fu_2646_p3 = ((icmp_ln336_17_fu_2640_p2[0:0] == 1'b1) ? len_305_fu_2633_p3 : match_length_32_fu_2580_p3);

assign match_length_36_fu_2709_p3 = ((icmp_ln336_18_fu_2703_p2[0:0] == 1'b1) ? len_306_fu_2696_p3 : match_length_34_fu_2646_p3);

assign match_length_38_fu_2814_p3 = ((icmp_ln336_19_fu_2810_p2[0:0] == 1'b1) ? len_307_reg_3583 : match_length_36_reg_3577);

assign match_length_40_fu_2838_p3 = ((icmp_ln336_20_fu_2833_p2[0:0] == 1'b1) ? len_308_reg_3589 : match_length_38_fu_2814_p3);

assign match_offset_25_fu_2563_p3 = ((icmp_ln336_fu_2558_p2[0:0] == 1'b1) ? add_ln327_fu_2553_p2 : 16'd0);

assign match_offset_26_fu_2147_p2 = ($signed(sub_ln327_16_reg_3318) + $signed(32'd4294967295));

assign match_offset_27_fu_2586_p3 = ((icmp_ln336_16_fu_2576_p2[0:0] == 1'b1) ? add_ln327_7_fu_2571_p2 : match_offset_25_fu_2563_p3);

assign match_offset_28_fu_2272_p2 = ($signed(sub_ln327_17_reg_3355) + $signed(32'd4294967295));

assign match_offset_29_fu_2654_p3 = ((icmp_ln336_17_fu_2640_p2[0:0] == 1'b1) ? add_ln327_8_fu_2594_p2 : match_offset_27_fu_2586_p3);

assign match_offset_30_fu_2351_p2 = ($signed(sub_ln327_18_reg_3392) + $signed(32'd4294967295));

assign match_offset_31_fu_2430_p2 = ($signed(sub_ln327_19_reg_3429) + $signed(32'd4294967295));

assign match_offset_32_fu_2509_p2 = ($signed(sub_ln327_20_reg_3466) + $signed(32'd4294967295));

assign match_offset_fu_2028_p2 = ($signed(sub_ln327_reg_3277) + $signed(32'd4294967295));

assign or_ln321_101_fu_2248_p2 = (icmp_ln321_122_reg_3140_pp0_iter3_reg | done_101_reg_3344);

assign or_ln321_106_fu_2327_p2 = (icmp_ln321_128_reg_3177_pp0_iter3_reg | done_106_reg_3381);

assign or_ln321_111_fu_2406_p2 = (icmp_ln321_134_reg_3214_pp0_iter3_reg | done_111_reg_3418);

assign or_ln321_116_fu_2485_p2 = (icmp_ln321_140_reg_3251_pp0_iter3_reg | done_116_reg_3455);

assign or_ln321_96_fu_2123_p2 = (icmp_ln321_116_reg_3103_pp0_iter3_reg | done_96_reg_3302);

assign or_ln321_fu_2004_p2 = (icmp_ln321_110_reg_3066_pp0_iter3_reg | done_91_reg_3261);

assign present_window_100_out = present_window_fu_310;

assign present_window_96_out = present_window_87_reg_2988_pp0_iter5_reg;

assign present_window_97_out = present_window_88_reg_2976_pp0_iter5_reg;

assign present_window_98_out = present_window_89_reg_2964_pp0_iter5_reg;

assign present_window_99_out = present_window_90_reg_2952_pp0_iter5_reg;

assign select_ln330_35_fu_2209_p3 = ((and_ln330_55_fu_2203_p2[0:0] == 1'b1) ? 3'd3 : 3'd0);

assign select_ln330_37_fu_2614_p3 = ((and_ln330_58_fu_2609_p2[0:0] == 1'b1) ? 3'd3 : 3'd0);

assign select_ln330_39_fu_2677_p3 = ((and_ln330_61_fu_2672_p2[0:0] == 1'b1) ? 3'd3 : 3'd0);

assign select_ln330_41_fu_2732_p3 = ((and_ln330_64_fu_2727_p2[0:0] == 1'b1) ? 3'd3 : 3'd0);

assign select_ln330_43_fu_2773_p3 = ((and_ln330_67_fu_2768_p2[0:0] == 1'b1) ? 3'd3 : 3'd0);

assign select_ln330_fu_2090_p3 = ((and_ln330_52_fu_2084_p2[0:0] == 1'b1) ? 3'd3 : 3'd0);

assign select_ln336_18_fu_2804_p3 = ((icmp_ln336_18_reg_3572[0:0] == 1'b1) ? add_ln336_6_fu_2799_p2 : match_offset_29_reg_3567);

assign select_ln336_19_fu_2825_p3 = ((icmp_ln336_19_fu_2810_p2[0:0] == 1'b1) ? add_ln336_fu_2820_p2 : select_ln336_18_fu_2804_p3);

assign select_ln336_20_fu_2850_p3 = ((icmp_ln336_20_fu_2833_p2[0:0] == 1'b1) ? add_ln336_5_fu_2845_p2 : select_ln336_19_fu_2825_p3);

assign shl_ln293_9_fu_555_p3 = {{present_window_83_fu_314}, {3'd0}};

assign shl_ln293_s_fu_563_p3 = {{present_window_84_fu_318}, {2'd0}};

assign shl_ln5_fu_571_p3 = {{present_window_fu_310}, {1'd0}};

assign shl_ln_fu_543_p3 = {{present_window_fu_310}, {4'd0}};

assign sub_ln327_16_fu_1497_p2 = (currIdx_fu_1256_p2 - zext_ln319_16_fu_1407_p1);

assign sub_ln327_17_fu_1612_p2 = (currIdx_fu_1256_p2 - zext_ln319_17_fu_1528_p1);

assign sub_ln327_18_fu_1727_p2 = (currIdx_fu_1256_p2 - zext_ln319_18_fu_1643_p1);

assign sub_ln327_19_fu_1842_p2 = (currIdx_fu_1256_p2 - zext_ln319_19_fu_1758_p1);

assign sub_ln327_20_fu_1957_p2 = (currIdx_fu_1256_p2 - zext_ln319_20_fu_1873_p1);

assign sub_ln327_fu_1376_p2 = (currIdx_fu_1256_p2 - zext_ln319_fu_1286_p1);

assign tmp_118_fu_683_p4 = {{dict_V_q1[23:16]}};

assign tmp_119_fu_698_p4 = {{dict_V_q1[31:24]}};

assign tmp_120_fu_713_p4 = {{dict_V_q1[39:32]}};

assign tmp_121_fu_728_p4 = {{dict_V_q1[47:40]}};

assign tmp_122_fu_1382_p4 = {{sub_ln327_fu_1376_p2[31:15]}};

assign tmp_123_fu_753_p4 = {{dict_V_q1[79:72]}};

assign tmp_124_fu_768_p4 = {{dict_V_q1[87:80]}};

assign tmp_125_fu_783_p4 = {{dict_V_q1[95:88]}};

assign tmp_126_fu_798_p4 = {{dict_V_q1[103:96]}};

assign tmp_127_fu_813_p4 = {{dict_V_q1[111:104]}};

assign tmp_128_fu_828_p4 = {{dict_V_q1[119:112]}};

assign tmp_129_fu_1503_p4 = {{sub_ln327_16_fu_1497_p2[31:15]}};

assign tmp_130_fu_853_p4 = {{dict_V_q1[151:144]}};

assign tmp_131_fu_868_p4 = {{dict_V_q1[159:152]}};

assign tmp_132_fu_883_p4 = {{dict_V_q1[167:160]}};

assign tmp_133_fu_898_p4 = {{dict_V_q1[175:168]}};

assign tmp_134_fu_913_p4 = {{dict_V_q1[183:176]}};

assign tmp_135_fu_928_p4 = {{dict_V_q1[191:184]}};

assign tmp_136_fu_1618_p4 = {{sub_ln327_17_fu_1612_p2[31:15]}};

assign tmp_137_fu_953_p4 = {{dict_V_q1[223:216]}};

assign tmp_138_fu_968_p4 = {{dict_V_q1[231:224]}};

assign tmp_139_fu_983_p4 = {{dict_V_q1[239:232]}};

assign tmp_140_fu_998_p4 = {{dict_V_q1[247:240]}};

assign tmp_141_fu_1013_p4 = {{dict_V_q1[255:248]}};

assign tmp_142_fu_1028_p4 = {{dict_V_q1[263:256]}};

assign tmp_143_fu_1733_p4 = {{sub_ln327_18_fu_1727_p2[31:15]}};

assign tmp_144_fu_1053_p4 = {{dict_V_q1[295:288]}};

assign tmp_145_fu_1068_p4 = {{dict_V_q1[303:296]}};

assign tmp_146_fu_1083_p4 = {{dict_V_q1[311:304]}};

assign tmp_147_fu_1098_p4 = {{dict_V_q1[319:312]}};

assign tmp_148_fu_1113_p4 = {{dict_V_q1[327:320]}};

assign tmp_149_fu_1128_p4 = {{dict_V_q1[335:328]}};

assign tmp_150_fu_1848_p4 = {{sub_ln327_19_fu_1842_p2[31:15]}};

assign tmp_151_fu_1153_p4 = {{dict_V_q1[367:360]}};

assign tmp_152_fu_1168_p4 = {{dict_V_q1[375:368]}};

assign tmp_153_fu_1183_p4 = {{dict_V_q1[383:376]}};

assign tmp_154_fu_1198_p4 = {{dict_V_q1[391:384]}};

assign tmp_155_fu_1213_p4 = {{dict_V_q1[399:392]}};

assign tmp_156_fu_1228_p4 = {{dict_V_q1[407:400]}};

assign tmp_157_fu_1963_p4 = {{sub_ln327_20_fu_1957_p2[31:15]}};

assign tmp_data_V_43_fu_511_p1 = downStream_3_dout[7:0];

assign tmp_s_fu_668_p4 = {{dict_V_q1[15:8]}};

assign trunc_ln1715_fu_645_p1 = dict_V_q1[359:0];

assign trunc_ln276_fu_1246_p1 = iIdx_1_fu_302[23:0];

assign trunc_ln338_16_fu_1519_p1 = sub_ln327_16_fu_1497_p2[15:0];

assign trunc_ln338_17_fu_1634_p1 = sub_ln327_17_fu_1612_p2[15:0];

assign trunc_ln338_18_fu_1749_p1 = sub_ln327_18_fu_1727_p2[15:0];

assign trunc_ln338_19_fu_1864_p1 = sub_ln327_19_fu_1842_p2[15:0];

assign trunc_ln338_20_fu_1979_p1 = sub_ln327_20_fu_1957_p2[15:0];

assign trunc_ln338_fu_1398_p1 = sub_ln327_fu_1376_p2[15:0];

assign trunc_ln714_fu_659_p1 = dict_V_q1[7:0];

assign xor_ln293_4_fu_593_p2 = (zext_ln293_8_fu_589_p1 ^ shl_ln293_9_fu_555_p3);

assign xor_ln293_fu_583_p2 = (zext_ln293_fu_551_p1 ^ shl_ln293_s_fu_563_p3);

assign xor_ln294_fu_599_p2 = (zext_ln293_7_fu_579_p1 ^ xor_ln293_4_fu_593_p2);

assign xor_ln329_16_fu_2158_p2 = (icmp_ln329_16_reg_3333 ^ 1'd1);

assign xor_ln329_17_fu_2283_p2 = (icmp_ln329_17_reg_3370 ^ 1'd1);

assign xor_ln329_18_fu_2362_p2 = (icmp_ln329_18_reg_3407 ^ 1'd1);

assign xor_ln329_19_fu_2441_p2 = (icmp_ln329_19_reg_3444 ^ 1'd1);

assign xor_ln329_20_fu_2520_p2 = (icmp_ln329_20_reg_3481 ^ 1'd1);

assign xor_ln329_fu_2039_p2 = (icmp_ln329_reg_3292 ^ 1'd1);

assign xor_ln330_16_fu_2217_p2 = (icmp_ln330_35_fu_2163_p2 ^ 1'd1);

assign xor_ln330_17_fu_2622_p2 = (icmp_ln330_37_fu_2599_p2 ^ 1'd1);

assign xor_ln330_18_fu_2685_p2 = (icmp_ln330_39_fu_2662_p2 ^ 1'd1);

assign xor_ln330_19_fu_2740_p2 = (icmp_ln330_41_fu_2717_p2 ^ 1'd1);

assign xor_ln330_20_fu_2781_p2 = (icmp_ln330_43_fu_2758_p2 ^ 1'd1);

assign xor_ln330_fu_2098_p2 = (icmp_ln330_fu_2044_p2 ^ 1'd1);

assign zext_ln293_7_fu_579_p1 = shl_ln5_fu_571_p3;

assign zext_ln293_8_fu_589_p1 = xor_ln293_fu_583_p2;

assign zext_ln293_fu_551_p1 = present_window_83_fu_314;

assign zext_ln294_fu_605_p1 = xor_ln294_fu_599_p2;

assign zext_ln301_fu_615_p1 = hash_fu_609_p2;

assign zext_ln317_16_fu_1457_p1 = len_247_fu_1449_p3;

assign zext_ln317_17_fu_1578_p1 = len_259_fu_1570_p3;

assign zext_ln317_18_fu_1693_p1 = len_271_fu_1685_p3;

assign zext_ln317_19_fu_1808_p1 = len_283_fu_1800_p3;

assign zext_ln317_20_fu_1923_p1 = len_295_fu_1915_p3;

assign zext_ln317_fu_1336_p1 = len_235_fu_1328_p3;

assign zext_ln319_16_fu_1407_p1 = compareIdx_16_reg_3071;

assign zext_ln319_17_fu_1528_p1 = compareIdx_17_reg_3108;

assign zext_ln319_18_fu_1643_p1 = compareIdx_18_reg_3145;

assign zext_ln319_19_fu_1758_p1 = compareIdx_19_reg_3182;

assign zext_ln319_20_fu_1873_p1 = compareIdx_20_reg_3219;

assign zext_ln319_fu_1286_p1 = compareIdx_reg_3034;

assign zext_ln321_16_fu_1410_p1 = len_243_reg_3076;

assign zext_ln321_17_fu_1531_p1 = len_255_reg_3113;

assign zext_ln321_18_fu_1646_p1 = len_267_reg_3150;

assign zext_ln321_19_fu_1761_p1 = len_279_reg_3187;

assign zext_ln321_20_fu_1876_p1 = len_291_reg_3224;

assign zext_ln321_fu_1289_p1 = len_reg_3039;

assign zext_ln336_fu_2858_p1 = match_length_40_reg_3595;

endmodule //gzipcMulticoreStreaming_lzCompress_Pipeline_lz_compress_4
