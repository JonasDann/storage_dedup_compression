-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_radixSortMidPartial_286_10_14_Pipeline_read_heap_compute_histogram is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    intlHeapStream_i_0_dout : IN STD_LOGIC_VECTOR (24 downto 0);
    intlHeapStream_i_0_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    intlHeapStream_i_0_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    intlHeapStream_i_0_empty_n : IN STD_LOGIC;
    intlHeapStream_i_0_read : OUT STD_LOGIC;
    empty : IN STD_LOGIC_VECTOR (23 downto 0);
    prev_sorting_value_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    prev_sorting_value_V_ce0 : OUT STD_LOGIC;
    prev_sorting_value_V_we0 : OUT STD_LOGIC;
    prev_sorting_value_V_d0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    prev_sorting_frequency_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    prev_sorting_frequency_V_ce0 : OUT STD_LOGIC;
    prev_sorting_frequency_V_we0 : OUT STD_LOGIC;
    prev_sorting_frequency_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    heap_value_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    heap_value_V_ce1 : OUT STD_LOGIC;
    heap_value_V_we1 : OUT STD_LOGIC;
    heap_value_V_d1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    heap_frequency_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    heap_frequency_V_ce1 : OUT STD_LOGIC;
    heap_frequency_V_we1 : OUT STD_LOGIC;
    heap_frequency_V_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    current_digit_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    current_digit_V_ce0 : OUT STD_LOGIC;
    current_digit_V_we0 : OUT STD_LOGIC;
    current_digit_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    digit_histogram_V_46_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_46_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_45_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_45_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_44_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_44_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_43_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_43_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_42_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_42_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_41_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_41_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_40_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_40_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_39_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_39_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_38_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_38_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_37_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_37_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_36_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_36_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_35_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_35_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_34_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_34_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_33_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_33_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_65_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_65_out_ap_vld : OUT STD_LOGIC;
    heapLength_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    heapLength_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of gzipcMulticoreStreaming_radixSortMidPartial_286_10_14_Pipeline_read_heap_compute_histogram is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal intlHeapStream_i_0_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal inHeapV_strobe_V_reg_419 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_loop_init : STD_LOGIC;
    signal zext_ln408_fu_599_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal heapLength_fu_150 : STD_LOGIC_VECTOR (15 downto 0);
    signal heapLength_2_fu_524_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln145_fu_154 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln145_fu_743_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal digit_histogram_V_fu_158 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_16_fu_657_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_V_fu_608_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal digit_histogram_V_1_fu_162 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_2_fu_166 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_3_fu_170 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_4_fu_174 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_5_fu_178 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_6_fu_182 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_7_fu_186 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_8_fu_190 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_9_fu_194 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_10_fu_198 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_11_fu_202 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_12_fu_206 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_13_fu_210 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_14_fu_214 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_15_fu_218 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal inHeapV_data_value_V_fu_581_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_619_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_619_p18 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_421 : BOOLEAN;
    signal ap_condition_424 : BOOLEAN;
    signal ap_condition_427 : BOOLEAN;
    signal ap_condition_430 : BOOLEAN;
    signal ap_condition_433 : BOOLEAN;
    signal ap_condition_436 : BOOLEAN;
    signal ap_condition_439 : BOOLEAN;
    signal ap_condition_442 : BOOLEAN;
    signal ap_condition_445 : BOOLEAN;
    signal ap_condition_448 : BOOLEAN;
    signal ap_condition_451 : BOOLEAN;
    signal ap_condition_454 : BOOLEAN;
    signal ap_condition_457 : BOOLEAN;
    signal ap_condition_460 : BOOLEAN;
    signal ap_condition_463 : BOOLEAN;
    signal ap_condition_466 : BOOLEAN;
    signal ap_condition_471 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component gzipcMulticoreStreaming_mux_164_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        din3 : IN STD_LOGIC_VECTOR (9 downto 0);
        din4 : IN STD_LOGIC_VECTOR (9 downto 0);
        din5 : IN STD_LOGIC_VECTOR (9 downto 0);
        din6 : IN STD_LOGIC_VECTOR (9 downto 0);
        din7 : IN STD_LOGIC_VECTOR (9 downto 0);
        din8 : IN STD_LOGIC_VECTOR (9 downto 0);
        din9 : IN STD_LOGIC_VECTOR (9 downto 0);
        din10 : IN STD_LOGIC_VECTOR (9 downto 0);
        din11 : IN STD_LOGIC_VECTOR (9 downto 0);
        din12 : IN STD_LOGIC_VECTOR (9 downto 0);
        din13 : IN STD_LOGIC_VECTOR (9 downto 0);
        din14 : IN STD_LOGIC_VECTOR (9 downto 0);
        din15 : IN STD_LOGIC_VECTOR (9 downto 0);
        din16 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_164_10_1_1_U1200 : component gzipcMulticoreStreaming_mux_164_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 10,
        din5_WIDTH => 10,
        din6_WIDTH => 10,
        din7_WIDTH => 10,
        din8_WIDTH => 10,
        din9_WIDTH => 10,
        din10_WIDTH => 10,
        din11_WIDTH => 10,
        din12_WIDTH => 10,
        din13_WIDTH => 10,
        din14_WIDTH => 10,
        din15_WIDTH => 10,
        din16_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        din0 => digit_histogram_V_fu_158,
        din1 => digit_histogram_V_1_fu_162,
        din2 => digit_histogram_V_2_fu_166,
        din3 => digit_histogram_V_3_fu_170,
        din4 => digit_histogram_V_4_fu_174,
        din5 => digit_histogram_V_5_fu_178,
        din6 => digit_histogram_V_6_fu_182,
        din7 => digit_histogram_V_7_fu_186,
        din8 => digit_histogram_V_8_fu_190,
        din9 => digit_histogram_V_9_fu_194,
        din10 => digit_histogram_V_10_fu_198,
        din11 => digit_histogram_V_11_fu_202,
        din12 => digit_histogram_V_12_fu_206,
        din13 => digit_histogram_V_13_fu_210,
        din14 => digit_histogram_V_14_fu_214,
        din15 => digit_histogram_V_15_fu_218,
        din16 => tmp_s_fu_619_p17,
        dout => tmp_s_fu_619_p18);

    flow_control_loop_pipe_sequential_init_U : component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    digit_histogram_V_10_fu_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_10_fu_198 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_421)) then 
                    digit_histogram_V_10_fu_198 <= digit_histogram_V_16_fu_657_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_11_fu_202_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_11_fu_202 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_424)) then 
                    digit_histogram_V_11_fu_202 <= digit_histogram_V_16_fu_657_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_12_fu_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_12_fu_206 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_427)) then 
                    digit_histogram_V_12_fu_206 <= digit_histogram_V_16_fu_657_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_13_fu_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_13_fu_210 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_430)) then 
                    digit_histogram_V_13_fu_210 <= digit_histogram_V_16_fu_657_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_14_fu_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_14_fu_214 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_433)) then 
                    digit_histogram_V_14_fu_214 <= digit_histogram_V_16_fu_657_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_15_fu_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_15_fu_218 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_436)) then 
                    digit_histogram_V_15_fu_218 <= digit_histogram_V_16_fu_657_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_1_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_1_fu_162 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_439)) then 
                    digit_histogram_V_1_fu_162 <= digit_histogram_V_16_fu_657_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_2_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_2_fu_166 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_442)) then 
                    digit_histogram_V_2_fu_166 <= digit_histogram_V_16_fu_657_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_3_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_3_fu_170 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_445)) then 
                    digit_histogram_V_3_fu_170 <= digit_histogram_V_16_fu_657_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_4_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_4_fu_174 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_448)) then 
                    digit_histogram_V_4_fu_174 <= digit_histogram_V_16_fu_657_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_5_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_5_fu_178 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_451)) then 
                    digit_histogram_V_5_fu_178 <= digit_histogram_V_16_fu_657_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_6_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_6_fu_182 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_454)) then 
                    digit_histogram_V_6_fu_182 <= digit_histogram_V_16_fu_657_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_7_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_7_fu_186 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_457)) then 
                    digit_histogram_V_7_fu_186 <= digit_histogram_V_16_fu_657_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_8_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_8_fu_190 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_460)) then 
                    digit_histogram_V_8_fu_190 <= digit_histogram_V_16_fu_657_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_9_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_9_fu_194 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_463)) then 
                    digit_histogram_V_9_fu_194 <= digit_histogram_V_16_fu_657_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_fu_158 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_466)) then 
                    digit_histogram_V_fu_158 <= digit_histogram_V_16_fu_657_p2;
                end if;
            end if; 
        end if;
    end process;

    heapLength_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    heapLength_fu_150 <= ap_const_lv16_0;
                elsif (((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    heapLength_fu_150 <= heapLength_2_fu_524_p2;
                end if;
            end if; 
        end if;
    end process;

    inHeapV_strobe_V_reg_419_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                if ((ap_const_boolean_1 = ap_condition_471)) then 
                    inHeapV_strobe_V_reg_419 <= intlHeapStream_i_0_dout(24 downto 24);
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1))) then 
                    inHeapV_strobe_V_reg_419 <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;

    phi_ln145_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    phi_ln145_fu_154 <= empty;
                elsif (((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    phi_ln145_fu_154 <= trunc_ln145_fu_743_p1;
                end if;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, intlHeapStream_i_0_empty_n, inHeapV_strobe_V_reg_419)
    begin
                ap_block_pp0_stage0_01001 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (intlHeapStream_i_0_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, intlHeapStream_i_0_empty_n, inHeapV_strobe_V_reg_419)
    begin
                ap_block_pp0_stage0_11001 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (intlHeapStream_i_0_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, intlHeapStream_i_0_empty_n, inHeapV_strobe_V_reg_419)
    begin
                ap_block_pp0_stage0_subdone <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (intlHeapStream_i_0_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(intlHeapStream_i_0_empty_n, inHeapV_strobe_V_reg_419)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (intlHeapStream_i_0_empty_n = ap_const_logic_0));
    end process;


    ap_condition_421_assign_proc : process(ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, digit_V_fu_608_p4)
    begin
                ap_condition_421 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (digit_V_fu_608_p4 = ap_const_lv4_A));
    end process;


    ap_condition_424_assign_proc : process(ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, digit_V_fu_608_p4)
    begin
                ap_condition_424 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (digit_V_fu_608_p4 = ap_const_lv4_B));
    end process;


    ap_condition_427_assign_proc : process(ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, digit_V_fu_608_p4)
    begin
                ap_condition_427 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (digit_V_fu_608_p4 = ap_const_lv4_C));
    end process;


    ap_condition_430_assign_proc : process(ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, digit_V_fu_608_p4)
    begin
                ap_condition_430 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (digit_V_fu_608_p4 = ap_const_lv4_D));
    end process;


    ap_condition_433_assign_proc : process(ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, digit_V_fu_608_p4)
    begin
                ap_condition_433 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (digit_V_fu_608_p4 = ap_const_lv4_E));
    end process;


    ap_condition_436_assign_proc : process(ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, digit_V_fu_608_p4)
    begin
                ap_condition_436 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (digit_V_fu_608_p4 = ap_const_lv4_F));
    end process;


    ap_condition_439_assign_proc : process(ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, digit_V_fu_608_p4)
    begin
                ap_condition_439 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (digit_V_fu_608_p4 = ap_const_lv4_1));
    end process;


    ap_condition_442_assign_proc : process(ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, digit_V_fu_608_p4)
    begin
                ap_condition_442 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (digit_V_fu_608_p4 = ap_const_lv4_2));
    end process;


    ap_condition_445_assign_proc : process(ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, digit_V_fu_608_p4)
    begin
                ap_condition_445 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (digit_V_fu_608_p4 = ap_const_lv4_3));
    end process;


    ap_condition_448_assign_proc : process(ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, digit_V_fu_608_p4)
    begin
                ap_condition_448 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (digit_V_fu_608_p4 = ap_const_lv4_4));
    end process;


    ap_condition_451_assign_proc : process(ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, digit_V_fu_608_p4)
    begin
                ap_condition_451 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (digit_V_fu_608_p4 = ap_const_lv4_5));
    end process;


    ap_condition_454_assign_proc : process(ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, digit_V_fu_608_p4)
    begin
                ap_condition_454 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (digit_V_fu_608_p4 = ap_const_lv4_6));
    end process;


    ap_condition_457_assign_proc : process(ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, digit_V_fu_608_p4)
    begin
                ap_condition_457 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (digit_V_fu_608_p4 = ap_const_lv4_7));
    end process;


    ap_condition_460_assign_proc : process(ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, digit_V_fu_608_p4)
    begin
                ap_condition_460 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (digit_V_fu_608_p4 = ap_const_lv4_8));
    end process;


    ap_condition_463_assign_proc : process(ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, digit_V_fu_608_p4)
    begin
                ap_condition_463 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (digit_V_fu_608_p4 = ap_const_lv4_9));
    end process;


    ap_condition_466_assign_proc : process(ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, digit_V_fu_608_p4)
    begin
                ap_condition_466 <= ((inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (digit_V_fu_608_p4 = ap_const_lv4_0));
    end process;


    ap_condition_471_assign_proc : process(ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, ap_block_pp0_stage0_11001)
    begin
                ap_condition_471 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;
    ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 <= inHeapV_strobe_V_reg_419;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    current_digit_V_address0 <= zext_ln408_fu_599_p1(9 - 1 downto 0);

    current_digit_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            current_digit_V_ce0 <= ap_const_logic_1;
        else 
            current_digit_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    current_digit_V_d0 <= phi_ln145_fu_154(17 downto 14);

    current_digit_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            current_digit_V_we0 <= ap_const_logic_1;
        else 
            current_digit_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    digit_V_fu_608_p4 <= phi_ln145_fu_154(17 downto 14);
    digit_histogram_V_16_fu_657_p2 <= std_logic_vector(unsigned(tmp_s_fu_619_p18) + unsigned(ap_const_lv10_1));
    digit_histogram_V_33_out <= digit_histogram_V_1_fu_162;

    digit_histogram_V_33_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_33_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_33_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_34_out <= digit_histogram_V_2_fu_166;

    digit_histogram_V_34_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_34_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_34_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_35_out <= digit_histogram_V_3_fu_170;

    digit_histogram_V_35_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_35_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_35_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_36_out <= digit_histogram_V_4_fu_174;

    digit_histogram_V_36_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_36_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_36_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_37_out <= digit_histogram_V_5_fu_178;

    digit_histogram_V_37_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_37_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_37_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_38_out <= digit_histogram_V_6_fu_182;

    digit_histogram_V_38_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_38_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_38_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_39_out <= digit_histogram_V_7_fu_186;

    digit_histogram_V_39_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_39_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_39_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_40_out <= digit_histogram_V_8_fu_190;

    digit_histogram_V_40_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_40_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_40_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_41_out <= digit_histogram_V_9_fu_194;

    digit_histogram_V_41_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_41_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_41_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_42_out <= digit_histogram_V_10_fu_198;

    digit_histogram_V_42_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_42_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_42_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_43_out <= digit_histogram_V_11_fu_202;

    digit_histogram_V_43_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_43_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_43_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_44_out <= digit_histogram_V_12_fu_206;

    digit_histogram_V_44_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_44_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_44_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_45_out <= digit_histogram_V_13_fu_210;

    digit_histogram_V_45_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_45_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_45_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_46_out <= digit_histogram_V_14_fu_214;

    digit_histogram_V_46_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_46_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_46_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_65_out <= digit_histogram_V_fu_158;

    digit_histogram_V_65_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_65_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_65_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    heapLength_2_fu_524_p2 <= std_logic_vector(unsigned(heapLength_fu_150) + unsigned(ap_const_lv16_1));
    heapLength_out <= heapLength_fu_150;

    heapLength_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_inHeapV_strobe_V_phi_fu_423_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            heapLength_out_ap_vld <= ap_const_logic_1;
        else 
            heapLength_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    heap_frequency_V_address1 <= zext_ln408_fu_599_p1(9 - 1 downto 0);

    heap_frequency_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            heap_frequency_V_ce1 <= ap_const_logic_1;
        else 
            heap_frequency_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    heap_frequency_V_d1 <= phi_ln145_fu_154(23 downto 10);

    heap_frequency_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            heap_frequency_V_we1 <= ap_const_logic_1;
        else 
            heap_frequency_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    heap_value_V_address1 <= zext_ln408_fu_599_p1(9 - 1 downto 0);

    heap_value_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            heap_value_V_ce1 <= ap_const_logic_1;
        else 
            heap_value_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    heap_value_V_d1 <= inHeapV_data_value_V_fu_581_p1;

    heap_value_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            heap_value_V_we1 <= ap_const_logic_1;
        else 
            heap_value_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    inHeapV_data_value_V_fu_581_p1 <= phi_ln145_fu_154(10 - 1 downto 0);

    intlHeapStream_i_0_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, intlHeapStream_i_0_empty_n, ap_block_pp0_stage0, inHeapV_strobe_V_reg_419)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            intlHeapStream_i_0_blk_n <= intlHeapStream_i_0_empty_n;
        else 
            intlHeapStream_i_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    intlHeapStream_i_0_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            intlHeapStream_i_0_read <= ap_const_logic_1;
        else 
            intlHeapStream_i_0_read <= ap_const_logic_0;
        end if; 
    end process;

    prev_sorting_frequency_V_address0 <= zext_ln408_fu_599_p1(9 - 1 downto 0);

    prev_sorting_frequency_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            prev_sorting_frequency_V_ce0 <= ap_const_logic_1;
        else 
            prev_sorting_frequency_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    prev_sorting_frequency_V_d0 <= phi_ln145_fu_154(23 downto 10);

    prev_sorting_frequency_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            prev_sorting_frequency_V_we0 <= ap_const_logic_1;
        else 
            prev_sorting_frequency_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    prev_sorting_value_V_address0 <= zext_ln408_fu_599_p1(9 - 1 downto 0);

    prev_sorting_value_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            prev_sorting_value_V_ce0 <= ap_const_logic_1;
        else 
            prev_sorting_value_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    prev_sorting_value_V_d0 <= inHeapV_data_value_V_fu_581_p1;

    prev_sorting_value_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, inHeapV_strobe_V_reg_419, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (inHeapV_strobe_V_reg_419 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            prev_sorting_value_V_we0 <= ap_const_logic_1;
        else 
            prev_sorting_value_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_s_fu_619_p17 <= phi_ln145_fu_154(17 downto 14);
    trunc_ln145_fu_743_p1 <= intlHeapStream_i_0_dout(24 - 1 downto 0);
    zext_ln408_fu_599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(heapLength_fu_150),64));
end behav;
