-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_genBitLenFreq_14_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ldCodes1_dout : IN STD_LOGIC_VECTOR (20 downto 0);
    ldCodes1_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
    ldCodes1_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
    ldCodes1_empty_n : IN STD_LOGIC;
    ldCodes1_read : OUT STD_LOGIC;
    eoBlocks_1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    eoBlocks_1_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    eoBlocks_1_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    eoBlocks_1_empty_n : IN STD_LOGIC;
    eoBlocks_1_read : OUT STD_LOGIC;
    ldFrequency_din : OUT STD_LOGIC_VECTOR (14 downto 0);
    ldFrequency_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    ldFrequency_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    ldFrequency_full_n : IN STD_LOGIC;
    ldFrequency_write : OUT STD_LOGIC;
    ldMaxCodes122_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    ldMaxCodes122_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    ldMaxCodes122_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    ldMaxCodes122_empty_n : IN STD_LOGIC;
    ldMaxCodes122_read : OUT STD_LOGIC );
end;


architecture behav of gzipcMulticoreStreaming_genBitLenFreq_14_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv64_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010001";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv8_8A : STD_LOGIC_VECTOR (7 downto 0) := "10001010";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal hctMeta_2_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal hctMeta_2_ce0 : STD_LOGIC;
    signal hctMeta_2_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ldCodes1_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln1677_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal eoBlocks_1_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ldMaxCodes122_blk_n : STD_LOGIC;
    signal add_ln1669_fu_286_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln1677_fu_298_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1677_reg_404 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal nextlen_reg_409 : STD_LOGIC_VECTOR (4 downto 0);
    signal maximumCodeLength_V_reg_415 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln145_fu_319_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln145_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal select_ln145_1_fu_328_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln145_1_reg_427 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln1693_fu_337_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1693_reg_432 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal hctMeta_2_load_reg_442 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal blFreq_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal blFreq_V_ce0 : STD_LOGIC;
    signal blFreq_V_we0 : STD_LOGIC;
    signal blFreq_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal blFreq_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal blFreq_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal blFreq_V_ce1 : STD_LOGIC;
    signal blFreq_V_we1 : STD_LOGIC;
    signal blFreq_V_d1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_start : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_done : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_idle : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_ready : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ldCodes1_read : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_blFreq_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_blFreq_V_ce0 : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_blFreq_V_we0 : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_blFreq_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_repPrevBlen_V_1_out : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_repPrevBlen_V_1_out_ap_vld : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_repZeroBlen_V_1_out : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_repZeroBlen_V_1_out_ap_vld : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_repZeroBlen7_V_1_out : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_repZeroBlen7_V_1_out_ap_vld : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_start : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_done : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_idle : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_ready : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ldCodes1_read : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_start : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_done : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_idle : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_ready : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ldFrequency_din : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ldFrequency_write : STD_LOGIC;
    signal grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_blFreq_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_blFreq_V_ce0 : STD_LOGIC;
    signal i_reg_176 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1669_fu_280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_read_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal itr_reg_187 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal repPrevBlen_V_reg_199 : STD_LOGIC_VECTOR (13 downto 0);
    signal repZeroBlen_V_reg_212 : STD_LOGIC_VECTOR (13 downto 0);
    signal repZeroBlen7_V_reg_225 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_start_reg : STD_LOGIC := '0';
    signal grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal zext_ln1669_fu_275_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1677_fu_343_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln1685_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component gzipcMulticoreStreaming_genBitLenFreq_14_Pipeline_parse_tdata IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ldCodes1_dout : IN STD_LOGIC_VECTOR (20 downto 0);
        ldCodes1_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        ldCodes1_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        ldCodes1_empty_n : IN STD_LOGIC;
        ldCodes1_read : OUT STD_LOGIC;
        nextlen : IN STD_LOGIC_VECTOR (4 downto 0);
        select_ln145_1 : IN STD_LOGIC_VECTOR (2 downto 0);
        select_ln145 : IN STD_LOGIC_VECTOR (7 downto 0);
        repPrevBlen_V : IN STD_LOGIC_VECTOR (13 downto 0);
        repZeroBlen_V : IN STD_LOGIC_VECTOR (13 downto 0);
        repZeroBlen7_V : IN STD_LOGIC_VECTOR (13 downto 0);
        add_ln1693 : IN STD_LOGIC_VECTOR (9 downto 0);
        maximumCodeLength_V : IN STD_LOGIC_VECTOR (9 downto 0);
        blFreq_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        blFreq_V_ce0 : OUT STD_LOGIC;
        blFreq_V_we0 : OUT STD_LOGIC;
        blFreq_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        blFreq_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        repPrevBlen_V_1_out : OUT STD_LOGIC_VECTOR (13 downto 0);
        repPrevBlen_V_1_out_ap_vld : OUT STD_LOGIC;
        repZeroBlen_V_1_out : OUT STD_LOGIC_VECTOR (13 downto 0);
        repZeroBlen_V_1_out_ap_vld : OUT STD_LOGIC;
        repZeroBlen7_V_1_out : OUT STD_LOGIC_VECTOR (13 downto 0);
        repZeroBlen7_V_1_out_ap_vld : OUT STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_genBitLenFreq_14_Pipeline_read_spare_codes IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ldCodes1_dout : IN STD_LOGIC_VECTOR (20 downto 0);
        ldCodes1_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        ldCodes1_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        ldCodes1_empty_n : IN STD_LOGIC;
        ldCodes1_read : OUT STD_LOGIC;
        zext_ln232 : IN STD_LOGIC_VECTOR (9 downto 0);
        conv_i : IN STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component gzipcMulticoreStreaming_genBitLenFreq_14_Pipeline_output_bitlen_frequencies IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ldFrequency_din : OUT STD_LOGIC_VECTOR (14 downto 0);
        ldFrequency_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        ldFrequency_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
        ldFrequency_full_n : IN STD_LOGIC;
        ldFrequency_write : OUT STD_LOGIC;
        blFreq_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        blFreq_V_ce0 : OUT STD_LOGIC;
        blFreq_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component gzipcMulticoreStreaming_filterRadixSortPart1_286_10_14_1_s_hctMeta_3_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component gzipcMulticoreStreaming_genBitLenFreq_14_s_blFreq_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (13 downto 0) );
    end component;



begin
    hctMeta_2_U : component gzipcMulticoreStreaming_filterRadixSortPart1_286_10_14_1_s_hctMeta_3_ROM_AUTO_1R
    generic map (
        DataWidth => 9,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hctMeta_2_address0,
        ce0 => hctMeta_2_ce0,
        q0 => hctMeta_2_q0);

    blFreq_V_U : component gzipcMulticoreStreaming_genBitLenFreq_14_s_blFreq_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 14,
        AddressRange => 19,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => blFreq_V_address0,
        ce0 => blFreq_V_ce0,
        we0 => blFreq_V_we0,
        d0 => blFreq_V_d0,
        q0 => blFreq_V_q0,
        address1 => blFreq_V_address1,
        ce1 => blFreq_V_ce1,
        we1 => blFreq_V_we1,
        d1 => blFreq_V_d1);

    grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238 : component gzipcMulticoreStreaming_genBitLenFreq_14_Pipeline_parse_tdata
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_start,
        ap_done => grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_done,
        ap_idle => grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_idle,
        ap_ready => grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_ready,
        ldCodes1_dout => ldCodes1_dout,
        ldCodes1_num_data_valid => ap_const_lv10_0,
        ldCodes1_fifo_cap => ap_const_lv10_0,
        ldCodes1_empty_n => ldCodes1_empty_n,
        ldCodes1_read => grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ldCodes1_read,
        nextlen => nextlen_reg_409,
        select_ln145_1 => select_ln145_1_reg_427,
        select_ln145 => select_ln145_reg_422,
        repPrevBlen_V => repPrevBlen_V_reg_199,
        repZeroBlen_V => repZeroBlen_V_reg_212,
        repZeroBlen7_V => repZeroBlen7_V_reg_225,
        add_ln1693 => add_ln1693_reg_432,
        maximumCodeLength_V => maximumCodeLength_V_reg_415,
        blFreq_V_address0 => grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_blFreq_V_address0,
        blFreq_V_ce0 => grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_blFreq_V_ce0,
        blFreq_V_we0 => grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_blFreq_V_we0,
        blFreq_V_d0 => grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_blFreq_V_d0,
        blFreq_V_q0 => blFreq_V_q0,
        repPrevBlen_V_1_out => grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_repPrevBlen_V_1_out,
        repPrevBlen_V_1_out_ap_vld => grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_repPrevBlen_V_1_out_ap_vld,
        repZeroBlen_V_1_out => grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_repZeroBlen_V_1_out,
        repZeroBlen_V_1_out_ap_vld => grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_repZeroBlen_V_1_out_ap_vld,
        repZeroBlen7_V_1_out => grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_repZeroBlen7_V_1_out,
        repZeroBlen7_V_1_out_ap_vld => grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_repZeroBlen7_V_1_out_ap_vld);

    grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259 : component gzipcMulticoreStreaming_genBitLenFreq_14_Pipeline_read_spare_codes
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_start,
        ap_done => grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_done,
        ap_idle => grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_idle,
        ap_ready => grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_ready,
        ldCodes1_dout => ldCodes1_dout,
        ldCodes1_num_data_valid => ap_const_lv10_0,
        ldCodes1_fifo_cap => ap_const_lv10_0,
        ldCodes1_empty_n => ldCodes1_empty_n,
        ldCodes1_read => grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ldCodes1_read,
        zext_ln232 => maximumCodeLength_V_reg_415,
        conv_i => hctMeta_2_load_reg_442);

    grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268 : component gzipcMulticoreStreaming_genBitLenFreq_14_Pipeline_output_bitlen_frequencies
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_start,
        ap_done => grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_done,
        ap_idle => grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_idle,
        ap_ready => grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_ready,
        ldFrequency_din => grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ldFrequency_din,
        ldFrequency_num_data_valid => ap_const_lv6_0,
        ldFrequency_fifo_cap => ap_const_lv6_0,
        ldFrequency_full_n => ldFrequency_full_n,
        ldFrequency_write => grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ldFrequency_write,
        blFreq_V_address0 => grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_blFreq_V_address0,
        blFreq_V_ce0 => grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_blFreq_V_ce0,
        blFreq_V_q0 => blFreq_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((eoBlocks_1_empty_n = ap_const_logic_1) and (tmp_read_fu_104_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_ready = ap_const_logic_1)) then 
                    grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_ready = ap_const_logic_1)) then 
                    grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_ready = ap_const_logic_1)) then 
                    grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((eoBlocks_1_empty_n = ap_const_logic_1) and (tmp_read_fu_104_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_reg_176 <= ap_const_lv5_0;
            elsif (((icmp_ln1669_fu_280_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_reg_176 <= add_ln1669_fu_286_p2;
            end if; 
        end if;
    end process;

    itr_reg_187_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1669_fu_280_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                itr_reg_187 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_done = ap_const_logic_1))) then 
                itr_reg_187 <= add_ln1677_reg_404;
            end if; 
        end if;
    end process;

    repPrevBlen_V_reg_199_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1669_fu_280_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                repPrevBlen_V_reg_199 <= ap_const_lv14_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_done = ap_const_logic_1))) then 
                repPrevBlen_V_reg_199 <= grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_repPrevBlen_V_1_out;
            end if; 
        end if;
    end process;

    repZeroBlen7_V_reg_225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1669_fu_280_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                repZeroBlen7_V_reg_225 <= ap_const_lv14_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_done = ap_const_logic_1))) then 
                repZeroBlen7_V_reg_225 <= grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_repZeroBlen7_V_1_out;
            end if; 
        end if;
    end process;

    repZeroBlen_V_reg_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1669_fu_280_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                repZeroBlen_V_reg_212 <= ap_const_lv14_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_done = ap_const_logic_1))) then 
                repZeroBlen_V_reg_212 <= grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_repZeroBlen_V_1_out;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldMaxCodes122_empty_n = ap_const_logic_0)) or ((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldCodes1_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                add_ln1677_reg_404 <= add_ln1677_fu_298_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln1693_reg_432 <= add_ln1693_fu_337_p2;
                select_ln145_1_reg_427 <= select_ln145_1_fu_328_p3;
                    select_ln145_reg_422(0) <= select_ln145_fu_319_p3(0);    select_ln145_reg_422(3 downto 2) <= select_ln145_fu_319_p3(3 downto 2);    select_ln145_reg_422(7) <= select_ln145_fu_319_p3(7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                hctMeta_2_load_reg_442 <= hctMeta_2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                maximumCodeLength_V_reg_415 <= ldMaxCodes122_dout;
                nextlen_reg_409 <= ldCodes1_dout(19 downto 15);
            end if;
        end if;
    end process;
    select_ln145_reg_422(1) <= '1';
    select_ln145_reg_422(6 downto 4) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ldCodes1_empty_n, eoBlocks_1_empty_n, ldMaxCodes122_empty_n, ap_CS_fsm_state4, icmp_ln1677_fu_292_p2, ap_CS_fsm_state2, ap_CS_fsm_state3, grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_done, grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_done, grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_done, icmp_ln1669_fu_280_p2, tmp_read_fu_104_p2, ap_CS_fsm_state9, ap_CS_fsm_state6, ap_CS_fsm_state12)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((eoBlocks_1_empty_n = ap_const_logic_1) and (tmp_read_fu_104_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((eoBlocks_1_empty_n = ap_const_logic_1) and (tmp_read_fu_104_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln1669_fu_280_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not((((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldMaxCodes122_empty_n = ap_const_logic_0)) or ((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldCodes1_empty_n = ap_const_logic_0)))) and (icmp_ln1677_fu_292_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif ((not((((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldMaxCodes122_empty_n = ap_const_logic_0)) or ((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldCodes1_empty_n = ap_const_logic_0)))) and (icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln1669_fu_286_p2 <= std_logic_vector(unsigned(i_reg_176) + unsigned(ap_const_lv5_1));
    add_ln1677_fu_298_p2 <= std_logic_vector(unsigned(itr_reg_187) + unsigned(ap_const_lv2_1));
    add_ln1693_fu_337_p2 <= std_logic_vector(unsigned(maximumCodeLength_V_reg_415) + unsigned(ap_const_lv10_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_done)
    begin
        if ((grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(eoBlocks_1_empty_n)
    begin
        if ((eoBlocks_1_empty_n = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(ldCodes1_empty_n, ldMaxCodes122_empty_n, icmp_ln1677_fu_292_p2)
    begin
        if ((((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldMaxCodes122_empty_n = ap_const_logic_0)) or ((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldCodes1_empty_n = ap_const_logic_0)))) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_done)
    begin
        if ((grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_done)
    begin
        if ((grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(ldCodes1_empty_n, ldMaxCodes122_empty_n, icmp_ln1677_fu_292_p2)
    begin
                ap_block_state4 <= (((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldMaxCodes122_empty_n = ap_const_logic_0)) or ((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldCodes1_empty_n = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, eoBlocks_1_empty_n, ap_CS_fsm_state2, tmp_read_fu_104_p2)
    begin
        if (((eoBlocks_1_empty_n = ap_const_logic_1) and (tmp_read_fu_104_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(eoBlocks_1_empty_n, ap_CS_fsm_state2, tmp_read_fu_104_p2)
    begin
        if (((eoBlocks_1_empty_n = ap_const_logic_1) and (tmp_read_fu_104_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    blFreq_V_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state3, grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_blFreq_V_address0, grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_blFreq_V_address0, ap_CS_fsm_state6, ap_CS_fsm_state12, zext_ln1669_fu_275_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            blFreq_V_address0 <= ap_const_lv64_11(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            blFreq_V_address0 <= zext_ln1669_fu_275_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            blFreq_V_address0 <= grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_blFreq_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            blFreq_V_address0 <= grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_blFreq_V_address0;
        else 
            blFreq_V_address0 <= "XXXXX";
        end if; 
    end process;


    blFreq_V_address1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            blFreq_V_address1 <= ap_const_lv64_12(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            blFreq_V_address1 <= ap_const_lv64_10(5 - 1 downto 0);
        else 
            blFreq_V_address1 <= "XXXXX";
        end if; 
    end process;


    blFreq_V_ce0_assign_proc : process(ldCodes1_empty_n, ldMaxCodes122_empty_n, ap_CS_fsm_state4, icmp_ln1677_fu_292_p2, ap_CS_fsm_state3, grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_blFreq_V_ce0, grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_blFreq_V_ce0, ap_CS_fsm_state6, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (not((((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldMaxCodes122_empty_n = ap_const_logic_0)) or ((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldCodes1_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            blFreq_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            blFreq_V_ce0 <= grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_blFreq_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            blFreq_V_ce0 <= grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_blFreq_V_ce0;
        else 
            blFreq_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    blFreq_V_ce1_assign_proc : process(ldCodes1_empty_n, ldMaxCodes122_empty_n, ap_CS_fsm_state4, icmp_ln1677_fu_292_p2, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (not((((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldMaxCodes122_empty_n = ap_const_logic_0)) or ((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldCodes1_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            blFreq_V_ce1 <= ap_const_logic_1;
        else 
            blFreq_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    blFreq_V_d0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state3, grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_blFreq_V_d0, repZeroBlen_V_reg_212, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            blFreq_V_d0 <= repZeroBlen_V_reg_212;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            blFreq_V_d0 <= ap_const_lv14_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            blFreq_V_d0 <= grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_blFreq_V_d0;
        else 
            blFreq_V_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    blFreq_V_d1_assign_proc : process(ap_CS_fsm_state4, repPrevBlen_V_reg_199, repZeroBlen7_V_reg_225, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            blFreq_V_d1 <= repZeroBlen7_V_reg_225;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            blFreq_V_d1 <= repPrevBlen_V_reg_199;
        else 
            blFreq_V_d1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    blFreq_V_we0_assign_proc : process(ldCodes1_empty_n, ldMaxCodes122_empty_n, ap_CS_fsm_state4, icmp_ln1677_fu_292_p2, ap_CS_fsm_state3, grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_blFreq_V_we0, icmp_ln1669_fu_280_p2, ap_CS_fsm_state6)
    begin
        if ((((icmp_ln1669_fu_280_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not((((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldMaxCodes122_empty_n = ap_const_logic_0)) or ((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldCodes1_empty_n = ap_const_logic_0)))) and (icmp_ln1677_fu_292_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            blFreq_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            blFreq_V_we0 <= grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_blFreq_V_we0;
        else 
            blFreq_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    blFreq_V_we1_assign_proc : process(ldCodes1_empty_n, ldMaxCodes122_empty_n, ap_CS_fsm_state4, icmp_ln1677_fu_292_p2, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (not((((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldMaxCodes122_empty_n = ap_const_logic_0)) or ((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldCodes1_empty_n = ap_const_logic_0)))) and (icmp_ln1677_fu_292_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            blFreq_V_we1 <= ap_const_logic_1;
        else 
            blFreq_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    eoBlocks_1_blk_n_assign_proc : process(eoBlocks_1_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            eoBlocks_1_blk_n <= eoBlocks_1_empty_n;
        else 
            eoBlocks_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    eoBlocks_1_read_assign_proc : process(eoBlocks_1_empty_n, ap_CS_fsm_state2)
    begin
        if (((eoBlocks_1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            eoBlocks_1_read <= ap_const_logic_1;
        else 
            eoBlocks_1_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_start <= grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ap_start_reg;
    grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_start <= grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ap_start_reg;
    grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_start <= grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ap_start_reg;
    hctMeta_2_address0 <= zext_ln1677_fu_343_p1(1 - 1 downto 0);

    hctMeta_2_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            hctMeta_2_ce0 <= ap_const_logic_1;
        else 
            hctMeta_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1669_fu_280_p2 <= "1" when (i_reg_176 = ap_const_lv5_13) else "0";
    icmp_ln1677_fu_292_p2 <= "1" when (itr_reg_187 = ap_const_lv2_2) else "0";
    icmp_ln1685_fu_314_p2 <= "1" when (nextlen_reg_409 = ap_const_lv5_0) else "0";

    ldCodes1_blk_n_assign_proc : process(ldCodes1_empty_n, ap_CS_fsm_state4, icmp_ln1677_fu_292_p2)
    begin
        if (((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ldCodes1_blk_n <= ldCodes1_empty_n;
        else 
            ldCodes1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ldCodes1_read_assign_proc : process(ldCodes1_empty_n, ldMaxCodes122_empty_n, ap_CS_fsm_state4, icmp_ln1677_fu_292_p2, grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ldCodes1_read, grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ldCodes1_read, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((not((((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldMaxCodes122_empty_n = ap_const_logic_0)) or ((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldCodes1_empty_n = ap_const_logic_0)))) and (icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ldCodes1_read <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ldCodes1_read <= grp_genBitLenFreq_14_Pipeline_read_spare_codes_fu_259_ldCodes1_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ldCodes1_read <= grp_genBitLenFreq_14_Pipeline_parse_tdata_fu_238_ldCodes1_read;
        else 
            ldCodes1_read <= ap_const_logic_0;
        end if; 
    end process;

    ldFrequency_din <= grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ldFrequency_din;

    ldFrequency_write_assign_proc : process(grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ldFrequency_write, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ldFrequency_write <= grp_genBitLenFreq_14_Pipeline_output_bitlen_frequencies_fu_268_ldFrequency_write;
        else 
            ldFrequency_write <= ap_const_logic_0;
        end if; 
    end process;


    ldMaxCodes122_blk_n_assign_proc : process(ldMaxCodes122_empty_n, ap_CS_fsm_state4, icmp_ln1677_fu_292_p2)
    begin
        if (((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ldMaxCodes122_blk_n <= ldMaxCodes122_empty_n;
        else 
            ldMaxCodes122_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ldMaxCodes122_read_assign_proc : process(ldCodes1_empty_n, ldMaxCodes122_empty_n, ap_CS_fsm_state4, icmp_ln1677_fu_292_p2)
    begin
        if ((not((((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldMaxCodes122_empty_n = ap_const_logic_0)) or ((icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ldCodes1_empty_n = ap_const_logic_0)))) and (icmp_ln1677_fu_292_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ldMaxCodes122_read <= ap_const_logic_1;
        else 
            ldMaxCodes122_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln145_1_fu_328_p3 <= 
        ap_const_lv3_3 when (icmp_ln1685_fu_314_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln145_fu_319_p3 <= 
        ap_const_lv8_8A when (icmp_ln1685_fu_314_p2(0) = '1') else 
        ap_const_lv8_7;
    tmp_read_fu_104_p2 <= eoBlocks_1_dout;
    zext_ln1669_fu_275_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_176),64));
    zext_ln1677_fu_343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(itr_reg_187),64));
end behav;
