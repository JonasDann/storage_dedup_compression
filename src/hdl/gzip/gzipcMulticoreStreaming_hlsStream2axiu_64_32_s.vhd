-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_hlsStream2axiu_64_32_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    outStream_dout : IN STD_LOGIC_VECTOR (67 downto 0);
    outStream_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    outStream_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    outStream_empty_n : IN STD_LOGIC;
    outStream_read : OUT STD_LOGIC;
    outStream_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    outStream_TVALID : OUT STD_LOGIC;
    outStream_TREADY : IN STD_LOGIC;
    outStream_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    outStream_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    outStream_TUSER : OUT STD_LOGIC_VECTOR (31 downto 0);
    outStream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of gzipcMulticoreStreaming_hlsStream2axiu_64_32_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal outStream_blk_n : STD_LOGIC;
    signal outStream_TDATA_blk_n : STD_LOGIC;
    signal icmp_ln1065_fu_262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_strobe_V_fu_155_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_s_fu_165_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_reg_273 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_77_fu_240_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_77_reg_279 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_start : STD_LOGIC;
    signal grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_done : STD_LOGIC;
    signal grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_idle : STD_LOGIC;
    signal grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_ready : STD_LOGIC;
    signal grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_read : STD_LOGIC;
    signal grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TREADY : STD_LOGIC;
    signal grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TVALID : STD_LOGIC;
    signal grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TKEEP : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TUSER : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal strb_V_1_ph_reg_107 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state1_io : BOOLEAN;
    signal t1_last_V_ph_reg_119 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_fu_176_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_307_fu_198_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_308_fu_232_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_13_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_12_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_11_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_10_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_9_fu_192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_8_fu_186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_fu_170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal regslice_both_outStream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal outStream_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal outStream_TVALID_int_regslice : STD_LOGIC;
    signal outStream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_outStream_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_outStream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal outStream_TKEEP_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_outStream_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_outStream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_outStream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal outStream_TSTRB_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_outStream_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_outStream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_outStream_V_user_V_U_apdone_blk : STD_LOGIC;
    signal outStream_TUSER_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal regslice_both_outStream_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_outStream_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_outStream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal outStream_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_outStream_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_outStream_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component gzipcMulticoreStreaming_hlsStream2axiu_64_32_Pipeline_HLS2AXIS IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        outStream_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        outStream_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        outStream_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        outStream_empty_n : IN STD_LOGIC;
        outStream_read : OUT STD_LOGIC;
        outStream_TREADY : IN STD_LOGIC;
        p_Result_86 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_Result_s : IN STD_LOGIC_VECTOR (63 downto 0);
        strb_V_1_ph : IN STD_LOGIC_VECTOR (3 downto 0);
        t1_last_V_ph : IN STD_LOGIC_VECTOR (0 downto 0);
        outStream_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        outStream_TVALID : OUT STD_LOGIC;
        outStream_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
        outStream_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        outStream_TUSER : OUT STD_LOGIC_VECTOR (31 downto 0);
        outStream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component gzipcMulticoreStreaming_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133 : component gzipcMulticoreStreaming_hlsStream2axiu_64_32_Pipeline_HLS2AXIS
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_start,
        ap_done => grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_done,
        ap_idle => grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_idle,
        ap_ready => grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_ready,
        outStream_dout => outStream_dout,
        outStream_num_data_valid => ap_const_lv3_0,
        outStream_fifo_cap => ap_const_lv3_0,
        outStream_empty_n => outStream_empty_n,
        outStream_read => grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_read,
        outStream_TREADY => grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TREADY,
        p_Result_86 => p_Result_77_reg_279,
        p_Result_s => p_Result_s_reg_273,
        strb_V_1_ph => strb_V_1_ph_reg_107,
        t1_last_V_ph => t1_last_V_ph_reg_119,
        outStream_TDATA => grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TDATA,
        outStream_TVALID => grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TVALID,
        outStream_TKEEP => grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TKEEP,
        outStream_TSTRB => grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TSTRB,
        outStream_TUSER => grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TUSER,
        outStream_TLAST => grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TLAST);

    regslice_both_outStream_V_data_V_U : component gzipcMulticoreStreaming_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => outStream_TDATA_int_regslice,
        vld_in => outStream_TVALID_int_regslice,
        ack_in => outStream_TREADY_int_regslice,
        data_out => outStream_TDATA,
        vld_out => regslice_both_outStream_V_data_V_U_vld_out,
        ack_out => outStream_TREADY,
        apdone_blk => regslice_both_outStream_V_data_V_U_apdone_blk);

    regslice_both_outStream_V_keep_V_U : component gzipcMulticoreStreaming_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => outStream_TKEEP_int_regslice,
        vld_in => outStream_TVALID_int_regslice,
        ack_in => regslice_both_outStream_V_keep_V_U_ack_in_dummy,
        data_out => outStream_TKEEP,
        vld_out => regslice_both_outStream_V_keep_V_U_vld_out,
        ack_out => outStream_TREADY,
        apdone_blk => regslice_both_outStream_V_keep_V_U_apdone_blk);

    regslice_both_outStream_V_strb_V_U : component gzipcMulticoreStreaming_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => outStream_TSTRB_int_regslice,
        vld_in => outStream_TVALID_int_regslice,
        ack_in => regslice_both_outStream_V_strb_V_U_ack_in_dummy,
        data_out => outStream_TSTRB,
        vld_out => regslice_both_outStream_V_strb_V_U_vld_out,
        ack_out => outStream_TREADY,
        apdone_blk => regslice_both_outStream_V_strb_V_U_apdone_blk);

    regslice_both_outStream_V_user_V_U : component gzipcMulticoreStreaming_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => outStream_TUSER_int_regslice,
        vld_in => outStream_TVALID_int_regslice,
        ack_in => regslice_both_outStream_V_user_V_U_ack_in_dummy,
        data_out => outStream_TUSER,
        vld_out => regslice_both_outStream_V_user_V_U_vld_out,
        ack_out => outStream_TREADY,
        apdone_blk => regslice_both_outStream_V_user_V_U_apdone_blk);

    regslice_both_outStream_V_last_V_U : component gzipcMulticoreStreaming_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => outStream_TLAST_int_regslice,
        vld_in => outStream_TVALID_int_regslice,
        ack_in => regslice_both_outStream_V_last_V_U_ack_in_dummy,
        data_out => outStream_TLAST,
        vld_out => regslice_both_outStream_V_last_V_U_vld_out,
        ack_out => outStream_TREADY,
        apdone_blk => regslice_both_outStream_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((regslice_both_outStream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_ready = ap_const_logic_1)) then 
                    grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    strb_V_1_ph_reg_107_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((outStream_empty_n = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1_io) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or ((icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (outStream_TREADY_int_regslice = ap_const_logic_0)))) and (icmp_ln1065_fu_262_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                strb_V_1_ph_reg_107 <= outStream_dout(67 downto 64);
            elsif (((outStream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                strb_V_1_ph_reg_107 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    t1_last_V_ph_reg_119_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((outStream_empty_n = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1_io) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or ((icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (outStream_TREADY_int_regslice = ap_const_logic_0)))) and (icmp_ln1065_fu_262_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t1_last_V_ph_reg_119 <= ap_const_lv1_0;
            elsif (((outStream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t1_last_V_ph_reg_119 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                p_Result_77_reg_279 <= p_Result_77_fu_240_p9;
                p_Result_s_reg_273 <= p_Result_s_fu_165_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, outStream_empty_n, icmp_ln1065_fu_262_p2, ap_CS_fsm_state2, grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_done, ap_block_state1_io, ap_CS_fsm_state4, ap_CS_fsm_state5, regslice_both_outStream_V_data_V_U_apdone_blk, outStream_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((outStream_empty_n = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1_io) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or ((icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (outStream_TREADY_int_regslice = ap_const_logic_0)))) and (icmp_ln1065_fu_262_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not(((outStream_empty_n = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1_io) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or ((icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (outStream_TREADY_int_regslice = ap_const_logic_0)))) and (icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((outStream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((regslice_both_outStream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, outStream_empty_n, icmp_ln1065_fu_262_p2, ap_block_state1_io, outStream_TREADY_int_regslice)
    begin
        if (((outStream_empty_n = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1_io) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or ((icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (outStream_TREADY_int_regslice = ap_const_logic_0)))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(outStream_TREADY_int_regslice)
    begin
        if ((outStream_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_done)
    begin
        if ((grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(regslice_both_outStream_V_data_V_U_apdone_blk)
    begin
        if ((regslice_both_outStream_V_data_V_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, outStream_empty_n, icmp_ln1065_fu_262_p2, outStream_TREADY_int_regslice)
    begin
                ap_block_state1 <= ((outStream_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or ((icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (outStream_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state1_io_assign_proc : process(icmp_ln1065_fu_262_p2, outStream_TREADY_int_regslice)
    begin
                ap_block_state1_io <= ((icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (outStream_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state5, regslice_both_outStream_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_outStream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5, regslice_both_outStream_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_outStream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_start <= grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_ap_start_reg;
    grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TREADY <= (outStream_TREADY_int_regslice and ap_CS_fsm_state4);
    icmp_ln1065_fu_262_p2 <= "1" when (tmp_strobe_V_fu_155_p4 = ap_const_lv4_0) else "0";
    icmp_ln1073_10_fu_208_p2 <= "0" when (tmp_307_fu_198_p4 = ap_const_lv2_0) else "1";
    icmp_ln1073_11_fu_214_p2 <= "1" when (unsigned(tmp_strobe_V_fu_155_p4) > unsigned(ap_const_lv4_4)) else "0";
    icmp_ln1073_12_fu_220_p2 <= "1" when (unsigned(tmp_strobe_V_fu_155_p4) > unsigned(ap_const_lv4_5)) else "0";
    icmp_ln1073_13_fu_226_p2 <= "1" when (unsigned(tmp_strobe_V_fu_155_p4) > unsigned(ap_const_lv4_6)) else "0";
    icmp_ln1073_8_fu_186_p2 <= "0" when (tmp_fu_176_p4 = ap_const_lv3_0) else "1";
    icmp_ln1073_9_fu_192_p2 <= "1" when (unsigned(tmp_strobe_V_fu_155_p4) > unsigned(ap_const_lv4_2)) else "0";
    icmp_ln1073_fu_170_p2 <= "0" when (tmp_strobe_V_fu_155_p4 = ap_const_lv4_0) else "1";

    outStream_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, icmp_ln1065_fu_262_p2, ap_CS_fsm_state2, outStream_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            outStream_TDATA_blk_n <= outStream_TREADY_int_regslice;
        else 
            outStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_TDATA_int_regslice_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, outStream_empty_n, icmp_ln1065_fu_262_p2, p_Result_s_fu_165_p1, grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TDATA, grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TVALID, ap_CS_fsm_state4, outStream_TREADY_int_regslice)
    begin
        if ((not(((outStream_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or ((icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (outStream_TREADY_int_regslice = ap_const_logic_0)))) and (icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            outStream_TDATA_int_regslice <= p_Result_s_fu_165_p1;
        elsif (((grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            outStream_TDATA_int_regslice <= grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TDATA;
        else 
            outStream_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    outStream_TKEEP_int_regslice_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, outStream_empty_n, icmp_ln1065_fu_262_p2, p_Result_77_fu_240_p9, grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TVALID, grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TKEEP, ap_CS_fsm_state4, outStream_TREADY_int_regslice)
    begin
        if ((not(((outStream_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or ((icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (outStream_TREADY_int_regslice = ap_const_logic_0)))) and (icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            outStream_TKEEP_int_regslice <= p_Result_77_fu_240_p9;
        elsif (((grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            outStream_TKEEP_int_regslice <= grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TKEEP;
        else 
            outStream_TKEEP_int_regslice <= "XXXXXXXX";
        end if; 
    end process;


    outStream_TLAST_int_regslice_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, outStream_empty_n, icmp_ln1065_fu_262_p2, grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TVALID, grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TLAST, ap_CS_fsm_state4, outStream_TREADY_int_regslice)
    begin
        if ((not(((outStream_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or ((icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (outStream_TREADY_int_regslice = ap_const_logic_0)))) and (icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            outStream_TLAST_int_regslice <= ap_const_lv1_1;
        elsif (((grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            outStream_TLAST_int_regslice <= grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TLAST;
        else 
            outStream_TLAST_int_regslice <= "X";
        end if; 
    end process;


    outStream_TSTRB_int_regslice_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, outStream_empty_n, icmp_ln1065_fu_262_p2, p_Result_77_fu_240_p9, grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TVALID, grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TSTRB, ap_CS_fsm_state4, outStream_TREADY_int_regslice)
    begin
        if ((not(((outStream_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or ((icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (outStream_TREADY_int_regslice = ap_const_logic_0)))) and (icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            outStream_TSTRB_int_regslice <= p_Result_77_fu_240_p9;
        elsif (((grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            outStream_TSTRB_int_regslice <= grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TSTRB;
        else 
            outStream_TSTRB_int_regslice <= "XXXXXXXX";
        end if; 
    end process;


    outStream_TUSER_int_regslice_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, outStream_empty_n, icmp_ln1065_fu_262_p2, grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TVALID, grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TUSER, ap_CS_fsm_state4, outStream_TREADY_int_regslice)
    begin
        if ((not(((outStream_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or ((icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (outStream_TREADY_int_regslice = ap_const_logic_0)))) and (icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            outStream_TUSER_int_regslice <= ap_const_lv32_0;
        elsif (((grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            outStream_TUSER_int_regslice <= grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TUSER;
        else 
            outStream_TUSER_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    outStream_TVALID <= regslice_both_outStream_V_data_V_U_vld_out;

    outStream_TVALID_int_regslice_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, outStream_empty_n, icmp_ln1065_fu_262_p2, grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TVALID, ap_block_state1_io, ap_CS_fsm_state4, outStream_TREADY_int_regslice)
    begin
        if ((not(((outStream_empty_n = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1_io) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or ((icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (outStream_TREADY_int_regslice = ap_const_logic_0)))) and (icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            outStream_TVALID_int_regslice <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            outStream_TVALID_int_regslice <= grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_TVALID;
        else 
            outStream_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    outStream_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, outStream_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            outStream_blk_n <= outStream_empty_n;
        else 
            outStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, outStream_empty_n, icmp_ln1065_fu_262_p2, grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_read, ap_block_state1_io, ap_CS_fsm_state4, outStream_TREADY_int_regslice)
    begin
        if ((not(((outStream_empty_n = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1_io) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or ((icmp_ln1065_fu_262_p2 = ap_const_lv1_1) and (outStream_TREADY_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            outStream_read <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            outStream_read <= grp_hlsStream2axiu_64_32_Pipeline_HLS2AXIS_fu_133_outStream_read;
        else 
            outStream_read <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_77_fu_240_p9 <= (((((((tmp_308_fu_232_p3 & icmp_ln1073_13_fu_226_p2) & icmp_ln1073_12_fu_220_p2) & icmp_ln1073_11_fu_214_p2) & icmp_ln1073_10_fu_208_p2) & icmp_ln1073_9_fu_192_p2) & icmp_ln1073_8_fu_186_p2) & icmp_ln1073_fu_170_p2);
    p_Result_s_fu_165_p1 <= outStream_dout(64 - 1 downto 0);
    tmp_307_fu_198_p4 <= outStream_dout(67 downto 66);
    tmp_308_fu_232_p3 <= outStream_dout(67 downto 67);
    tmp_fu_176_p4 <= outStream_dout(67 downto 65);
    tmp_strobe_V_fu_155_p4 <= outStream_dout(67 downto 64);
end behav;
