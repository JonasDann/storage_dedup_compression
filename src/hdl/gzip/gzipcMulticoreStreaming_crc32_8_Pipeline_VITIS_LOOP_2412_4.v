// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gzipcMulticoreStreaming_crc32_8_Pipeline_VITIS_LOOP_2412_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        checksumSizeStream96_dout,
        checksumSizeStream96_num_data_valid,
        checksumSizeStream96_fifo_cap,
        checksumSizeStream96_empty_n,
        checksumSizeStream96_read,
        checksumStream94_dout,
        checksumStream94_num_data_valid,
        checksumStream94_fifo_cap,
        checksumStream94_empty_n,
        checksumStream94_read,
        crc_V_3,
        inPackLen_V_2,
        in_data_V_out,
        in_data_V_out_ap_vld,
        crc_V_4_out,
        crc_V_4_out_ap_vld,
        tmp_V_19_out,
        tmp_V_19_out_ap_vld,
        p_ZN2xf8security8internalL7table16E_0_address0,
        p_ZN2xf8security8internalL7table16E_0_ce0,
        p_ZN2xf8security8internalL7table16E_0_q0,
        p_ZN2xf8security8internalL7table16E_0_address1,
        p_ZN2xf8security8internalL7table16E_0_ce1,
        p_ZN2xf8security8internalL7table16E_0_q1,
        p_ZN2xf8security8internalL7table16E_0_address2,
        p_ZN2xf8security8internalL7table16E_0_ce2,
        p_ZN2xf8security8internalL7table16E_0_q2,
        p_ZN2xf8security8internalL7table16E_0_address3,
        p_ZN2xf8security8internalL7table16E_0_ce3,
        p_ZN2xf8security8internalL7table16E_0_q3,
        p_ZN2xf8security8internalL7table16E_0_address4,
        p_ZN2xf8security8internalL7table16E_0_ce4,
        p_ZN2xf8security8internalL7table16E_0_q4,
        p_ZN2xf8security8internalL7table16E_0_address5,
        p_ZN2xf8security8internalL7table16E_0_ce5,
        p_ZN2xf8security8internalL7table16E_0_q5,
        p_ZN2xf8security8internalL7table16E_0_address6,
        p_ZN2xf8security8internalL7table16E_0_ce6,
        p_ZN2xf8security8internalL7table16E_0_q6,
        p_ZN2xf8security8internalL7table16E_0_address7,
        p_ZN2xf8security8internalL7table16E_0_ce7,
        p_ZN2xf8security8internalL7table16E_0_q7
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [4:0] checksumSizeStream96_dout;
input  [2:0] checksumSizeStream96_num_data_valid;
input  [2:0] checksumSizeStream96_fifo_cap;
input   checksumSizeStream96_empty_n;
output   checksumSizeStream96_read;
input  [63:0] checksumStream94_dout;
input  [2:0] checksumStream94_num_data_valid;
input  [2:0] checksumStream94_fifo_cap;
input   checksumStream94_empty_n;
output   checksumStream94_read;
input  [31:0] crc_V_3;
input  [4:0] inPackLen_V_2;
output  [63:0] in_data_V_out;
output   in_data_V_out_ap_vld;
output  [31:0] crc_V_4_out;
output   crc_V_4_out_ap_vld;
output  [4:0] tmp_V_19_out;
output   tmp_V_19_out_ap_vld;
output  [10:0] p_ZN2xf8security8internalL7table16E_0_address0;
output   p_ZN2xf8security8internalL7table16E_0_ce0;
input  [31:0] p_ZN2xf8security8internalL7table16E_0_q0;
output  [10:0] p_ZN2xf8security8internalL7table16E_0_address1;
output   p_ZN2xf8security8internalL7table16E_0_ce1;
input  [31:0] p_ZN2xf8security8internalL7table16E_0_q1;
output  [10:0] p_ZN2xf8security8internalL7table16E_0_address2;
output   p_ZN2xf8security8internalL7table16E_0_ce2;
input  [31:0] p_ZN2xf8security8internalL7table16E_0_q2;
output  [10:0] p_ZN2xf8security8internalL7table16E_0_address3;
output   p_ZN2xf8security8internalL7table16E_0_ce3;
input  [31:0] p_ZN2xf8security8internalL7table16E_0_q3;
output  [10:0] p_ZN2xf8security8internalL7table16E_0_address4;
output   p_ZN2xf8security8internalL7table16E_0_ce4;
input  [31:0] p_ZN2xf8security8internalL7table16E_0_q4;
output  [10:0] p_ZN2xf8security8internalL7table16E_0_address5;
output   p_ZN2xf8security8internalL7table16E_0_ce5;
input  [31:0] p_ZN2xf8security8internalL7table16E_0_q5;
output  [10:0] p_ZN2xf8security8internalL7table16E_0_address6;
output   p_ZN2xf8security8internalL7table16E_0_ce6;
input  [31:0] p_ZN2xf8security8internalL7table16E_0_q6;
output  [10:0] p_ZN2xf8security8internalL7table16E_0_address7;
output   p_ZN2xf8security8internalL7table16E_0_ce7;
input  [31:0] p_ZN2xf8security8internalL7table16E_0_q7;

reg ap_idle;
reg checksumSizeStream96_read;
reg checksumStream94_read;
reg in_data_V_out_ap_vld;
reg crc_V_4_out_ap_vld;
reg tmp_V_19_out_ap_vld;
reg p_ZN2xf8security8internalL7table16E_0_ce0;
reg p_ZN2xf8security8internalL7table16E_0_ce1;
reg p_ZN2xf8security8internalL7table16E_0_ce2;
reg p_ZN2xf8security8internalL7table16E_0_ce3;
reg p_ZN2xf8security8internalL7table16E_0_ce4;
reg p_ZN2xf8security8internalL7table16E_0_ce5;
reg p_ZN2xf8security8internalL7table16E_0_ce6;
reg p_ZN2xf8security8internalL7table16E_0_ce7;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire   [0:0] icmp_ln1065_fu_269_p2;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    checksumStream94_blk_n;
wire    ap_block_pp0_stage0;
reg    checksumSizeStream96_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [4:0] tmp_V_reg_551;
reg   [4:0] tmp_V_reg_551_pp0_iter1_reg;
reg   [0:0] icmp_ln1065_reg_556;
reg   [0:0] icmp_ln1065_reg_556_pp0_iter1_reg;
wire   [31:0] trunc_ln674_fu_280_p1;
reg   [31:0] trunc_ln674_reg_560;
reg   [7:0] tmp_2_reg_565;
reg   [7:0] tmp_3_reg_570;
reg   [7:0] tmp_4_reg_575;
reg   [7:0] tmp_5_reg_580;
wire   [63:0] zext_ln714_fu_337_p1;
wire   [63:0] zext_ln905_fu_348_p1;
wire   [63:0] zext_ln905_1_fu_360_p1;
wire   [63:0] zext_ln905_2_fu_376_p1;
wire   [63:0] zext_ln905_3_fu_399_p1;
wire   [63:0] zext_ln905_4_fu_422_p1;
wire   [63:0] zext_ln905_5_fu_449_p1;
wire   [63:0] zext_ln905_6_fu_470_p1;
reg   [4:0] inPackLen_V_fu_102;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_tmp_V;
reg   [31:0] tmp_V_5_fu_106;
wire   [31:0] tmp_V_9_fu_511_p2;
reg   [31:0] ap_sig_allocacmp_tmp_V_5_load;
reg   [63:0] in_data_V_fu_110;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] tmp_355_cast_fu_341_p3;
wire   [9:0] tmp_356_cast_fu_353_p3;
wire   [8:0] tmp_s_fu_365_p3;
wire  signed [9:0] sext_ln905_fu_372_p1;
wire   [31:0] inTmp_V_fu_332_p2;
wire   [7:0] tmp_67_fu_381_p4;
wire   [10:0] tmp_358_cast_fu_391_p3;
wire   [7:0] tmp_78_fu_404_p4;
wire   [10:0] tmp_359_cast_fu_414_p3;
wire   [7:0] tmp_89_fu_427_p4;
wire   [9:0] tmp_172_fu_437_p3;
wire  signed [10:0] sext_ln905_1_fu_445_p1;
wire   [7:0] trunc_ln714_fu_454_p1;
wire   [8:0] tmp_173_fu_458_p3;
wire  signed [10:0] sext_ln905_2_fu_466_p1;
wire   [31:0] xor_ln905_1_fu_481_p2;
wire   [31:0] xor_ln905_fu_475_p2;
wire   [31:0] xor_ln905_3_fu_493_p2;
wire   [31:0] xor_ln905_2_fu_487_p2;
wire   [31:0] xor_ln905_5_fu_505_p2;
wire   [31:0] xor_ln905_4_fu_499_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1065_fu_269_p2 == 1'd1) & (ap_start_int == 1'b1))) begin
            inPackLen_V_fu_102 <= checksumSizeStream96_dout;
        end else if ((ap_loop_init == 1'b1)) begin
            inPackLen_V_fu_102 <= inPackLen_V_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            tmp_V_5_fu_106 <= crc_V_3;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            tmp_V_5_fu_106 <= tmp_V_9_fu_511_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln1065_reg_556 <= icmp_ln1065_fu_269_p2;
        icmp_ln1065_reg_556_pp0_iter1_reg <= icmp_ln1065_reg_556;
        tmp_2_reg_565 <= {{checksumStream94_dout[63:56]}};
        tmp_3_reg_570 <= {{checksumStream94_dout[55:48]}};
        tmp_4_reg_575 <= {{checksumStream94_dout[47:40]}};
        tmp_5_reg_580 <= {{checksumStream94_dout[39:32]}};
        tmp_V_reg_551_pp0_iter1_reg <= tmp_V_reg_551;
        trunc_ln674_reg_560 <= trunc_ln674_fu_280_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_data_V_fu_110 <= checksumStream94_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_reg_551 <= ap_sig_allocacmp_tmp_V;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln1065_fu_269_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_tmp_V = inPackLen_V_2;
    end else begin
        ap_sig_allocacmp_tmp_V = inPackLen_V_fu_102;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_tmp_V_5_load = tmp_V_9_fu_511_p2;
    end else begin
        ap_sig_allocacmp_tmp_V_5_load = tmp_V_5_fu_106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1065_fu_269_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        checksumSizeStream96_blk_n = checksumSizeStream96_empty_n;
    end else begin
        checksumSizeStream96_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1065_fu_269_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        checksumSizeStream96_read = 1'b1;
    end else begin
        checksumSizeStream96_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        checksumStream94_blk_n = checksumStream94_empty_n;
    end else begin
        checksumStream94_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        checksumStream94_read = 1'b1;
    end else begin
        checksumStream94_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1065_reg_556_pp0_iter1_reg == 1'd0))) begin
        crc_V_4_out_ap_vld = 1'b1;
    end else begin
        crc_V_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1065_reg_556_pp0_iter1_reg == 1'd0))) begin
        in_data_V_out_ap_vld = 1'b1;
    end else begin
        in_data_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZN2xf8security8internalL7table16E_0_ce0 = 1'b1;
    end else begin
        p_ZN2xf8security8internalL7table16E_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZN2xf8security8internalL7table16E_0_ce1 = 1'b1;
    end else begin
        p_ZN2xf8security8internalL7table16E_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZN2xf8security8internalL7table16E_0_ce2 = 1'b1;
    end else begin
        p_ZN2xf8security8internalL7table16E_0_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZN2xf8security8internalL7table16E_0_ce3 = 1'b1;
    end else begin
        p_ZN2xf8security8internalL7table16E_0_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZN2xf8security8internalL7table16E_0_ce4 = 1'b1;
    end else begin
        p_ZN2xf8security8internalL7table16E_0_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZN2xf8security8internalL7table16E_0_ce5 = 1'b1;
    end else begin
        p_ZN2xf8security8internalL7table16E_0_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZN2xf8security8internalL7table16E_0_ce6 = 1'b1;
    end else begin
        p_ZN2xf8security8internalL7table16E_0_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZN2xf8security8internalL7table16E_0_ce7 = 1'b1;
    end else begin
        p_ZN2xf8security8internalL7table16E_0_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1065_reg_556_pp0_iter1_reg == 1'd0))) begin
        tmp_V_19_out_ap_vld = 1'b1;
    end else begin
        tmp_V_19_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((checksumStream94_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln1065_fu_269_p2 == 1'd1) & (checksumSizeStream96_empty_n == 1'b0) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((checksumStream94_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln1065_fu_269_p2 == 1'd1) & (checksumSizeStream96_empty_n == 1'b0) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((checksumStream94_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln1065_fu_269_p2 == 1'd1) & (checksumSizeStream96_empty_n == 1'b0) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((icmp_ln1065_fu_269_p2 == 1'd1) & (checksumSizeStream96_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (checksumStream94_empty_n == 1'b0);
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign crc_V_4_out = tmp_V_5_fu_106;

assign icmp_ln1065_fu_269_p2 = ((ap_sig_allocacmp_tmp_V == 5'd8) ? 1'b1 : 1'b0);

assign inTmp_V_fu_332_p2 = (trunc_ln674_reg_560 ^ ap_sig_allocacmp_tmp_V_5_load);

assign in_data_V_out = in_data_V_fu_110;

assign p_ZN2xf8security8internalL7table16E_0_address0 = zext_ln905_6_fu_470_p1;

assign p_ZN2xf8security8internalL7table16E_0_address1 = zext_ln905_5_fu_449_p1;

assign p_ZN2xf8security8internalL7table16E_0_address2 = zext_ln905_4_fu_422_p1;

assign p_ZN2xf8security8internalL7table16E_0_address3 = zext_ln905_3_fu_399_p1;

assign p_ZN2xf8security8internalL7table16E_0_address4 = zext_ln905_2_fu_376_p1;

assign p_ZN2xf8security8internalL7table16E_0_address5 = zext_ln905_1_fu_360_p1;

assign p_ZN2xf8security8internalL7table16E_0_address6 = zext_ln905_fu_348_p1;

assign p_ZN2xf8security8internalL7table16E_0_address7 = zext_ln714_fu_337_p1;

assign sext_ln905_1_fu_445_p1 = $signed(tmp_172_fu_437_p3);

assign sext_ln905_2_fu_466_p1 = $signed(tmp_173_fu_458_p3);

assign sext_ln905_fu_372_p1 = $signed(tmp_s_fu_365_p3);

assign tmp_172_fu_437_p3 = {{2'd2}, {tmp_89_fu_427_p4}};

assign tmp_173_fu_458_p3 = {{1'd1}, {trunc_ln714_fu_454_p1}};

assign tmp_355_cast_fu_341_p3 = {{1'd1}, {tmp_3_reg_570}};

assign tmp_356_cast_fu_353_p3 = {{2'd2}, {tmp_4_reg_575}};

assign tmp_358_cast_fu_391_p3 = {{3'd4}, {tmp_67_fu_381_p4}};

assign tmp_359_cast_fu_414_p3 = {{3'd5}, {tmp_78_fu_404_p4}};

assign tmp_67_fu_381_p4 = {{inTmp_V_fu_332_p2[31:24]}};

assign tmp_78_fu_404_p4 = {{inTmp_V_fu_332_p2[23:16]}};

assign tmp_89_fu_427_p4 = {{inTmp_V_fu_332_p2[15:8]}};

assign tmp_V_19_out = tmp_V_reg_551_pp0_iter1_reg;

assign tmp_V_9_fu_511_p2 = (xor_ln905_5_fu_505_p2 ^ xor_ln905_4_fu_499_p2);

assign tmp_s_fu_365_p3 = {{1'd1}, {tmp_5_reg_580}};

assign trunc_ln674_fu_280_p1 = checksumStream94_dout[31:0];

assign trunc_ln714_fu_454_p1 = inTmp_V_fu_332_p2[7:0];

assign xor_ln905_1_fu_481_p2 = (p_ZN2xf8security8internalL7table16E_0_q5 ^ p_ZN2xf8security8internalL7table16E_0_q4);

assign xor_ln905_2_fu_487_p2 = (xor_ln905_fu_475_p2 ^ xor_ln905_1_fu_481_p2);

assign xor_ln905_3_fu_493_p2 = (p_ZN2xf8security8internalL7table16E_0_q3 ^ p_ZN2xf8security8internalL7table16E_0_q2);

assign xor_ln905_4_fu_499_p2 = (xor_ln905_3_fu_493_p2 ^ p_ZN2xf8security8internalL7table16E_0_q1);

assign xor_ln905_5_fu_505_p2 = (xor_ln905_2_fu_487_p2 ^ p_ZN2xf8security8internalL7table16E_0_q0);

assign xor_ln905_fu_475_p2 = (p_ZN2xf8security8internalL7table16E_0_q7 ^ p_ZN2xf8security8internalL7table16E_0_q6);

assign zext_ln714_fu_337_p1 = tmp_2_reg_565;

assign zext_ln905_1_fu_360_p1 = tmp_356_cast_fu_353_p3;

assign zext_ln905_2_fu_376_p1 = $unsigned(sext_ln905_fu_372_p1);

assign zext_ln905_3_fu_399_p1 = tmp_358_cast_fu_391_p3;

assign zext_ln905_4_fu_422_p1 = tmp_359_cast_fu_414_p3;

assign zext_ln905_5_fu_449_p1 = $unsigned(sext_ln905_1_fu_445_p1);

assign zext_ln905_6_fu_470_p1 = $unsigned(sext_ln905_2_fu_466_p1);

assign zext_ln905_fu_348_p1 = tmp_355_cast_fu_341_p3;

endmodule //gzipcMulticoreStreaming_crc32_8_Pipeline_VITIS_LOOP_2412_4
