-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_bytePacker_64_4_Pipeline_multicorePacker is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    packedStream36_dout : IN STD_LOGIC_VECTOR (67 downto 0);
    packedStream36_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    packedStream36_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    packedStream36_empty_n : IN STD_LOGIC;
    packedStream36_read : OUT STD_LOGIC;
    outStream_din : OUT STD_LOGIC_VECTOR (67 downto 0);
    outStream_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    outStream_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    outStream_full_n : IN STD_LOGIC;
    outStream_write : OUT STD_LOGIC;
    outVal_data_V_7_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    outVal_data_V_7_out_ap_vld : OUT STD_LOGIC;
    outVal_data_V_6_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    outVal_data_V_6_out_ap_vld : OUT STD_LOGIC;
    outVal_data_V_5_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    outVal_data_V_5_out_ap_vld : OUT STD_LOGIC;
    outVal_data_V_4_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    outVal_data_V_4_out_ap_vld : OUT STD_LOGIC;
    outVal_data_V_3_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    outVal_data_V_3_out_ap_vld : OUT STD_LOGIC;
    outVal_data_V_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    outVal_data_V_2_out_ap_vld : OUT STD_LOGIC;
    outVal_data_V_1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    outVal_data_V_1_out_ap_vld : OUT STD_LOGIC;
    outVal_data_V_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    outVal_data_V_out_ap_vld : OUT STD_LOGIC;
    inputWindow_V_5_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    inputWindow_V_5_out_ap_vld : OUT STD_LOGIC;
    inputIdx_V_4_out : OUT STD_LOGIC_VECTOR (3 downto 0);
    inputIdx_V_4_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of gzipcMulticoreStreaming_bytePacker_64_4_Pipeline_multicorePacker is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv128_lc_4 : STD_LOGIC_VECTOR (127 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_phi_mux_packerDone_phi_fu_256_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal tmp_323_reg_773 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_323_reg_773_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal packedStream36_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal outStream_blk_n : STD_LOGIC;
    signal packerDone_reg_253 : STD_LOGIC_VECTOR (0 downto 0);
    signal packerDone_reg_253_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal inVal_V_reg_739 : STD_LOGIC_VECTOR (67 downto 0);
    signal inVal_V_reg_739_pp0_iter1_reg : STD_LOGIC_VECTOR (67 downto 0);
    signal trunc_ln714_fu_269_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln714_reg_744 : STD_LOGIC_VECTOR (3 downto 0);
    signal packerDone_1_fu_273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal packerDone_1_reg_749 : STD_LOGIC_VECTOR (0 downto 0);
    signal Hi_fu_300_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal Hi_reg_754 : STD_LOGIC_VECTOR (7 downto 0);
    signal Lo_fu_310_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal Lo_reg_760 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln414_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln414_reg_765 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_323_fu_333_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln174_fu_568_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln174_reg_777 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_condition_exit_pp0_iter2_stage0 : STD_LOGIC;
    signal ap_loop_init : STD_LOGIC;
    signal lhs_fu_130 : STD_LOGIC_VECTOR (3 downto 0);
    signal inputIdx_V_1_fu_328_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal inputIdx_V_fu_346_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_fu_134 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_s_fu_483_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln1044_fu_582_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal outVal_data_V_fu_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal outVal_data_V_8_fu_489_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal outVal_data_V_1_fu_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal outVal_data_V_2_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal outVal_data_V_3_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal outVal_data_V_4_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal outVal_data_V_5_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal outVal_data_V_6_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal outVal_data_V_7_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln1541_fu_282_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ret_V_fu_286_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln_fu_292_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1108_fu_318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln598_fu_306_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_324_fu_365_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln414_fu_378_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln414_fu_381_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln414_fu_387_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln414_2_fu_399_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln414_1_fu_393_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln414_fu_406_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln232_fu_374_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln414_1_fu_412_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal shl_ln414_fu_424_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_fu_430_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln414_2_fu_416_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln414_3_fu_420_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal shl_ln414_1_fu_447_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal lshr_ln414_fu_453_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal and_ln414_fu_459_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal xor_ln414_1_fu_465_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal select_ln414_3_fu_440_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal and_ln414_1_fu_471_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal and_ln414_2_fu_477_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal inputWindow_V_fu_572_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_502 : BOOLEAN;
    signal ap_condition_506 : BOOLEAN;
    signal ap_condition_510 : BOOLEAN;
    signal ap_condition_218 : BOOLEAN;
    signal ap_condition_518 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    lhs_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    lhs_fu_130 <= ap_const_lv4_0;
                elsif ((ap_const_boolean_1 = ap_condition_510)) then 
                    lhs_fu_130 <= inputIdx_V_fu_346_p2;
                elsif ((ap_const_boolean_1 = ap_condition_506)) then 
                    lhs_fu_130 <= inputIdx_V_1_fu_328_p2;
                end if;
            end if; 
        end if;
    end process;

    p_Val2_s_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_218)) then
                if ((tmp_323_reg_773 = ap_const_lv1_1)) then 
                    p_Val2_s_fu_134 <= zext_ln1044_fu_582_p1;
                elsif ((tmp_323_reg_773 = ap_const_lv1_0)) then 
                    p_Val2_s_fu_134 <= p_Result_s_fu_483_p2;
                end if;
            end if; 
        end if;
    end process;

    packerDone_reg_253_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                if ((ap_const_boolean_1 = ap_condition_518)) then 
                    packerDone_reg_253 <= packerDone_1_reg_749;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1))) then 
                    packerDone_reg_253 <= ap_const_lv1_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (packerDone_reg_253 = ap_const_lv1_0))) then
                    Hi_reg_754(7 downto 3) <= Hi_fu_300_p2(7 downto 3);
                    Lo_reg_760(6 downto 3) <= Lo_fu_310_p3(6 downto 3);
                icmp_ln414_reg_765 <= icmp_ln414_fu_322_p2;
                tmp_323_reg_773 <= inputIdx_V_1_fu_328_p2(3 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                inVal_V_reg_739_pp0_iter1_reg <= inVal_V_reg_739;
                packerDone_reg_253_pp0_iter1_reg <= packerDone_reg_253;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_packerDone_phi_fu_256_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                inVal_V_reg_739 <= packedStream36_dout;
                trunc_ln714_reg_744 <= trunc_ln714_fu_269_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (packerDone_reg_253_pp0_iter1_reg = ap_const_lv1_0))) then
                outVal_data_V_1_fu_142 <= p_Result_s_fu_483_p2(15 downto 8);
                outVal_data_V_2_fu_146 <= p_Result_s_fu_483_p2(23 downto 16);
                outVal_data_V_3_fu_150 <= p_Result_s_fu_483_p2(31 downto 24);
                outVal_data_V_4_fu_154 <= p_Result_s_fu_483_p2(39 downto 32);
                outVal_data_V_5_fu_158 <= p_Result_s_fu_483_p2(47 downto 40);
                outVal_data_V_6_fu_162 <= p_Result_s_fu_483_p2(55 downto 48);
                outVal_data_V_7_fu_166 <= p_Result_s_fu_483_p2(63 downto 56);
                outVal_data_V_fu_138 <= outVal_data_V_8_fu_489_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_packerDone_phi_fu_256_p4 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                packerDone_1_reg_749 <= packerDone_1_fu_273_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                tmp_323_reg_773_pp0_iter2_reg <= tmp_323_reg_773;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_323_reg_773 = ap_const_lv1_1) and (packerDone_reg_253_pp0_iter1_reg = ap_const_lv1_0))) then
                trunc_ln174_reg_777 <= trunc_ln174_fu_568_p1;
            end if;
        end if;
    end process;
    Hi_reg_754(2 downto 0) <= "111";
    Lo_reg_760(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Hi_fu_300_p2 <= std_logic_vector(unsigned(shl_ln_fu_292_p3) + unsigned(ap_const_lv8_FF));
    Lo_fu_310_p3 <= (lhs_fu_130 & ap_const_lv3_0);
    and_ln414_1_fu_471_p2 <= (xor_ln414_1_fu_465_p2 and p_Val2_s_fu_134);
    and_ln414_2_fu_477_p2 <= (select_ln414_3_fu_440_p3 and and_ln414_fu_459_p2);
    and_ln414_fu_459_p2 <= (shl_ln414_1_fu_447_p2 and lshr_ln414_fu_453_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter3, packedStream36_empty_n, ap_phi_mux_packerDone_phi_fu_256_p4, outStream_full_n, tmp_323_reg_773_pp0_iter2_reg, ap_start_int)
    begin
                ap_block_pp0_stage0_01001 <= (((tmp_323_reg_773_pp0_iter2_reg = ap_const_lv1_1) and (outStream_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_phi_mux_packerDone_phi_fu_256_p4 = ap_const_lv1_0) and (packedStream36_empty_n = ap_const_logic_0) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter3, packedStream36_empty_n, ap_phi_mux_packerDone_phi_fu_256_p4, outStream_full_n, tmp_323_reg_773_pp0_iter2_reg, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= (((tmp_323_reg_773_pp0_iter2_reg = ap_const_lv1_1) and (outStream_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_phi_mux_packerDone_phi_fu_256_p4 = ap_const_lv1_0) and (packedStream36_empty_n = ap_const_logic_0) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter3, packedStream36_empty_n, ap_phi_mux_packerDone_phi_fu_256_p4, outStream_full_n, tmp_323_reg_773_pp0_iter2_reg, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= (((tmp_323_reg_773_pp0_iter2_reg = ap_const_lv1_1) and (outStream_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_phi_mux_packerDone_phi_fu_256_p4 = ap_const_lv1_0) and (packedStream36_empty_n = ap_const_logic_0) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(packedStream36_empty_n, ap_phi_mux_packerDone_phi_fu_256_p4)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_phi_mux_packerDone_phi_fu_256_p4 = ap_const_lv1_0) and (packedStream36_empty_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter3_assign_proc : process(outStream_full_n, tmp_323_reg_773_pp0_iter2_reg)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((tmp_323_reg_773_pp0_iter2_reg = ap_const_lv1_1) and (outStream_full_n = ap_const_logic_0));
    end process;


    ap_condition_218_assign_proc : process(ap_enable_reg_pp0_iter2, packerDone_reg_253_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
                ap_condition_218 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (packerDone_reg_253_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_502_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, packerDone_reg_253)
    begin
                ap_condition_502 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (packerDone_reg_253 = ap_const_lv1_0));
    end process;


    ap_condition_506_assign_proc : process(ap_enable_reg_pp0_iter1, packerDone_reg_253, tmp_323_fu_333_p3)
    begin
                ap_condition_506 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_323_fu_333_p3 = ap_const_lv1_0) and (packerDone_reg_253 = ap_const_lv1_0));
    end process;


    ap_condition_510_assign_proc : process(ap_enable_reg_pp0_iter1, packerDone_reg_253, tmp_323_fu_333_p3)
    begin
                ap_condition_510 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_323_fu_333_p3 = ap_const_lv1_1) and (packerDone_reg_253 = ap_const_lv1_0));
    end process;


    ap_condition_518_assign_proc : process(ap_enable_reg_pp0_iter1, packerDone_reg_253, ap_block_pp0_stage0_11001)
    begin
                ap_condition_518 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (packerDone_reg_253 = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_packerDone_phi_fu_256_p4, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_phi_mux_packerDone_phi_fu_256_p4 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter2_stage0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, packerDone_reg_253_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (packerDone_reg_253_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_packerDone_phi_fu_256_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, packerDone_1_reg_749, ap_loop_init, ap_condition_502)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
            if ((ap_const_boolean_1 = ap_condition_502)) then 
                ap_phi_mux_packerDone_phi_fu_256_p4 <= packerDone_1_reg_749;
            elsif ((ap_loop_init = ap_const_logic_1)) then 
                ap_phi_mux_packerDone_phi_fu_256_p4 <= ap_const_lv1_0;
            else 
                ap_phi_mux_packerDone_phi_fu_256_p4 <= packerDone_1_reg_749;
            end if;
        else 
            ap_phi_mux_packerDone_phi_fu_256_p4 <= packerDone_1_reg_749;
        end if; 
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln414_fu_322_p2 <= "1" when (unsigned(zext_ln1108_fu_318_p1) > unsigned(zext_ln598_fu_306_p1)) else "0";
    inputIdx_V_1_fu_328_p2 <= std_logic_vector(unsigned(trunc_ln714_reg_744) + unsigned(lhs_fu_130));
    inputIdx_V_4_out <= lhs_fu_130;

    inputIdx_V_4_out_ap_vld_assign_proc : process(packerDone_reg_253_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (packerDone_reg_253_pp0_iter1_reg = ap_const_lv1_1))) then 
            inputIdx_V_4_out_ap_vld <= ap_const_logic_1;
        else 
            inputIdx_V_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    inputIdx_V_fu_346_p2 <= (inputIdx_V_1_fu_328_p2 xor ap_const_lv4_8);
    inputWindow_V_5_out <= p_Val2_s_fu_134(64 - 1 downto 0);

    inputWindow_V_5_out_ap_vld_assign_proc : process(packerDone_reg_253_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (packerDone_reg_253_pp0_iter1_reg = ap_const_lv1_1))) then 
            inputWindow_V_5_out_ap_vld <= ap_const_logic_1;
        else 
            inputWindow_V_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    inputWindow_V_fu_572_p4 <= p_Result_s_fu_483_p2(127 downto 64);
    lshr_ln414_fu_453_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv128_lc_4),to_integer(unsigned('0' & zext_ln414_3_fu_420_p1(31-1 downto 0)))));

    outStream_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, outStream_full_n, tmp_323_reg_773_pp0_iter2_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_323_reg_773_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            outStream_blk_n <= outStream_full_n;
        else 
            outStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outStream_din <= (ap_const_lv4_8 & trunc_ln174_reg_777);

    outStream_write_assign_proc : process(ap_enable_reg_pp0_iter3, tmp_323_reg_773_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_323_reg_773_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            outStream_write <= ap_const_logic_1;
        else 
            outStream_write <= ap_const_logic_0;
        end if; 
    end process;

    outVal_data_V_1_out <= outVal_data_V_1_fu_142;

    outVal_data_V_1_out_ap_vld_assign_proc : process(packerDone_reg_253_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (packerDone_reg_253_pp0_iter1_reg = ap_const_lv1_1))) then 
            outVal_data_V_1_out_ap_vld <= ap_const_logic_1;
        else 
            outVal_data_V_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    outVal_data_V_2_out <= outVal_data_V_2_fu_146;

    outVal_data_V_2_out_ap_vld_assign_proc : process(packerDone_reg_253_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (packerDone_reg_253_pp0_iter1_reg = ap_const_lv1_1))) then 
            outVal_data_V_2_out_ap_vld <= ap_const_logic_1;
        else 
            outVal_data_V_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    outVal_data_V_3_out <= outVal_data_V_3_fu_150;

    outVal_data_V_3_out_ap_vld_assign_proc : process(packerDone_reg_253_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (packerDone_reg_253_pp0_iter1_reg = ap_const_lv1_1))) then 
            outVal_data_V_3_out_ap_vld <= ap_const_logic_1;
        else 
            outVal_data_V_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    outVal_data_V_4_out <= outVal_data_V_4_fu_154;

    outVal_data_V_4_out_ap_vld_assign_proc : process(packerDone_reg_253_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (packerDone_reg_253_pp0_iter1_reg = ap_const_lv1_1))) then 
            outVal_data_V_4_out_ap_vld <= ap_const_logic_1;
        else 
            outVal_data_V_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    outVal_data_V_5_out <= outVal_data_V_5_fu_158;

    outVal_data_V_5_out_ap_vld_assign_proc : process(packerDone_reg_253_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (packerDone_reg_253_pp0_iter1_reg = ap_const_lv1_1))) then 
            outVal_data_V_5_out_ap_vld <= ap_const_logic_1;
        else 
            outVal_data_V_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    outVal_data_V_6_out <= outVal_data_V_6_fu_162;

    outVal_data_V_6_out_ap_vld_assign_proc : process(packerDone_reg_253_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (packerDone_reg_253_pp0_iter1_reg = ap_const_lv1_1))) then 
            outVal_data_V_6_out_ap_vld <= ap_const_logic_1;
        else 
            outVal_data_V_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    outVal_data_V_7_out <= outVal_data_V_7_fu_166;

    outVal_data_V_7_out_ap_vld_assign_proc : process(packerDone_reg_253_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (packerDone_reg_253_pp0_iter1_reg = ap_const_lv1_1))) then 
            outVal_data_V_7_out_ap_vld <= ap_const_logic_1;
        else 
            outVal_data_V_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    outVal_data_V_8_fu_489_p1 <= p_Result_s_fu_483_p2(8 - 1 downto 0);
    outVal_data_V_out <= outVal_data_V_fu_138;

    outVal_data_V_out_ap_vld_assign_proc : process(packerDone_reg_253_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (packerDone_reg_253_pp0_iter1_reg = ap_const_lv1_1))) then 
            outVal_data_V_out_ap_vld <= ap_const_logic_1;
        else 
            outVal_data_V_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_s_fu_483_p2 <= (and_ln414_2_fu_477_p2 or and_ln414_1_fu_471_p2);

    packedStream36_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, packedStream36_empty_n, ap_phi_mux_packerDone_phi_fu_256_p4, ap_block_pp0_stage0, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_phi_mux_packerDone_phi_fu_256_p4 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            packedStream36_blk_n <= packedStream36_empty_n;
        else 
            packedStream36_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    packedStream36_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_packerDone_phi_fu_256_p4, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_packerDone_phi_fu_256_p4 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            packedStream36_read <= ap_const_logic_1;
        else 
            packedStream36_read <= ap_const_logic_0;
        end if; 
    end process;

    packerDone_1_fu_273_p2 <= "1" when (trunc_ln714_fu_269_p1 = ap_const_lv4_0) else "0";
    ret_V_fu_286_p2 <= std_logic_vector(unsigned(zext_ln1541_fu_282_p1) + unsigned(ap_const_lv5_8));
    select_ln414_1_fu_393_p3 <= 
        Hi_reg_754 when (icmp_ln414_reg_765(0) = '1') else 
        zext_ln414_fu_378_p1;
    select_ln414_2_fu_399_p3 <= 
        xor_ln414_fu_381_p2 when (icmp_ln414_reg_765(0) = '1') else 
        zext_ln414_fu_378_p1;
    select_ln414_3_fu_440_p3 <= 
        tmp_fu_430_p4 when (icmp_ln414_reg_765(0) = '1') else 
        shl_ln414_fu_424_p2;
    select_ln414_fu_387_p3 <= 
        zext_ln414_fu_378_p1 when (icmp_ln414_reg_765(0) = '1') else 
        Hi_reg_754;
    shl_ln414_1_fu_447_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv128_lc_4),to_integer(unsigned('0' & zext_ln414_2_fu_416_p1(31-1 downto 0)))));
    shl_ln414_fu_424_p2 <= std_logic_vector(shift_left(unsigned(zext_ln232_fu_374_p1),to_integer(unsigned('0' & zext_ln414_1_fu_412_p1(31-1 downto 0)))));
    shl_ln_fu_292_p3 <= (ret_V_fu_286_p2 & ap_const_lv3_0);
    sub_ln414_fu_406_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(select_ln414_fu_387_p3));
    tmp_323_fu_333_p3 <= inputIdx_V_1_fu_328_p2(3 downto 3);
    tmp_324_fu_365_p4 <= inVal_V_reg_739_pp0_iter1_reg(67 downto 4);
    
    tmp_fu_430_p4_proc : process(shl_ln414_fu_424_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(128+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(128+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable tmp_fu_430_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(128 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_7F(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := shl_ln414_fu_424_p2;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(128-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(128-1-unsigned(ap_const_lv32_7F(7-1 downto 0)));
            for tmp_fu_430_p4_i in 0 to 128-1 loop
                v0_cpy(tmp_fu_430_p4_i) := shl_ln414_fu_424_p2(128-1-tmp_fu_430_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(128-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_fu_430_p4 <= resvalue(128-1 downto 0);
    end process;

    trunc_ln174_fu_568_p1 <= p_Result_s_fu_483_p2(64 - 1 downto 0);
    trunc_ln714_fu_269_p1 <= packedStream36_dout(4 - 1 downto 0);
    xor_ln414_1_fu_465_p2 <= (ap_const_lv128_lc_4 xor and_ln414_fu_459_p2);
    xor_ln414_fu_381_p2 <= (zext_ln414_fu_378_p1 xor ap_const_lv8_7F);
    zext_ln1044_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(inputWindow_V_fu_572_p4),128));
    zext_ln1108_fu_318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_fu_310_p3),32));
    zext_ln1541_fu_282_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_fu_130),5));
    zext_ln232_fu_374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_324_fu_365_p4),128));
    zext_ln414_1_fu_412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_2_fu_399_p3),128));
    zext_ln414_2_fu_416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_1_fu_393_p3),128));
    zext_ln414_3_fu_420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln414_fu_406_p2),128));
    zext_ln414_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_reg_760),8));
    zext_ln598_fu_306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Hi_fu_300_p2),32));
end behav;
