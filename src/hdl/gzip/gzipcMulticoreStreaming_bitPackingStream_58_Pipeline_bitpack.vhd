-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_bitPackingStream_58_Pipeline_bitpack is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    hufCodeStream_dout : IN STD_LOGIC_VECTOR (19 downto 0);
    hufCodeStream_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    hufCodeStream_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    hufCodeStream_empty_n : IN STD_LOGIC;
    hufCodeStream_read : OUT STD_LOGIC;
    huffStream_3_din : OUT STD_LOGIC_VECTOR (17 downto 0);
    huffStream_3_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    huffStream_3_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    huffStream_3_full_n : IN STD_LOGIC;
    huffStream_3_write : OUT STD_LOGIC;
    empty : IN STD_LOGIC_VECTOR (19 downto 0);
    outValue_data_V : IN STD_LOGIC_VECTOR (7 downto 0);
    outValue_data_V_170_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    outValue_data_V_170_out_ap_vld : OUT STD_LOGIC;
    outValue_data_V_169_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    outValue_data_V_169_out_ap_vld : OUT STD_LOGIC;
    localBits_V_16_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    localBits_V_16_out_ap_vld : OUT STD_LOGIC;
    last_block_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    last_block_out_ap_vld : OUT STD_LOGIC;
    localBits_idx_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    localBits_idx_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of gzipcMulticoreStreaming_bitPackingStream_58_Pipeline_bitpack is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_F0 : STD_LOGIC_VECTOR (7 downto 0) := "11110000";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal inValue_strobe_V_fu_217_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal icmp_ln142_reg_591 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln142_reg_591_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal hufCodeStream_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal huffStream_3_blk_n : STD_LOGIC;
    signal last_block_reg_176 : STD_LOGIC_VECTOR (0 downto 0);
    signal inValue_data_bitlen_sroa_0_0_391_in_in_in_load_reg_560 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal inValue_strobe_V_reg_565 : STD_LOGIC_VECTOR (0 downto 0);
    signal inValue_strobe_V_reg_565_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln390_fu_274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln390_reg_569 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln390_fu_280_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln390_reg_577 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln390_6_fu_284_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln390_6_reg_585 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln142_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln174_fu_473_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln174_reg_595 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_last_block_phi_fu_180_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal localBits_idx_fu_96 : STD_LOGIC_VECTOR (7 downto 0);
    signal localBits_idx_40_fu_310_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal localBits_idx_39_fu_288_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_localBits_idx_load : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_100 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1044_fu_455_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_439_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inValue_data_bitlen_sroa_0_0_391_in_in_in_fu_104 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_sig_allocacmp_inValue_data_bitlen_sroa_0_0_391_in_in_in_load : STD_LOGIC_VECTOR (19 downto 0);
    signal outValue_data_V_80_fu_108 : STD_LOGIC_VECTOR (7 downto 0);
    signal outValue_data_V_82_fu_459_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal outValue_data_V_81_fu_112 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln_fu_228_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln139_14_fu_246_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln139_fu_238_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln139_fu_254_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln139_16_fu_260_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln139_5_fu_264_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln139_5_fu_242_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln259_fu_270_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln139_15_fu_250_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_353_fu_294_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_354_fu_334_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln390_fu_341_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln390_fu_346_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln390_17_fu_356_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln390_16_fu_351_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln390_6_fu_362_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln259_fu_337_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln390_fu_368_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln390_fu_380_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_352_fu_386_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln390_11_fu_372_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln390_12_fu_376_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln390_6_fu_403_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln390_fu_409_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln390_fu_415_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln390_fu_421_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln390_18_fu_396_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln390_11_fu_427_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln390_12_fu_433_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal localBits_V_5_fu_445_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_394 : BOOLEAN;
    signal ap_condition_397 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    inValue_data_bitlen_sroa_0_0_391_in_in_in_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((inValue_strobe_V_fu_217_p3 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1))) then 
                    inValue_data_bitlen_sroa_0_0_391_in_in_in_fu_104 <= hufCodeStream_dout;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    inValue_data_bitlen_sroa_0_0_391_in_in_in_fu_104 <= empty;
                end if;
            end if; 
        end if;
    end process;

    last_block_reg_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (inValue_strobe_V_reg_565_pp0_iter1_reg = ap_const_lv1_1))) then 
                last_block_reg_176 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                last_block_reg_176 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    localBits_idx_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_const_boolean_1 = ap_condition_397)) then 
                    localBits_idx_fu_96 <= localBits_idx_39_fu_288_p2;
                elsif ((ap_const_boolean_1 = ap_condition_394)) then 
                    localBits_idx_fu_96 <= localBits_idx_40_fu_310_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    localBits_idx_fu_96 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    outValue_data_V_80_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    outValue_data_V_80_fu_108 <= ap_const_lv8_0;
                elsif (((icmp_ln142_reg_591 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    outValue_data_V_80_fu_108 <= outValue_data_V_82_fu_459_p1;
                end if;
            end if; 
        end if;
    end process;

    outValue_data_V_81_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    outValue_data_V_81_fu_112 <= outValue_data_V;
                elsif (((icmp_ln142_reg_591 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    outValue_data_V_81_fu_112 <= p_Result_s_fu_439_p2(15 downto 8);
                end if;
            end if; 
        end if;
    end process;

    p_Val2_s_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_Val2_s_fu_100 <= ap_const_lv32_0;
                elsif (((icmp_ln142_reg_591 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    p_Val2_s_fu_100 <= p_Result_s_fu_439_p2;
                elsif (((icmp_ln142_reg_591 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    p_Val2_s_fu_100 <= zext_ln1044_fu_455_p1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                icmp_ln142_reg_591_pp0_iter1_reg <= icmp_ln142_reg_591;
                inValue_data_bitlen_sroa_0_0_391_in_in_in_load_reg_560 <= ap_sig_allocacmp_inValue_data_bitlen_sroa_0_0_391_in_in_in_load;
                inValue_strobe_V_reg_565 <= ap_sig_allocacmp_inValue_data_bitlen_sroa_0_0_391_in_in_in_load(19 downto 19);
                inValue_strobe_V_reg_565_pp0_iter1_reg <= inValue_strobe_V_reg_565;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (inValue_strobe_V_fu_217_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln142_reg_591 <= icmp_ln142_fu_304_p2;
                icmp_ln390_reg_569 <= icmp_ln390_fu_274_p2;
                trunc_ln390_6_reg_585 <= trunc_ln390_6_fu_284_p1;
                trunc_ln390_reg_577 <= trunc_ln390_fu_280_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln142_reg_591 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln174_reg_595 <= trunc_ln174_fu_473_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln139_5_fu_264_p2 <= std_logic_vector(unsigned(zext_ln139_16_fu_260_p1) + unsigned(ap_const_lv10_3FF));
    add_ln139_fu_254_p2 <= std_logic_vector(unsigned(zext_ln139_14_fu_246_p1) + unsigned(zext_ln139_fu_238_p1));
    and_ln390_11_fu_427_p2 <= (xor_ln390_fu_421_p2 and p_Val2_s_fu_100);
    and_ln390_12_fu_433_p2 <= (select_ln390_18_fu_396_p3 and and_ln390_fu_415_p2);
    and_ln390_fu_415_p2 <= (shl_ln390_6_fu_403_p2 and lshr_ln390_fu_409_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, hufCodeStream_empty_n, inValue_strobe_V_fu_217_p3, huffStream_3_full_n, icmp_ln142_reg_591_pp0_iter1_reg, ap_start_int)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln142_reg_591_pp0_iter1_reg = ap_const_lv1_0) and (huffStream_3_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((inValue_strobe_V_fu_217_p3 = ap_const_lv1_1) and (hufCodeStream_empty_n = ap_const_logic_0) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, hufCodeStream_empty_n, inValue_strobe_V_fu_217_p3, huffStream_3_full_n, icmp_ln142_reg_591_pp0_iter1_reg, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln142_reg_591_pp0_iter1_reg = ap_const_lv1_0) and (huffStream_3_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((inValue_strobe_V_fu_217_p3 = ap_const_lv1_1) and (hufCodeStream_empty_n = ap_const_logic_0) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, hufCodeStream_empty_n, inValue_strobe_V_fu_217_p3, huffStream_3_full_n, icmp_ln142_reg_591_pp0_iter1_reg, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln142_reg_591_pp0_iter1_reg = ap_const_lv1_0) and (huffStream_3_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((inValue_strobe_V_fu_217_p3 = ap_const_lv1_1) and (hufCodeStream_empty_n = ap_const_logic_0) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(hufCodeStream_empty_n, inValue_strobe_V_fu_217_p3)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((inValue_strobe_V_fu_217_p3 = ap_const_lv1_1) and (hufCodeStream_empty_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter2_assign_proc : process(huffStream_3_full_n, icmp_ln142_reg_591_pp0_iter1_reg)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((icmp_ln142_reg_591_pp0_iter1_reg = ap_const_lv1_0) and (huffStream_3_full_n = ap_const_logic_0));
    end process;


    ap_condition_394_assign_proc : process(inValue_strobe_V_fu_217_p3, icmp_ln142_fu_304_p2, ap_start_int)
    begin
                ap_condition_394 <= ((inValue_strobe_V_fu_217_p3 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (icmp_ln142_fu_304_p2 = ap_const_lv1_0));
    end process;


    ap_condition_397_assign_proc : process(inValue_strobe_V_fu_217_p3, icmp_ln142_fu_304_p2, ap_start_int)
    begin
                ap_condition_397 <= ((inValue_strobe_V_fu_217_p3 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (icmp_ln142_fu_304_p2 = ap_const_lv1_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, inValue_strobe_V_fu_217_p3, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (inValue_strobe_V_fu_217_p3 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_last_block_phi_fu_180_p4_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, last_block_reg_176, inValue_strobe_V_reg_565_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (inValue_strobe_V_reg_565_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_phi_mux_last_block_phi_fu_180_p4 <= ap_const_lv1_0;
        else 
            ap_phi_mux_last_block_phi_fu_180_p4 <= last_block_reg_176;
        end if; 
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_inValue_data_bitlen_sroa_0_0_391_in_in_in_load_assign_proc : process(ap_CS_fsm_pp0_stage0, empty, ap_block_pp0_stage0, ap_loop_init, inValue_data_bitlen_sroa_0_0_391_in_in_in_fu_104)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_inValue_data_bitlen_sroa_0_0_391_in_in_in_load <= empty;
        else 
            ap_sig_allocacmp_inValue_data_bitlen_sroa_0_0_391_in_in_in_load <= inValue_data_bitlen_sroa_0_0_391_in_in_in_fu_104;
        end if; 
    end process;


    ap_sig_allocacmp_localBits_idx_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, localBits_idx_fu_96)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_localBits_idx_load <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_localBits_idx_load <= localBits_idx_fu_96;
        end if; 
    end process;


    hufCodeStream_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, hufCodeStream_empty_n, inValue_strobe_V_fu_217_p3, ap_block_pp0_stage0, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (inValue_strobe_V_fu_217_p3 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            hufCodeStream_blk_n <= hufCodeStream_empty_n;
        else 
            hufCodeStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    hufCodeStream_read_assign_proc : process(ap_CS_fsm_pp0_stage0, inValue_strobe_V_fu_217_p3, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (inValue_strobe_V_fu_217_p3 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            hufCodeStream_read <= ap_const_logic_1;
        else 
            hufCodeStream_read <= ap_const_logic_0;
        end if; 
    end process;


    huffStream_3_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, huffStream_3_full_n, icmp_ln142_reg_591_pp0_iter1_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln142_reg_591_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            huffStream_3_blk_n <= huffStream_3_full_n;
        else 
            huffStream_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    huffStream_3_din <= (ap_const_lv2_2 & trunc_ln174_reg_595);

    huffStream_3_write_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln142_reg_591_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln142_reg_591_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            huffStream_3_write <= ap_const_logic_1;
        else 
            huffStream_3_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln142_fu_304_p2 <= "1" when (tmp_353_fu_294_p4 = ap_const_lv4_0) else "0";
    icmp_ln390_fu_274_p2 <= "1" when (unsigned(zext_ln139_5_fu_242_p1) > unsigned(sext_ln259_fu_270_p1)) else "0";
    inValue_strobe_V_fu_217_p3 <= ap_sig_allocacmp_inValue_data_bitlen_sroa_0_0_391_in_in_in_load(19 downto 19);
    last_block_out <= ap_phi_mux_last_block_phi_fu_180_p4;

    last_block_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, inValue_strobe_V_reg_565)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inValue_strobe_V_reg_565 = ap_const_lv1_0))) then 
            last_block_out_ap_vld <= ap_const_logic_1;
        else 
            last_block_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    localBits_V_16_out <= p_Val2_s_fu_100;

    localBits_V_16_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, inValue_strobe_V_reg_565)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inValue_strobe_V_reg_565 = ap_const_lv1_0))) then 
            localBits_V_16_out_ap_vld <= ap_const_logic_1;
        else 
            localBits_V_16_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    localBits_V_5_fu_445_p4 <= p_Result_s_fu_439_p2(31 downto 16);
    localBits_idx_39_fu_288_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_localBits_idx_load) + unsigned(zext_ln139_15_fu_250_p1));
    localBits_idx_40_fu_310_p2 <= std_logic_vector(unsigned(localBits_idx_39_fu_288_p2) + unsigned(ap_const_lv8_F0));
    localBits_idx_out <= localBits_idx_fu_96;

    localBits_idx_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, inValue_strobe_V_reg_565)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inValue_strobe_V_reg_565 = ap_const_lv1_0))) then 
            localBits_idx_out_ap_vld <= ap_const_logic_1;
        else 
            localBits_idx_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln390_fu_409_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln390_12_fu_376_p1(31-1 downto 0)))));
    outValue_data_V_169_out <= outValue_data_V_80_fu_108;

    outValue_data_V_169_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, inValue_strobe_V_reg_565)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inValue_strobe_V_reg_565 = ap_const_lv1_0))) then 
            outValue_data_V_169_out_ap_vld <= ap_const_logic_1;
        else 
            outValue_data_V_169_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    outValue_data_V_170_out <= outValue_data_V_81_fu_112;

    outValue_data_V_170_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, inValue_strobe_V_reg_565)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inValue_strobe_V_reg_565 = ap_const_lv1_0))) then 
            outValue_data_V_170_out_ap_vld <= ap_const_logic_1;
        else 
            outValue_data_V_170_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    outValue_data_V_82_fu_459_p1 <= p_Result_s_fu_439_p2(8 - 1 downto 0);
    p_Result_s_fu_439_p2 <= (and_ln390_12_fu_433_p2 or and_ln390_11_fu_427_p2);
    select_ln390_16_fu_351_p3 <= 
        trunc_ln390_6_reg_585 when (icmp_ln390_reg_569(0) = '1') else 
        trunc_ln390_reg_577;
    select_ln390_17_fu_356_p3 <= 
        sub_ln390_fu_341_p2 when (icmp_ln390_reg_569(0) = '1') else 
        trunc_ln390_reg_577;
    select_ln390_18_fu_396_p3 <= 
        tmp_352_fu_386_p4 when (icmp_ln390_reg_569(0) = '1') else 
        shl_ln390_fu_380_p2;
    select_ln390_fu_346_p3 <= 
        trunc_ln390_reg_577 when (icmp_ln390_reg_569(0) = '1') else 
        trunc_ln390_6_reg_585;
        sext_ln259_fu_270_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln139_5_fu_264_p2),32));

    shl_ln390_6_fu_403_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln390_11_fu_372_p1(31-1 downto 0)))));
    shl_ln390_fu_380_p2 <= std_logic_vector(shift_left(unsigned(zext_ln259_fu_337_p1),to_integer(unsigned('0' & zext_ln390_fu_368_p1(31-1 downto 0)))));
    sub_ln390_6_fu_362_p2 <= std_logic_vector(unsigned(ap_const_lv6_1F) - unsigned(select_ln390_fu_346_p3));
    sub_ln390_fu_341_p2 <= std_logic_vector(unsigned(ap_const_lv6_1F) - unsigned(trunc_ln390_reg_577));
    
    tmp_352_fu_386_p4_proc : process(shl_ln390_fu_380_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_352_fu_386_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := shl_ln390_fu_380_p2;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for tmp_352_fu_386_p4_i in 0 to 32-1 loop
                v0_cpy(tmp_352_fu_386_p4_i) := shl_ln390_fu_380_p2(32-1-tmp_352_fu_386_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_352_fu_386_p4 <= resvalue(32-1 downto 0);
    end process;

    tmp_353_fu_294_p4 <= localBits_idx_39_fu_288_p2(7 downto 4);
    tmp_354_fu_334_p1 <= inValue_data_bitlen_sroa_0_0_391_in_in_in_load_reg_560(15 - 1 downto 0);
    trunc_ln174_fu_473_p1 <= p_Result_s_fu_439_p2(16 - 1 downto 0);
    trunc_ln390_6_fu_284_p1 <= add_ln139_5_fu_264_p2(6 - 1 downto 0);
    trunc_ln390_fu_280_p1 <= ap_sig_allocacmp_localBits_idx_load(6 - 1 downto 0);
    trunc_ln_fu_228_p4 <= ap_sig_allocacmp_inValue_data_bitlen_sroa_0_0_391_in_in_in_load(18 downto 15);
    xor_ln390_fu_421_p2 <= (ap_const_lv32_FFFFFFFF xor and_ln390_fu_415_p2);
    zext_ln1044_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(localBits_V_5_fu_445_p4),32));
    zext_ln139_14_fu_246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_localBits_idx_load),9));
    zext_ln139_15_fu_250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln_fu_228_p4),8));
    zext_ln139_16_fu_260_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln139_fu_254_p2),10));
    zext_ln139_5_fu_242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_localBits_idx_load),32));
    zext_ln139_fu_238_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln_fu_228_p4),9));
    zext_ln259_fu_337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_354_fu_334_p1),32));
    zext_ln390_11_fu_372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln390_16_fu_351_p3),32));
    zext_ln390_12_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln390_6_fu_362_p2),32));
    zext_ln390_fu_368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln390_17_fu_356_p3),32));
end behav;
