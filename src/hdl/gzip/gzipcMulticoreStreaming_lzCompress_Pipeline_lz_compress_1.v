// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gzipcMulticoreStreaming_lzCompress_Pipeline_lz_compress_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        downStream_6_dout,
        downStream_6_num_data_valid,
        downStream_6_fifo_cap,
        downStream_6_empty_n,
        downStream_6_read,
        lclBufStream_dout,
        lclBufStream_empty_n,
        lclBufStream_read,
        lclBufStream_din,
        lclBufStream_full_n,
        lclBufStream_write,
        compressedStream_din,
        compressedStream_num_data_valid,
        compressedStream_fifo_cap,
        compressedStream_full_n,
        compressedStream_write,
        present_window_29_reload,
        present_window_28_reload,
        present_window_27_reload,
        present_window_26_reload,
        present_window_25_reload,
        inVal_data_V_reload,
        tmp_52_cast,
        dict_V_address0,
        dict_V_ce0,
        dict_V_we0,
        dict_V_d0,
        dict_V_address1,
        dict_V_ce1,
        dict_V_q1,
        mul,
        trunc_ln7,
        present_window_36_out,
        present_window_36_out_ap_vld,
        present_window_37_out,
        present_window_37_out_ap_vld,
        present_window_38_out,
        present_window_38_out_ap_vld,
        present_window_39_out,
        present_window_39_out_ap_vld,
        present_window_40_out,
        present_window_40_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [8:0] downStream_6_dout;
input  [5:0] downStream_6_num_data_valid;
input  [5:0] downStream_6_fifo_cap;
input   downStream_6_empty_n;
output   downStream_6_read;
input  [7:0] lclBufStream_dout;
input   lclBufStream_empty_n;
output   lclBufStream_read;
output  [7:0] lclBufStream_din;
input   lclBufStream_full_n;
output   lclBufStream_write;
output  [32:0] compressedStream_din;
input  [2:0] compressedStream_num_data_valid;
input  [2:0] compressedStream_fifo_cap;
input   compressedStream_full_n;
output   compressedStream_write;
input  [7:0] present_window_29_reload;
input  [7:0] present_window_28_reload;
input  [7:0] present_window_27_reload;
input  [7:0] present_window_26_reload;
input  [7:0] present_window_25_reload;
input  [7:0] inVal_data_V_reload;
input  [0:0] tmp_52_cast;
output  [11:0] dict_V_address0;
output   dict_V_ce0;
output   dict_V_we0;
output  [431:0] dict_V_d0;
output  [11:0] dict_V_address1;
output   dict_V_ce1;
input  [431:0] dict_V_q1;
input  [31:0] mul;
input  [23:0] trunc_ln7;
output  [7:0] present_window_36_out;
output   present_window_36_out_ap_vld;
output  [7:0] present_window_37_out;
output   present_window_37_out_ap_vld;
output  [7:0] present_window_38_out;
output   present_window_38_out_ap_vld;
output  [7:0] present_window_39_out;
output   present_window_39_out_ap_vld;
output  [7:0] present_window_40_out;
output   present_window_40_out_ap_vld;

reg ap_idle;
reg downStream_6_read;
reg lclBufStream_read;
reg lclBufStream_write;
reg compressedStream_write;
reg dict_V_ce0;
reg dict_V_we0;
reg dict_V_ce1;
reg present_window_36_out_ap_vld;
reg present_window_37_out_ap_vld;
reg present_window_38_out_ap_vld;
reg present_window_39_out_ap_vld;
reg present_window_40_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
reg   [0:0] ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] nextVal_strobe_V_reg_462;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
reg   [0:0] nextVal_strobe_V_reg_462_pp0_iter6_reg;
reg    ap_block_state8_pp0_stage0_iter7;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    lclBufStream_i_blk_n;
wire    ap_block_pp0_stage0;
reg    lclBufStream_o_blk_n;
reg    downStream_6_blk_n;
reg    compressedStream_blk_n;
reg   [0:0] nextVal_strobe_V_reg_462_pp0_iter1_reg;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] nextVal_strobe_V_reg_462_pp0_iter2_reg;
reg   [0:0] nextVal_strobe_V_reg_462_pp0_iter3_reg;
reg   [0:0] nextVal_strobe_V_reg_462_pp0_iter4_reg;
reg   [0:0] nextVal_strobe_V_reg_462_pp0_iter5_reg;
reg   [7:0] tmp_data_V_load_reg_2942;
reg   [0:0] tmp_reg_2947;
reg   [7:0] present_window_99_reg_2952;
reg   [7:0] present_window_99_reg_2952_pp0_iter2_reg;
reg   [7:0] present_window_99_reg_2952_pp0_iter3_reg;
reg   [7:0] present_window_99_reg_2952_pp0_iter4_reg;
reg   [7:0] present_window_99_reg_2952_pp0_iter5_reg;
reg   [7:0] present_window_98_reg_2964;
reg   [7:0] present_window_98_reg_2964_pp0_iter2_reg;
reg   [7:0] present_window_98_reg_2964_pp0_iter3_reg;
reg   [7:0] present_window_98_reg_2964_pp0_iter4_reg;
reg   [7:0] present_window_98_reg_2964_pp0_iter5_reg;
reg   [7:0] present_window_97_reg_2976;
reg   [7:0] present_window_97_reg_2976_pp0_iter2_reg;
reg   [7:0] present_window_97_reg_2976_pp0_iter3_reg;
reg   [7:0] present_window_97_reg_2976_pp0_iter4_reg;
reg   [7:0] present_window_97_reg_2976_pp0_iter5_reg;
reg   [7:0] present_window_reg_2988;
reg   [7:0] present_window_reg_2988_pp0_iter2_reg;
reg   [7:0] present_window_reg_2988_pp0_iter3_reg;
reg   [7:0] present_window_reg_2988_pp0_iter4_reg;
reg   [7:0] present_window_reg_2988_pp0_iter5_reg;
reg   [7:0] present_window_40_load_1_reg_3000;
reg   [7:0] present_window_40_load_1_reg_3000_pp0_iter2_reg;
reg   [7:0] present_window_40_load_1_reg_3000_pp0_iter3_reg;
reg   [7:0] present_window_40_load_1_reg_3000_pp0_iter4_reg;
reg   [7:0] present_window_40_load_1_reg_3000_pp0_iter5_reg;
reg   [7:0] present_window_40_load_1_reg_3000_pp0_iter6_reg;
reg   [7:0] tmp_184_reg_3012;
reg   [7:0] tmp_184_reg_3012_pp0_iter2_reg;
reg   [11:0] dict_V_addr_reg_3023;
reg   [11:0] dict_V_addr_reg_3023_pp0_iter2_reg;
wire   [359:0] trunc_ln1715_fu_645_p1;
reg   [359:0] trunc_ln1715_reg_3029;
reg   [23:0] compareIdx_reg_3034;
wire   [0:0] len_fu_663_p2;
reg   [0:0] len_reg_3039;
wire   [0:0] icmp_ln321_fu_678_p2;
reg   [0:0] icmp_ln321_reg_3046;
wire   [0:0] icmp_ln321_35_fu_693_p2;
reg   [0:0] icmp_ln321_35_reg_3051;
wire   [0:0] icmp_ln321_36_fu_708_p2;
reg   [0:0] icmp_ln321_36_reg_3056;
wire   [0:0] icmp_ln321_37_fu_723_p2;
reg   [0:0] icmp_ln321_37_reg_3061;
wire   [0:0] icmp_ln321_38_fu_738_p2;
reg   [0:0] icmp_ln321_38_reg_3066;
reg   [0:0] icmp_ln321_38_reg_3066_pp0_iter3_reg;
reg   [23:0] compareIdx_6_reg_3071;
wire   [0:0] len_474_fu_763_p2;
reg   [0:0] len_474_reg_3076;
wire   [0:0] icmp_ln321_40_fu_778_p2;
reg   [0:0] icmp_ln321_40_reg_3083;
wire   [0:0] icmp_ln321_41_fu_793_p2;
reg   [0:0] icmp_ln321_41_reg_3088;
wire   [0:0] icmp_ln321_42_fu_808_p2;
reg   [0:0] icmp_ln321_42_reg_3093;
wire   [0:0] icmp_ln321_43_fu_823_p2;
reg   [0:0] icmp_ln321_43_reg_3098;
wire   [0:0] icmp_ln321_44_fu_838_p2;
reg   [0:0] icmp_ln321_44_reg_3103;
reg   [0:0] icmp_ln321_44_reg_3103_pp0_iter3_reg;
reg   [23:0] compareIdx_7_reg_3108;
wire   [0:0] len_486_fu_863_p2;
reg   [0:0] len_486_reg_3113;
wire   [0:0] icmp_ln321_46_fu_878_p2;
reg   [0:0] icmp_ln321_46_reg_3120;
wire   [0:0] icmp_ln321_47_fu_893_p2;
reg   [0:0] icmp_ln321_47_reg_3125;
wire   [0:0] icmp_ln321_48_fu_908_p2;
reg   [0:0] icmp_ln321_48_reg_3130;
wire   [0:0] icmp_ln321_49_fu_923_p2;
reg   [0:0] icmp_ln321_49_reg_3135;
wire   [0:0] icmp_ln321_50_fu_938_p2;
reg   [0:0] icmp_ln321_50_reg_3140;
reg   [0:0] icmp_ln321_50_reg_3140_pp0_iter3_reg;
reg   [23:0] compareIdx_8_reg_3145;
wire   [0:0] len_498_fu_963_p2;
reg   [0:0] len_498_reg_3150;
wire   [0:0] icmp_ln321_52_fu_978_p2;
reg   [0:0] icmp_ln321_52_reg_3157;
wire   [0:0] icmp_ln321_53_fu_993_p2;
reg   [0:0] icmp_ln321_53_reg_3162;
wire   [0:0] icmp_ln321_54_fu_1008_p2;
reg   [0:0] icmp_ln321_54_reg_3167;
wire   [0:0] icmp_ln321_55_fu_1023_p2;
reg   [0:0] icmp_ln321_55_reg_3172;
wire   [0:0] icmp_ln321_56_fu_1038_p2;
reg   [0:0] icmp_ln321_56_reg_3177;
reg   [0:0] icmp_ln321_56_reg_3177_pp0_iter3_reg;
reg   [23:0] compareIdx_9_reg_3182;
wire   [0:0] len_510_fu_1063_p2;
reg   [0:0] len_510_reg_3187;
wire   [0:0] icmp_ln321_58_fu_1078_p2;
reg   [0:0] icmp_ln321_58_reg_3194;
wire   [0:0] icmp_ln321_59_fu_1093_p2;
reg   [0:0] icmp_ln321_59_reg_3199;
wire   [0:0] icmp_ln321_60_fu_1108_p2;
reg   [0:0] icmp_ln321_60_reg_3204;
wire   [0:0] icmp_ln321_61_fu_1123_p2;
reg   [0:0] icmp_ln321_61_reg_3209;
wire   [0:0] icmp_ln321_62_fu_1138_p2;
reg   [0:0] icmp_ln321_62_reg_3214;
reg   [0:0] icmp_ln321_62_reg_3214_pp0_iter3_reg;
reg   [23:0] compareIdx_31_reg_3219;
wire   [0:0] len_522_fu_1163_p2;
reg   [0:0] len_522_reg_3224;
wire   [0:0] icmp_ln321_64_fu_1178_p2;
reg   [0:0] icmp_ln321_64_reg_3231;
wire   [0:0] icmp_ln321_65_fu_1193_p2;
reg   [0:0] icmp_ln321_65_reg_3236;
wire   [0:0] icmp_ln321_66_fu_1208_p2;
reg   [0:0] icmp_ln321_66_reg_3241;
wire   [0:0] icmp_ln321_67_fu_1223_p2;
reg   [0:0] icmp_ln321_67_reg_3246;
wire   [0:0] icmp_ln321_68_fu_1238_p2;
reg   [0:0] icmp_ln321_68_reg_3251;
reg   [0:0] icmp_ln321_68_reg_3251_pp0_iter3_reg;
wire   [2:0] len_468_fu_1351_p3;
reg   [2:0] len_468_reg_3256;
wire   [0:0] done_178_fu_1359_p2;
reg   [0:0] done_178_reg_3261;
wire   [2:0] len_469_fu_1364_p2;
reg   [2:0] len_469_reg_3267;
wire   [0:0] icmp_ln327_18_fu_1370_p2;
reg   [0:0] icmp_ln327_18_reg_3272;
wire   [31:0] sub_ln327_fu_1376_p2;
reg   [31:0] sub_ln327_reg_3277;
wire   [0:0] icmp_ln327_81_fu_1392_p2;
reg   [0:0] icmp_ln327_81_reg_3282;
wire   [15:0] trunc_ln338_fu_1398_p1;
reg   [15:0] trunc_ln338_reg_3287;
reg   [15:0] trunc_ln338_reg_3287_pp0_iter4_reg;
wire   [0:0] icmp_ln329_fu_1402_p2;
reg   [0:0] icmp_ln329_reg_3292;
wire   [2:0] len_480_fu_1472_p3;
reg   [2:0] len_480_reg_3297;
wire   [0:0] done_183_fu_1480_p2;
reg   [0:0] done_183_reg_3302;
wire   [2:0] len_481_fu_1485_p2;
reg   [2:0] len_481_reg_3308;
wire   [0:0] icmp_ln327_21_fu_1491_p2;
reg   [0:0] icmp_ln327_21_reg_3313;
wire   [31:0] sub_ln327_6_fu_1497_p2;
reg   [31:0] sub_ln327_6_reg_3318;
wire   [0:0] icmp_ln327_82_fu_1513_p2;
reg   [0:0] icmp_ln327_82_reg_3323;
wire   [15:0] trunc_ln338_31_fu_1519_p1;
reg   [15:0] trunc_ln338_31_reg_3328;
reg   [15:0] trunc_ln338_31_reg_3328_pp0_iter4_reg;
wire   [0:0] icmp_ln329_31_fu_1523_p2;
reg   [0:0] icmp_ln329_31_reg_3333;
wire   [2:0] len_492_fu_1593_p3;
reg   [2:0] len_492_reg_3338;
wire   [0:0] done_188_fu_1601_p2;
reg   [0:0] done_188_reg_3344;
wire   [0:0] icmp_ln327_24_fu_1606_p2;
reg   [0:0] icmp_ln327_24_reg_3350;
wire   [31:0] sub_ln327_7_fu_1612_p2;
reg   [31:0] sub_ln327_7_reg_3355;
wire   [0:0] icmp_ln327_83_fu_1628_p2;
reg   [0:0] icmp_ln327_83_reg_3360;
wire   [15:0] trunc_ln338_32_fu_1634_p1;
reg   [15:0] trunc_ln338_32_reg_3365;
reg   [15:0] trunc_ln338_32_reg_3365_pp0_iter4_reg;
wire   [0:0] icmp_ln329_32_fu_1638_p2;
reg   [0:0] icmp_ln329_32_reg_3370;
wire   [2:0] len_504_fu_1708_p3;
reg   [2:0] len_504_reg_3375;
wire   [0:0] done_193_fu_1716_p2;
reg   [0:0] done_193_reg_3381;
wire   [0:0] icmp_ln327_27_fu_1721_p2;
reg   [0:0] icmp_ln327_27_reg_3387;
wire   [31:0] sub_ln327_8_fu_1727_p2;
reg   [31:0] sub_ln327_8_reg_3392;
wire   [0:0] icmp_ln327_84_fu_1743_p2;
reg   [0:0] icmp_ln327_84_reg_3397;
wire   [15:0] trunc_ln338_33_fu_1749_p1;
reg   [15:0] trunc_ln338_33_reg_3402;
reg   [15:0] trunc_ln338_33_reg_3402_pp0_iter4_reg;
reg   [15:0] trunc_ln338_33_reg_3402_pp0_iter5_reg;
wire   [0:0] icmp_ln329_33_fu_1753_p2;
reg   [0:0] icmp_ln329_33_reg_3407;
wire   [2:0] len_516_fu_1823_p3;
reg   [2:0] len_516_reg_3412;
wire   [0:0] done_198_fu_1831_p2;
reg   [0:0] done_198_reg_3418;
wire   [0:0] icmp_ln327_30_fu_1836_p2;
reg   [0:0] icmp_ln327_30_reg_3424;
wire   [31:0] sub_ln327_9_fu_1842_p2;
reg   [31:0] sub_ln327_9_reg_3429;
wire   [0:0] icmp_ln327_85_fu_1858_p2;
reg   [0:0] icmp_ln327_85_reg_3434;
wire   [15:0] trunc_ln338_34_fu_1864_p1;
reg   [15:0] trunc_ln338_34_reg_3439;
reg   [15:0] trunc_ln338_34_reg_3439_pp0_iter4_reg;
reg   [15:0] trunc_ln338_34_reg_3439_pp0_iter5_reg;
wire   [0:0] icmp_ln329_34_fu_1868_p2;
reg   [0:0] icmp_ln329_34_reg_3444;
wire   [2:0] len_528_fu_1938_p3;
reg   [2:0] len_528_reg_3449;
wire   [0:0] done_203_fu_1946_p2;
reg   [0:0] done_203_reg_3455;
wire   [0:0] icmp_ln327_33_fu_1951_p2;
reg   [0:0] icmp_ln327_33_reg_3461;
wire   [31:0] sub_ln327_10_fu_1957_p2;
reg   [31:0] sub_ln327_10_reg_3466;
wire   [0:0] icmp_ln327_86_fu_1973_p2;
reg   [0:0] icmp_ln327_86_reg_3471;
wire   [15:0] trunc_ln338_35_fu_1979_p1;
reg   [15:0] trunc_ln338_35_reg_3476;
reg   [15:0] trunc_ln338_35_reg_3476_pp0_iter4_reg;
reg   [15:0] trunc_ln338_35_reg_3476_pp0_iter5_reg;
wire   [0:0] icmp_ln329_35_fu_1983_p2;
reg   [0:0] icmp_ln329_35_reg_3481;
wire   [2:0] len_534_fu_2110_p3;
reg   [2:0] len_534_reg_3486;
wire   [2:0] len_535_fu_2229_p3;
reg   [2:0] len_535_reg_3493;
wire   [2:0] len_496_fu_2258_p3;
reg   [2:0] len_496_reg_3499;
wire   [0:0] icmp_ln330_16_fu_2288_p2;
reg   [0:0] icmp_ln330_16_reg_3505;
wire   [0:0] and_ln328_34_fu_2310_p2;
reg   [0:0] and_ln328_34_reg_3510;
wire   [2:0] len_508_fu_2337_p3;
reg   [2:0] len_508_reg_3516;
wire   [0:0] icmp_ln330_18_fu_2367_p2;
reg   [0:0] icmp_ln330_18_reg_3522;
wire   [0:0] and_ln328_38_fu_2389_p2;
reg   [0:0] and_ln328_38_reg_3527;
wire   [2:0] len_520_fu_2416_p3;
reg   [2:0] len_520_reg_3533;
wire   [0:0] icmp_ln330_20_fu_2446_p2;
reg   [0:0] icmp_ln330_20_reg_3539;
wire   [0:0] and_ln328_42_fu_2468_p2;
reg   [0:0] and_ln328_42_reg_3544;
wire   [2:0] len_532_fu_2495_p3;
reg   [2:0] len_532_reg_3550;
wire   [0:0] icmp_ln330_22_fu_2525_p2;
reg   [0:0] icmp_ln330_22_reg_3556;
wire   [0:0] and_ln328_46_fu_2547_p2;
reg   [0:0] and_ln328_46_reg_3561;
wire   [15:0] match_offset_53_fu_2654_p3;
reg   [15:0] match_offset_53_reg_3567;
wire   [0:0] icmp_ln336_8_fu_2703_p2;
reg   [0:0] icmp_ln336_8_reg_3572;
wire   [2:0] match_length_66_fu_2709_p3;
reg   [2:0] match_length_66_reg_3577;
wire   [2:0] len_538_fu_2751_p3;
reg   [2:0] len_538_reg_3583;
wire   [2:0] len_539_fu_2792_p3;
reg   [2:0] len_539_reg_3589;
wire   [2:0] match_length_70_fu_2838_p3;
reg   [2:0] match_length_70_reg_3595;
wire   [15:0] select_ln336_10_fu_2850_p3;
reg   [15:0] select_ln336_10_reg_3600;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_init;
wire   [63:0] zext_ln301_fu_615_p1;
reg   [31:0] iIdx_1_fu_302;
wire   [31:0] iIdx_fu_1988_p2;
reg   [7:0] tmp_data_V_fu_306;
wire   [7:0] tmp_data_V_46_fu_511_p1;
reg   [7:0] ap_sig_allocacmp_tmp_data_V_load;
reg   [7:0] present_window_40_fu_310;
reg   [7:0] present_window_39_fu_314;
reg   [7:0] present_window_38_fu_318;
reg   [7:0] present_window_37_fu_322;
reg   [7:0] present_window_36_fu_326;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] shl_ln2_fu_571_p3;
wire   [9:0] shl_ln293_4_fu_563_p3;
wire   [9:0] zext_ln293_fu_551_p1;
wire   [9:0] xor_ln293_fu_583_p2;
wire   [10:0] shl_ln293_3_fu_555_p3;
wire   [10:0] zext_ln293_4_fu_589_p1;
wire   [10:0] xor_ln293_2_fu_593_p2;
wire   [10:0] zext_ln293_3_fu_579_p1;
wire   [10:0] xor_ln294_fu_599_p2;
wire   [11:0] zext_ln294_fu_605_p1;
wire   [11:0] shl_ln_fu_543_p3;
wire   [11:0] hash_fu_609_p2;
wire   [7:0] trunc_ln714_fu_659_p1;
wire   [7:0] tmp_45_fu_668_p4;
wire   [7:0] tmp_46_fu_683_p4;
wire   [7:0] tmp_47_fu_698_p4;
wire   [7:0] tmp_48_fu_713_p4;
wire   [7:0] tmp_49_fu_728_p4;
wire   [7:0] tmp_50_fu_753_p4;
wire   [7:0] tmp_51_fu_768_p4;
wire   [7:0] tmp_52_fu_783_p4;
wire   [7:0] tmp_53_fu_798_p4;
wire   [7:0] tmp_54_fu_813_p4;
wire   [7:0] tmp_55_fu_828_p4;
wire   [7:0] tmp_56_fu_853_p4;
wire   [7:0] tmp_57_fu_868_p4;
wire   [7:0] tmp_58_fu_883_p4;
wire   [7:0] tmp_59_fu_898_p4;
wire   [7:0] tmp_60_fu_913_p4;
wire   [7:0] tmp_63_fu_928_p4;
wire   [7:0] tmp_67_fu_953_p4;
wire   [7:0] tmp_68_fu_968_p4;
wire   [7:0] tmp_69_fu_983_p4;
wire   [7:0] tmp_70_fu_998_p4;
wire   [7:0] tmp_71_fu_1013_p4;
wire   [7:0] tmp_72_fu_1028_p4;
wire   [7:0] tmp_73_fu_1053_p4;
wire   [7:0] tmp_74_fu_1068_p4;
wire   [7:0] tmp_75_fu_1083_p4;
wire   [7:0] tmp_76_fu_1098_p4;
wire   [7:0] tmp_77_fu_1113_p4;
wire   [7:0] tmp_78_fu_1128_p4;
wire   [7:0] tmp_79_fu_1153_p4;
wire   [7:0] tmp_80_fu_1168_p4;
wire   [7:0] tmp_81_fu_1183_p4;
wire   [7:0] tmp_82_fu_1198_p4;
wire   [7:0] tmp_83_fu_1213_p4;
wire   [7:0] tmp_84_fu_1228_p4;
wire   [31:0] add_ln276_fu_1250_p2;
wire   [23:0] trunc_ln276_fu_1246_p1;
wire   [23:0] add_ln392_2_fu_1261_p2;
wire   [23:0] add_ln392_fu_1267_p2;
wire   [0:0] done_fu_1292_p2;
wire   [0:0] done_175_fu_1297_p2;
wire   [1:0] zext_ln321_fu_1289_p1;
wire   [1:0] len_463_fu_1302_p3;
wire   [1:0] len_464_fu_1309_p3;
wire   [0:0] done_176_fu_1317_p2;
wire   [1:0] len_465_fu_1322_p2;
wire   [1:0] len_466_fu_1328_p3;
wire   [2:0] zext_ln317_fu_1336_p1;
wire   [0:0] done_177_fu_1340_p2;
wire   [2:0] len_467_fu_1345_p2;
wire   [31:0] zext_ln319_fu_1286_p1;
wire   [31:0] currIdx_fu_1256_p2;
wire   [16:0] tmp_178_fu_1382_p4;
wire   [0:0] done_179_fu_1413_p2;
wire   [0:0] done_180_fu_1418_p2;
wire   [1:0] zext_ln321_6_fu_1410_p1;
wire   [1:0] len_475_fu_1423_p3;
wire   [1:0] len_476_fu_1430_p3;
wire   [0:0] done_181_fu_1438_p2;
wire   [1:0] len_477_fu_1443_p2;
wire   [1:0] len_478_fu_1449_p3;
wire   [2:0] zext_ln317_6_fu_1457_p1;
wire   [0:0] done_182_fu_1461_p2;
wire   [2:0] len_479_fu_1466_p2;
wire   [31:0] zext_ln319_6_fu_1407_p1;
wire   [16:0] tmp_179_fu_1503_p4;
wire   [0:0] done_184_fu_1534_p2;
wire   [0:0] done_185_fu_1539_p2;
wire   [1:0] zext_ln321_7_fu_1531_p1;
wire   [1:0] len_487_fu_1544_p3;
wire   [1:0] len_488_fu_1551_p3;
wire   [0:0] done_186_fu_1559_p2;
wire   [1:0] len_489_fu_1564_p2;
wire   [1:0] len_490_fu_1570_p3;
wire   [2:0] zext_ln317_7_fu_1578_p1;
wire   [0:0] done_187_fu_1582_p2;
wire   [2:0] len_491_fu_1587_p2;
wire   [31:0] zext_ln319_7_fu_1528_p1;
wire   [16:0] tmp_180_fu_1618_p4;
wire   [0:0] done_189_fu_1649_p2;
wire   [0:0] done_190_fu_1654_p2;
wire   [1:0] zext_ln321_8_fu_1646_p1;
wire   [1:0] len_499_fu_1659_p3;
wire   [1:0] len_500_fu_1666_p3;
wire   [0:0] done_191_fu_1674_p2;
wire   [1:0] len_501_fu_1679_p2;
wire   [1:0] len_502_fu_1685_p3;
wire   [2:0] zext_ln317_8_fu_1693_p1;
wire   [0:0] done_192_fu_1697_p2;
wire   [2:0] len_503_fu_1702_p2;
wire   [31:0] zext_ln319_8_fu_1643_p1;
wire   [16:0] tmp_181_fu_1733_p4;
wire   [0:0] done_194_fu_1764_p2;
wire   [0:0] done_195_fu_1769_p2;
wire   [1:0] zext_ln321_9_fu_1761_p1;
wire   [1:0] len_511_fu_1774_p3;
wire   [1:0] len_512_fu_1781_p3;
wire   [0:0] done_196_fu_1789_p2;
wire   [1:0] len_513_fu_1794_p2;
wire   [1:0] len_514_fu_1800_p3;
wire   [2:0] zext_ln317_9_fu_1808_p1;
wire   [0:0] done_197_fu_1812_p2;
wire   [2:0] len_515_fu_1817_p2;
wire   [31:0] zext_ln319_9_fu_1758_p1;
wire   [16:0] tmp_182_fu_1848_p4;
wire   [0:0] done_199_fu_1879_p2;
wire   [0:0] done_200_fu_1884_p2;
wire   [1:0] zext_ln321_10_fu_1876_p1;
wire   [1:0] len_523_fu_1889_p3;
wire   [1:0] len_524_fu_1896_p3;
wire   [0:0] done_201_fu_1904_p2;
wire   [1:0] len_525_fu_1909_p2;
wire   [1:0] len_526_fu_1915_p3;
wire   [2:0] zext_ln317_10_fu_1923_p1;
wire   [0:0] done_202_fu_1927_p2;
wire   [2:0] len_527_fu_1932_p2;
wire   [31:0] zext_ln319_10_fu_1873_p1;
wire   [16:0] tmp_183_fu_1963_p4;
wire   [2:0] len_470_fu_1999_p3;
wire   [0:0] or_ln321_fu_2004_p2;
wire   [2:0] len_471_fu_2008_p2;
wire   [2:0] len_472_fu_2014_p3;
wire   [31:0] match_offset_fu_2028_p2;
wire   [0:0] xor_ln329_fu_2039_p2;
wire   [0:0] icmp_ln328_fu_2033_p2;
wire   [0:0] and_ln328_24_fu_2060_p2;
wire   [0:0] icmp_ln327_fu_2022_p2;
wire   [0:0] and_ln328_25_fu_2066_p2;
wire   [0:0] and_ln328_fu_2056_p2;
wire   [0:0] and_ln328_26_fu_2072_p2;
wire   [0:0] icmp_ln330_fu_2044_p2;
wire   [0:0] and_ln330_fu_2078_p2;
wire   [0:0] icmp_ln330_12_fu_2050_p2;
wire   [0:0] and_ln330_18_fu_2084_p2;
wire   [0:0] xor_ln330_fu_2098_p2;
wire   [0:0] and_ln330_19_fu_2104_p2;
wire   [2:0] select_ln330_fu_2090_p3;
wire   [2:0] len_482_fu_2118_p3;
wire   [0:0] or_ln321_30_fu_2123_p2;
wire   [2:0] len_483_fu_2127_p2;
wire   [2:0] len_484_fu_2133_p3;
wire   [31:0] match_offset_50_fu_2147_p2;
wire   [0:0] xor_ln329_31_fu_2158_p2;
wire   [0:0] icmp_ln328_6_fu_2152_p2;
wire   [0:0] and_ln328_28_fu_2179_p2;
wire   [0:0] icmp_ln327_20_fu_2141_p2;
wire   [0:0] and_ln328_29_fu_2185_p2;
wire   [0:0] and_ln328_27_fu_2175_p2;
wire   [0:0] and_ln328_30_fu_2191_p2;
wire   [0:0] icmp_ln330_13_fu_2163_p2;
wire   [0:0] and_ln330_20_fu_2197_p2;
wire   [0:0] icmp_ln330_14_fu_2169_p2;
wire   [0:0] and_ln330_21_fu_2203_p2;
wire   [0:0] xor_ln330_6_fu_2217_p2;
wire   [0:0] and_ln330_22_fu_2223_p2;
wire   [2:0] select_ln330_68_fu_2209_p3;
wire   [2:0] len_493_fu_2237_p2;
wire   [2:0] len_494_fu_2242_p3;
wire   [0:0] or_ln321_35_fu_2248_p2;
wire   [2:0] len_495_fu_2252_p2;
wire   [31:0] match_offset_52_fu_2272_p2;
wire   [0:0] xor_ln329_32_fu_2283_p2;
wire   [0:0] icmp_ln328_7_fu_2277_p2;
wire   [0:0] and_ln328_32_fu_2298_p2;
wire   [0:0] icmp_ln327_23_fu_2266_p2;
wire   [0:0] and_ln328_33_fu_2304_p2;
wire   [0:0] and_ln328_31_fu_2294_p2;
wire   [2:0] len_505_fu_2316_p2;
wire   [2:0] len_506_fu_2321_p3;
wire   [0:0] or_ln321_40_fu_2327_p2;
wire   [2:0] len_507_fu_2331_p2;
wire   [31:0] match_offset_54_fu_2351_p2;
wire   [0:0] xor_ln329_33_fu_2362_p2;
wire   [0:0] icmp_ln328_8_fu_2356_p2;
wire   [0:0] and_ln328_36_fu_2377_p2;
wire   [0:0] icmp_ln327_26_fu_2345_p2;
wire   [0:0] and_ln328_37_fu_2383_p2;
wire   [0:0] and_ln328_35_fu_2373_p2;
wire   [2:0] len_517_fu_2395_p2;
wire   [2:0] len_518_fu_2400_p3;
wire   [0:0] or_ln321_45_fu_2406_p2;
wire   [2:0] len_519_fu_2410_p2;
wire   [31:0] match_offset_55_fu_2430_p2;
wire   [0:0] xor_ln329_34_fu_2441_p2;
wire   [0:0] icmp_ln328_9_fu_2435_p2;
wire   [0:0] and_ln328_40_fu_2456_p2;
wire   [0:0] icmp_ln327_29_fu_2424_p2;
wire   [0:0] and_ln328_41_fu_2462_p2;
wire   [0:0] and_ln328_39_fu_2452_p2;
wire   [2:0] len_529_fu_2474_p2;
wire   [2:0] len_530_fu_2479_p3;
wire   [0:0] or_ln321_50_fu_2485_p2;
wire   [2:0] len_531_fu_2489_p2;
wire   [31:0] match_offset_56_fu_2509_p2;
wire   [0:0] xor_ln329_35_fu_2520_p2;
wire   [0:0] icmp_ln328_10_fu_2514_p2;
wire   [0:0] and_ln328_44_fu_2535_p2;
wire   [0:0] icmp_ln327_32_fu_2503_p2;
wire   [0:0] and_ln328_45_fu_2541_p2;
wire   [0:0] and_ln328_43_fu_2531_p2;
wire   [0:0] icmp_ln336_fu_2558_p2;
wire   [15:0] add_ln327_fu_2553_p2;
wire   [0:0] icmp_ln336_6_fu_2576_p2;
wire   [15:0] add_ln327_3_fu_2571_p2;
wire   [15:0] match_offset_49_fu_2563_p3;
wire   [0:0] icmp_ln330_15_fu_2599_p2;
wire   [0:0] and_ln330_23_fu_2604_p2;
wire   [0:0] and_ln330_24_fu_2609_p2;
wire   [0:0] xor_ln330_7_fu_2622_p2;
wire   [0:0] and_ln330_25_fu_2628_p2;
wire   [2:0] select_ln330_70_fu_2614_p3;
wire   [2:0] len_536_fu_2633_p3;
wire   [2:0] match_length_62_fu_2580_p3;
wire   [0:0] icmp_ln336_7_fu_2640_p2;
wire   [15:0] add_ln327_4_fu_2594_p2;
wire   [15:0] match_offset_51_fu_2586_p3;
wire   [0:0] icmp_ln330_17_fu_2662_p2;
wire   [0:0] and_ln330_26_fu_2667_p2;
wire   [0:0] and_ln330_27_fu_2672_p2;
wire   [0:0] xor_ln330_8_fu_2685_p2;
wire   [0:0] and_ln330_28_fu_2691_p2;
wire   [2:0] select_ln330_72_fu_2677_p3;
wire   [2:0] len_537_fu_2696_p3;
wire   [2:0] match_length_64_fu_2646_p3;
wire   [0:0] icmp_ln330_19_fu_2717_p2;
wire   [0:0] and_ln330_29_fu_2722_p2;
wire   [0:0] and_ln330_30_fu_2727_p2;
wire   [0:0] xor_ln330_9_fu_2740_p2;
wire   [0:0] and_ln330_31_fu_2746_p2;
wire   [2:0] select_ln330_74_fu_2732_p3;
wire   [0:0] icmp_ln330_21_fu_2758_p2;
wire   [0:0] and_ln330_32_fu_2763_p2;
wire   [0:0] and_ln330_33_fu_2768_p2;
wire   [0:0] xor_ln330_10_fu_2781_p2;
wire   [0:0] and_ln330_34_fu_2787_p2;
wire   [2:0] select_ln330_76_fu_2773_p3;
wire   [15:0] add_ln336_3_fu_2799_p2;
wire   [0:0] icmp_ln336_9_fu_2810_p2;
wire   [15:0] add_ln336_fu_2820_p2;
wire   [15:0] select_ln336_8_fu_2804_p3;
wire   [2:0] match_length_68_fu_2814_p3;
wire   [0:0] icmp_ln336_10_fu_2833_p2;
wire   [15:0] add_ln336_2_fu_2845_p2;
wire   [15:0] select_ln336_9_fu_2825_p3;
wire   [7:0] zext_ln336_fu_2858_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_68;
reg    ap_enable_state2_pp0_iter1_stage0;
reg    ap_enable_operation_74;
reg    ap_enable_state3_pp0_iter2_stage0;
reg    ap_enable_operation_161;
reg    ap_enable_state4_pp0_iter3_stage0;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_2190;
reg    ap_condition_2195;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_done_reg = 1'b0;
end

gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            iIdx_1_fu_302 <= 32'd5;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (nextVal_strobe_V_reg_462_pp0_iter2_reg == 1'd1))) begin
            iIdx_1_fu_302 <= iIdx_fu_1988_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_2195)) begin
            nextVal_strobe_V_reg_462 <= tmp_reg_2947;
        end else if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            nextVal_strobe_V_reg_462 <= tmp_52_cast;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            present_window_36_fu_326 <= present_window_29_reload;
        end else if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            present_window_36_fu_326 <= lclBufStream_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            present_window_37_fu_322 <= present_window_28_reload;
        end else if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            present_window_37_fu_322 <= present_window_36_fu_326;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            present_window_38_fu_318 <= present_window_27_reload;
        end else if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            present_window_38_fu_318 <= present_window_37_fu_322;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            present_window_39_fu_314 <= present_window_26_reload;
        end else if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            present_window_39_fu_314 <= present_window_38_fu_318;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            present_window_40_fu_310 <= present_window_25_reload;
        end else if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            present_window_40_fu_310 <= present_window_39_fu_314;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (ap_start_int == 1'b1))) begin
            tmp_data_V_fu_306 <= tmp_data_V_46_fu_511_p1;
        end else if ((ap_loop_init == 1'b1)) begin
            tmp_data_V_fu_306 <= inVal_data_V_reload;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln328_34_reg_3510 <= and_ln328_34_fu_2310_p2;
        and_ln328_38_reg_3527 <= and_ln328_38_fu_2389_p2;
        and_ln328_42_reg_3544 <= and_ln328_42_fu_2468_p2;
        and_ln328_46_reg_3561 <= and_ln328_46_fu_2547_p2;
        icmp_ln330_16_reg_3505 <= icmp_ln330_16_fu_2288_p2;
        icmp_ln330_18_reg_3522 <= icmp_ln330_18_fu_2367_p2;
        icmp_ln330_20_reg_3539 <= icmp_ln330_20_fu_2446_p2;
        icmp_ln330_22_reg_3556 <= icmp_ln330_22_fu_2525_p2;
        len_496_reg_3499 <= len_496_fu_2258_p3;
        len_508_reg_3516 <= len_508_fu_2337_p3;
        len_520_reg_3533 <= len_520_fu_2416_p3;
        len_532_reg_3550 <= len_532_fu_2495_p3;
        len_534_reg_3486 <= len_534_fu_2110_p3;
        len_535_reg_3493 <= len_535_fu_2229_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        nextVal_strobe_V_reg_462_pp0_iter1_reg <= nextVal_strobe_V_reg_462;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        dict_V_addr_reg_3023_pp0_iter2_reg <= dict_V_addr_reg_3023;
        icmp_ln321_38_reg_3066_pp0_iter3_reg <= icmp_ln321_38_reg_3066;
        icmp_ln321_44_reg_3103_pp0_iter3_reg <= icmp_ln321_44_reg_3103;
        icmp_ln321_50_reg_3140_pp0_iter3_reg <= icmp_ln321_50_reg_3140;
        icmp_ln321_56_reg_3177_pp0_iter3_reg <= icmp_ln321_56_reg_3177;
        icmp_ln321_62_reg_3214_pp0_iter3_reg <= icmp_ln321_62_reg_3214;
        icmp_ln321_68_reg_3251_pp0_iter3_reg <= icmp_ln321_68_reg_3251;
        nextVal_strobe_V_reg_462_pp0_iter2_reg <= nextVal_strobe_V_reg_462_pp0_iter1_reg;
        nextVal_strobe_V_reg_462_pp0_iter3_reg <= nextVal_strobe_V_reg_462_pp0_iter2_reg;
        nextVal_strobe_V_reg_462_pp0_iter4_reg <= nextVal_strobe_V_reg_462_pp0_iter3_reg;
        nextVal_strobe_V_reg_462_pp0_iter5_reg <= nextVal_strobe_V_reg_462_pp0_iter4_reg;
        nextVal_strobe_V_reg_462_pp0_iter6_reg <= nextVal_strobe_V_reg_462_pp0_iter5_reg;
        present_window_40_load_1_reg_3000_pp0_iter2_reg <= present_window_40_load_1_reg_3000;
        present_window_40_load_1_reg_3000_pp0_iter3_reg <= present_window_40_load_1_reg_3000_pp0_iter2_reg;
        present_window_40_load_1_reg_3000_pp0_iter4_reg <= present_window_40_load_1_reg_3000_pp0_iter3_reg;
        present_window_40_load_1_reg_3000_pp0_iter5_reg <= present_window_40_load_1_reg_3000_pp0_iter4_reg;
        present_window_40_load_1_reg_3000_pp0_iter6_reg <= present_window_40_load_1_reg_3000_pp0_iter5_reg;
        present_window_97_reg_2976_pp0_iter2_reg <= present_window_97_reg_2976;
        present_window_97_reg_2976_pp0_iter3_reg <= present_window_97_reg_2976_pp0_iter2_reg;
        present_window_97_reg_2976_pp0_iter4_reg <= present_window_97_reg_2976_pp0_iter3_reg;
        present_window_97_reg_2976_pp0_iter5_reg <= present_window_97_reg_2976_pp0_iter4_reg;
        present_window_98_reg_2964_pp0_iter2_reg <= present_window_98_reg_2964;
        present_window_98_reg_2964_pp0_iter3_reg <= present_window_98_reg_2964_pp0_iter2_reg;
        present_window_98_reg_2964_pp0_iter4_reg <= present_window_98_reg_2964_pp0_iter3_reg;
        present_window_98_reg_2964_pp0_iter5_reg <= present_window_98_reg_2964_pp0_iter4_reg;
        present_window_99_reg_2952_pp0_iter2_reg <= present_window_99_reg_2952;
        present_window_99_reg_2952_pp0_iter3_reg <= present_window_99_reg_2952_pp0_iter2_reg;
        present_window_99_reg_2952_pp0_iter4_reg <= present_window_99_reg_2952_pp0_iter3_reg;
        present_window_99_reg_2952_pp0_iter5_reg <= present_window_99_reg_2952_pp0_iter4_reg;
        present_window_reg_2988_pp0_iter2_reg <= present_window_reg_2988;
        present_window_reg_2988_pp0_iter3_reg <= present_window_reg_2988_pp0_iter2_reg;
        present_window_reg_2988_pp0_iter4_reg <= present_window_reg_2988_pp0_iter3_reg;
        present_window_reg_2988_pp0_iter5_reg <= present_window_reg_2988_pp0_iter4_reg;
        tmp_184_reg_3012_pp0_iter2_reg <= tmp_184_reg_3012;
        trunc_ln338_31_reg_3328_pp0_iter4_reg <= trunc_ln338_31_reg_3328;
        trunc_ln338_32_reg_3365_pp0_iter4_reg <= trunc_ln338_32_reg_3365;
        trunc_ln338_33_reg_3402_pp0_iter4_reg <= trunc_ln338_33_reg_3402;
        trunc_ln338_33_reg_3402_pp0_iter5_reg <= trunc_ln338_33_reg_3402_pp0_iter4_reg;
        trunc_ln338_34_reg_3439_pp0_iter4_reg <= trunc_ln338_34_reg_3439;
        trunc_ln338_34_reg_3439_pp0_iter5_reg <= trunc_ln338_34_reg_3439_pp0_iter4_reg;
        trunc_ln338_35_reg_3476_pp0_iter4_reg <= trunc_ln338_35_reg_3476;
        trunc_ln338_35_reg_3476_pp0_iter5_reg <= trunc_ln338_35_reg_3476_pp0_iter4_reg;
        trunc_ln338_reg_3287_pp0_iter4_reg <= trunc_ln338_reg_3287;
    end
end

always @ (posedge ap_clk) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        compareIdx_31_reg_3219 <= {{dict_V_q1[431:408]}};
        compareIdx_6_reg_3071 <= {{dict_V_q1[143:120]}};
        compareIdx_7_reg_3108 <= {{dict_V_q1[215:192]}};
        compareIdx_8_reg_3145 <= {{dict_V_q1[287:264]}};
        compareIdx_9_reg_3182 <= {{dict_V_q1[359:336]}};
        compareIdx_reg_3034 <= {{dict_V_q1[71:48]}};
        icmp_ln321_35_reg_3051 <= icmp_ln321_35_fu_693_p2;
        icmp_ln321_36_reg_3056 <= icmp_ln321_36_fu_708_p2;
        icmp_ln321_37_reg_3061 <= icmp_ln321_37_fu_723_p2;
        icmp_ln321_38_reg_3066 <= icmp_ln321_38_fu_738_p2;
        icmp_ln321_40_reg_3083 <= icmp_ln321_40_fu_778_p2;
        icmp_ln321_41_reg_3088 <= icmp_ln321_41_fu_793_p2;
        icmp_ln321_42_reg_3093 <= icmp_ln321_42_fu_808_p2;
        icmp_ln321_43_reg_3098 <= icmp_ln321_43_fu_823_p2;
        icmp_ln321_44_reg_3103 <= icmp_ln321_44_fu_838_p2;
        icmp_ln321_46_reg_3120 <= icmp_ln321_46_fu_878_p2;
        icmp_ln321_47_reg_3125 <= icmp_ln321_47_fu_893_p2;
        icmp_ln321_48_reg_3130 <= icmp_ln321_48_fu_908_p2;
        icmp_ln321_49_reg_3135 <= icmp_ln321_49_fu_923_p2;
        icmp_ln321_50_reg_3140 <= icmp_ln321_50_fu_938_p2;
        icmp_ln321_52_reg_3157 <= icmp_ln321_52_fu_978_p2;
        icmp_ln321_53_reg_3162 <= icmp_ln321_53_fu_993_p2;
        icmp_ln321_54_reg_3167 <= icmp_ln321_54_fu_1008_p2;
        icmp_ln321_55_reg_3172 <= icmp_ln321_55_fu_1023_p2;
        icmp_ln321_56_reg_3177 <= icmp_ln321_56_fu_1038_p2;
        icmp_ln321_58_reg_3194 <= icmp_ln321_58_fu_1078_p2;
        icmp_ln321_59_reg_3199 <= icmp_ln321_59_fu_1093_p2;
        icmp_ln321_60_reg_3204 <= icmp_ln321_60_fu_1108_p2;
        icmp_ln321_61_reg_3209 <= icmp_ln321_61_fu_1123_p2;
        icmp_ln321_62_reg_3214 <= icmp_ln321_62_fu_1138_p2;
        icmp_ln321_64_reg_3231 <= icmp_ln321_64_fu_1178_p2;
        icmp_ln321_65_reg_3236 <= icmp_ln321_65_fu_1193_p2;
        icmp_ln321_66_reg_3241 <= icmp_ln321_66_fu_1208_p2;
        icmp_ln321_67_reg_3246 <= icmp_ln321_67_fu_1223_p2;
        icmp_ln321_68_reg_3251 <= icmp_ln321_68_fu_1238_p2;
        icmp_ln321_reg_3046 <= icmp_ln321_fu_678_p2;
        len_474_reg_3076 <= len_474_fu_763_p2;
        len_486_reg_3113 <= len_486_fu_863_p2;
        len_498_reg_3150 <= len_498_fu_963_p2;
        len_510_reg_3187 <= len_510_fu_1063_p2;
        len_522_reg_3224 <= len_522_fu_1163_p2;
        len_reg_3039 <= len_fu_663_p2;
        trunc_ln1715_reg_3029 <= trunc_ln1715_fu_645_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((nextVal_strobe_V_reg_462 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dict_V_addr_reg_3023 <= zext_ln301_fu_615_p1;
        present_window_40_load_1_reg_3000 <= present_window_40_fu_310;
        tmp_184_reg_3012 <= lclBufStream_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        done_178_reg_3261 <= done_178_fu_1359_p2;
        done_183_reg_3302 <= done_183_fu_1480_p2;
        done_188_reg_3344 <= done_188_fu_1601_p2;
        done_193_reg_3381 <= done_193_fu_1716_p2;
        done_198_reg_3418 <= done_198_fu_1831_p2;
        done_203_reg_3455 <= done_203_fu_1946_p2;
        icmp_ln327_18_reg_3272 <= icmp_ln327_18_fu_1370_p2;
        icmp_ln327_21_reg_3313 <= icmp_ln327_21_fu_1491_p2;
        icmp_ln327_24_reg_3350 <= icmp_ln327_24_fu_1606_p2;
        icmp_ln327_27_reg_3387 <= icmp_ln327_27_fu_1721_p2;
        icmp_ln327_30_reg_3424 <= icmp_ln327_30_fu_1836_p2;
        icmp_ln327_33_reg_3461 <= icmp_ln327_33_fu_1951_p2;
        icmp_ln327_81_reg_3282 <= icmp_ln327_81_fu_1392_p2;
        icmp_ln327_82_reg_3323 <= icmp_ln327_82_fu_1513_p2;
        icmp_ln327_83_reg_3360 <= icmp_ln327_83_fu_1628_p2;
        icmp_ln327_84_reg_3397 <= icmp_ln327_84_fu_1743_p2;
        icmp_ln327_85_reg_3434 <= icmp_ln327_85_fu_1858_p2;
        icmp_ln327_86_reg_3471 <= icmp_ln327_86_fu_1973_p2;
        icmp_ln329_31_reg_3333 <= icmp_ln329_31_fu_1523_p2;
        icmp_ln329_32_reg_3370 <= icmp_ln329_32_fu_1638_p2;
        icmp_ln329_33_reg_3407 <= icmp_ln329_33_fu_1753_p2;
        icmp_ln329_34_reg_3444 <= icmp_ln329_34_fu_1868_p2;
        icmp_ln329_35_reg_3481 <= icmp_ln329_35_fu_1983_p2;
        icmp_ln329_reg_3292 <= icmp_ln329_fu_1402_p2;
        len_468_reg_3256 <= len_468_fu_1351_p3;
        len_469_reg_3267 <= len_469_fu_1364_p2;
        len_480_reg_3297 <= len_480_fu_1472_p3;
        len_481_reg_3308 <= len_481_fu_1485_p2;
        len_492_reg_3338 <= len_492_fu_1593_p3;
        len_504_reg_3375 <= len_504_fu_1708_p3;
        len_516_reg_3412 <= len_516_fu_1823_p3;
        len_528_reg_3449 <= len_528_fu_1938_p3;
        sub_ln327_10_reg_3466 <= sub_ln327_10_fu_1957_p2;
        sub_ln327_6_reg_3318 <= sub_ln327_6_fu_1497_p2;
        sub_ln327_7_reg_3355 <= sub_ln327_7_fu_1612_p2;
        sub_ln327_8_reg_3392 <= sub_ln327_8_fu_1727_p2;
        sub_ln327_9_reg_3429 <= sub_ln327_9_fu_1842_p2;
        sub_ln327_reg_3277 <= sub_ln327_fu_1376_p2;
        trunc_ln338_31_reg_3328 <= trunc_ln338_31_fu_1519_p1;
        trunc_ln338_32_reg_3365 <= trunc_ln338_32_fu_1634_p1;
        trunc_ln338_33_reg_3402 <= trunc_ln338_33_fu_1749_p1;
        trunc_ln338_34_reg_3439 <= trunc_ln338_34_fu_1864_p1;
        trunc_ln338_35_reg_3476 <= trunc_ln338_35_fu_1979_p1;
        trunc_ln338_reg_3287 <= trunc_ln338_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln336_8_reg_3572 <= icmp_ln336_8_fu_2703_p2;
        len_538_reg_3583 <= len_538_fu_2751_p3;
        len_539_reg_3589 <= len_539_fu_2792_p3;
        match_length_66_reg_3577 <= match_length_66_fu_2709_p3;
        match_offset_53_reg_3567 <= match_offset_53_fu_2654_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        match_length_70_reg_3595 <= match_length_70_fu_2838_p3;
        select_ln336_10_reg_3600 <= select_ln336_10_fu_2850_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        present_window_97_reg_2976 <= present_window_37_fu_322;
        present_window_98_reg_2964 <= present_window_38_fu_318;
        present_window_99_reg_2952 <= present_window_39_fu_314;
        present_window_reg_2988 <= present_window_36_fu_326;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_V_load_reg_2942 <= ap_sig_allocacmp_tmp_data_V_load;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_2947 <= downStream_6_dout[32'd8];
    end
end

always @ (*) begin
    if (((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_2190)) begin
            ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 = tmp_reg_2947;
        end else if ((ap_loop_init == 1'b1)) begin
            ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 = tmp_52_cast;
        end else begin
            ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 = tmp_reg_2947;
        end
    end else begin
        ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 = tmp_reg_2947;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_tmp_data_V_load = inVal_data_V_reload;
    end else begin
        ap_sig_allocacmp_tmp_data_V_load = tmp_data_V_fu_306;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        compressedStream_blk_n = compressedStream_full_n;
    end else begin
        compressedStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        compressedStream_write = 1'b1;
    end else begin
        compressedStream_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dict_V_ce0 = 1'b1;
    end else begin
        dict_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dict_V_ce1 = 1'b1;
    end else begin
        dict_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (nextVal_strobe_V_reg_462_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dict_V_we0 = 1'b1;
    end else begin
        dict_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        downStream_6_blk_n = downStream_6_empty_n;
    end else begin
        downStream_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        downStream_6_read = 1'b1;
    end else begin
        downStream_6_read = 1'b0;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        lclBufStream_i_blk_n = lclBufStream_empty_n;
    end else begin
        lclBufStream_i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        lclBufStream_o_blk_n = lclBufStream_full_n;
    end else begin
        lclBufStream_o_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lclBufStream_read = 1'b1;
    end else begin
        lclBufStream_read = 1'b0;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lclBufStream_write = 1'b1;
    end else begin
        lclBufStream_write = 1'b0;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        present_window_36_out_ap_vld = 1'b1;
    end else begin
        present_window_36_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        present_window_37_out_ap_vld = 1'b1;
    end else begin
        present_window_37_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        present_window_38_out_ap_vld = 1'b1;
    end else begin
        present_window_38_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        present_window_39_out_ap_vld = 1'b1;
    end else begin
        present_window_39_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((nextVal_strobe_V_reg_462_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        present_window_40_out_ap_vld = 1'b1;
    end else begin
        present_window_40_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln276_fu_1250_p2 = ($signed(iIdx_1_fu_302) + $signed(32'd4294967291));

assign add_ln327_3_fu_2571_p2 = ($signed(trunc_ln338_31_reg_3328_pp0_iter4_reg) + $signed(16'd65535));

assign add_ln327_4_fu_2594_p2 = ($signed(trunc_ln338_32_reg_3365_pp0_iter4_reg) + $signed(16'd65535));

assign add_ln327_fu_2553_p2 = ($signed(trunc_ln338_reg_3287_pp0_iter4_reg) + $signed(16'd65535));

assign add_ln336_2_fu_2845_p2 = ($signed(trunc_ln338_35_reg_3476_pp0_iter5_reg) + $signed(16'd65535));

assign add_ln336_3_fu_2799_p2 = ($signed(trunc_ln338_33_reg_3402_pp0_iter5_reg) + $signed(16'd65535));

assign add_ln336_fu_2820_p2 = ($signed(trunc_ln338_34_reg_3439_pp0_iter5_reg) + $signed(16'd65535));

assign add_ln392_2_fu_1261_p2 = ($signed(trunc_ln276_fu_1246_p1) + $signed(24'd16777211));

assign add_ln392_fu_1267_p2 = (add_ln392_2_fu_1261_p2 + trunc_ln7);

assign and_ln328_24_fu_2060_p2 = (xor_ln329_fu_2039_p2 & icmp_ln328_fu_2033_p2);

assign and_ln328_25_fu_2066_p2 = (icmp_ln327_fu_2022_p2 & and_ln328_24_fu_2060_p2);

assign and_ln328_26_fu_2072_p2 = (and_ln328_fu_2056_p2 & and_ln328_25_fu_2066_p2);

assign and_ln328_27_fu_2175_p2 = (icmp_ln327_82_reg_3323 & icmp_ln327_21_reg_3313);

assign and_ln328_28_fu_2179_p2 = (xor_ln329_31_fu_2158_p2 & icmp_ln328_6_fu_2152_p2);

assign and_ln328_29_fu_2185_p2 = (icmp_ln327_20_fu_2141_p2 & and_ln328_28_fu_2179_p2);

assign and_ln328_30_fu_2191_p2 = (and_ln328_29_fu_2185_p2 & and_ln328_27_fu_2175_p2);

assign and_ln328_31_fu_2294_p2 = (icmp_ln327_83_reg_3360 & icmp_ln327_24_reg_3350);

assign and_ln328_32_fu_2298_p2 = (xor_ln329_32_fu_2283_p2 & icmp_ln328_7_fu_2277_p2);

assign and_ln328_33_fu_2304_p2 = (icmp_ln327_23_fu_2266_p2 & and_ln328_32_fu_2298_p2);

assign and_ln328_34_fu_2310_p2 = (and_ln328_33_fu_2304_p2 & and_ln328_31_fu_2294_p2);

assign and_ln328_35_fu_2373_p2 = (icmp_ln327_84_reg_3397 & icmp_ln327_27_reg_3387);

assign and_ln328_36_fu_2377_p2 = (xor_ln329_33_fu_2362_p2 & icmp_ln328_8_fu_2356_p2);

assign and_ln328_37_fu_2383_p2 = (icmp_ln327_26_fu_2345_p2 & and_ln328_36_fu_2377_p2);

assign and_ln328_38_fu_2389_p2 = (and_ln328_37_fu_2383_p2 & and_ln328_35_fu_2373_p2);

assign and_ln328_39_fu_2452_p2 = (icmp_ln327_85_reg_3434 & icmp_ln327_30_reg_3424);

assign and_ln328_40_fu_2456_p2 = (xor_ln329_34_fu_2441_p2 & icmp_ln328_9_fu_2435_p2);

assign and_ln328_41_fu_2462_p2 = (icmp_ln327_29_fu_2424_p2 & and_ln328_40_fu_2456_p2);

assign and_ln328_42_fu_2468_p2 = (and_ln328_41_fu_2462_p2 & and_ln328_39_fu_2452_p2);

assign and_ln328_43_fu_2531_p2 = (icmp_ln327_86_reg_3471 & icmp_ln327_33_reg_3461);

assign and_ln328_44_fu_2535_p2 = (xor_ln329_35_fu_2520_p2 & icmp_ln328_10_fu_2514_p2);

assign and_ln328_45_fu_2541_p2 = (icmp_ln327_32_fu_2503_p2 & and_ln328_44_fu_2535_p2);

assign and_ln328_46_fu_2547_p2 = (and_ln328_45_fu_2541_p2 & and_ln328_43_fu_2531_p2);

assign and_ln328_fu_2056_p2 = (icmp_ln327_81_reg_3282 & icmp_ln327_18_reg_3272);

assign and_ln330_18_fu_2084_p2 = (icmp_ln330_12_fu_2050_p2 & and_ln330_fu_2078_p2);

assign and_ln330_19_fu_2104_p2 = (xor_ln330_fu_2098_p2 & and_ln328_26_fu_2072_p2);

assign and_ln330_20_fu_2197_p2 = (icmp_ln330_13_fu_2163_p2 & and_ln328_30_fu_2191_p2);

assign and_ln330_21_fu_2203_p2 = (icmp_ln330_14_fu_2169_p2 & and_ln330_20_fu_2197_p2);

assign and_ln330_22_fu_2223_p2 = (xor_ln330_6_fu_2217_p2 & and_ln328_30_fu_2191_p2);

assign and_ln330_23_fu_2604_p2 = (icmp_ln330_15_fu_2599_p2 & and_ln328_34_reg_3510);

assign and_ln330_24_fu_2609_p2 = (icmp_ln330_16_reg_3505 & and_ln330_23_fu_2604_p2);

assign and_ln330_25_fu_2628_p2 = (xor_ln330_7_fu_2622_p2 & and_ln328_34_reg_3510);

assign and_ln330_26_fu_2667_p2 = (icmp_ln330_17_fu_2662_p2 & and_ln328_38_reg_3527);

assign and_ln330_27_fu_2672_p2 = (icmp_ln330_18_reg_3522 & and_ln330_26_fu_2667_p2);

assign and_ln330_28_fu_2691_p2 = (xor_ln330_8_fu_2685_p2 & and_ln328_38_reg_3527);

assign and_ln330_29_fu_2722_p2 = (icmp_ln330_19_fu_2717_p2 & and_ln328_42_reg_3544);

assign and_ln330_30_fu_2727_p2 = (icmp_ln330_20_reg_3539 & and_ln330_29_fu_2722_p2);

assign and_ln330_31_fu_2746_p2 = (xor_ln330_9_fu_2740_p2 & and_ln328_42_reg_3544);

assign and_ln330_32_fu_2763_p2 = (icmp_ln330_21_fu_2758_p2 & and_ln328_46_reg_3561);

assign and_ln330_33_fu_2768_p2 = (icmp_ln330_22_reg_3556 & and_ln330_32_fu_2763_p2);

assign and_ln330_34_fu_2787_p2 = (xor_ln330_10_fu_2781_p2 & and_ln328_46_reg_3561);

assign and_ln330_fu_2078_p2 = (icmp_ln330_fu_2044_p2 & and_ln328_26_fu_2072_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((nextVal_strobe_V_reg_462_pp0_iter6_reg == 1'd1) & (compressedStream_full_n == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((lclBufStream_full_n == 1'b0) & (nextVal_strobe_V_reg_462 == 1'd1)) | ((nextVal_strobe_V_reg_462 == 1'd1) & (lclBufStream_empty_n == 1'b0)))) | ((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (downStream_6_empty_n == 1'b0) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((nextVal_strobe_V_reg_462_pp0_iter6_reg == 1'd1) & (compressedStream_full_n == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((lclBufStream_full_n == 1'b0) & (nextVal_strobe_V_reg_462 == 1'd1)) | ((nextVal_strobe_V_reg_462 == 1'd1) & (lclBufStream_empty_n == 1'b0)))) | ((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (downStream_6_empty_n == 1'b0) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((nextVal_strobe_V_reg_462_pp0_iter6_reg == 1'd1) & (compressedStream_full_n == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((lclBufStream_full_n == 1'b0) & (nextVal_strobe_V_reg_462 == 1'd1)) | ((nextVal_strobe_V_reg_462 == 1'd1) & (lclBufStream_empty_n == 1'b0)))) | ((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (downStream_6_empty_n == 1'b0) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_phi_mux_nextVal_strobe_V_phi_fu_465_p4 == 1'd1) & (downStream_6_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((lclBufStream_full_n == 1'b0) & (nextVal_strobe_V_reg_462 == 1'd1)) | ((nextVal_strobe_V_reg_462 == 1'd1) & (lclBufStream_empty_n == 1'b0)));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter7 = ((nextVal_strobe_V_reg_462_pp0_iter6_reg == 1'd1) & (compressedStream_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_2190 = ((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_2195 = ((nextVal_strobe_V_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_enable_operation_161 = (nextVal_strobe_V_reg_462_pp0_iter2_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_68 = (nextVal_strobe_V_reg_462 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_74 = (nextVal_strobe_V_reg_462_pp0_iter1_reg == 1'd1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign compressedStream_din = {{{{{{1'd1}, {select_ln336_10_reg_3600}}}, {zext_ln336_fu_2858_p1}}}, {present_window_40_load_1_reg_3000_pp0_iter6_reg}};

assign currIdx_fu_1256_p2 = (add_ln276_fu_1250_p2 + mul);

assign dict_V_address0 = dict_V_addr_reg_3023_pp0_iter2_reg;

assign dict_V_address1 = zext_ln301_fu_615_p1;

assign dict_V_d0 = {{{{{{{{trunc_ln1715_reg_3029}, {add_ln392_fu_1267_p2}}, {tmp_184_reg_3012_pp0_iter2_reg}}, {present_window_reg_2988_pp0_iter2_reg}}, {present_window_97_reg_2976_pp0_iter2_reg}}, {present_window_98_reg_2964_pp0_iter2_reg}}, {present_window_99_reg_2952_pp0_iter2_reg}}, {present_window_40_load_1_reg_3000_pp0_iter2_reg}};

assign done_175_fu_1297_p2 = (icmp_ln321_reg_3046 | done_fu_1292_p2);

assign done_176_fu_1317_p2 = (icmp_ln321_35_reg_3051 | done_175_fu_1297_p2);

assign done_177_fu_1340_p2 = (icmp_ln321_36_reg_3056 | done_176_fu_1317_p2);

assign done_178_fu_1359_p2 = (icmp_ln321_37_reg_3061 | done_177_fu_1340_p2);

assign done_179_fu_1413_p2 = (len_474_reg_3076 ^ 1'd1);

assign done_180_fu_1418_p2 = (icmp_ln321_40_reg_3083 | done_179_fu_1413_p2);

assign done_181_fu_1438_p2 = (icmp_ln321_41_reg_3088 | done_180_fu_1418_p2);

assign done_182_fu_1461_p2 = (icmp_ln321_42_reg_3093 | done_181_fu_1438_p2);

assign done_183_fu_1480_p2 = (icmp_ln321_43_reg_3098 | done_182_fu_1461_p2);

assign done_184_fu_1534_p2 = (len_486_reg_3113 ^ 1'd1);

assign done_185_fu_1539_p2 = (icmp_ln321_46_reg_3120 | done_184_fu_1534_p2);

assign done_186_fu_1559_p2 = (icmp_ln321_47_reg_3125 | done_185_fu_1539_p2);

assign done_187_fu_1582_p2 = (icmp_ln321_48_reg_3130 | done_186_fu_1559_p2);

assign done_188_fu_1601_p2 = (icmp_ln321_49_reg_3135 | done_187_fu_1582_p2);

assign done_189_fu_1649_p2 = (len_498_reg_3150 ^ 1'd1);

assign done_190_fu_1654_p2 = (icmp_ln321_52_reg_3157 | done_189_fu_1649_p2);

assign done_191_fu_1674_p2 = (icmp_ln321_53_reg_3162 | done_190_fu_1654_p2);

assign done_192_fu_1697_p2 = (icmp_ln321_54_reg_3167 | done_191_fu_1674_p2);

assign done_193_fu_1716_p2 = (icmp_ln321_55_reg_3172 | done_192_fu_1697_p2);

assign done_194_fu_1764_p2 = (len_510_reg_3187 ^ 1'd1);

assign done_195_fu_1769_p2 = (icmp_ln321_58_reg_3194 | done_194_fu_1764_p2);

assign done_196_fu_1789_p2 = (icmp_ln321_59_reg_3199 | done_195_fu_1769_p2);

assign done_197_fu_1812_p2 = (icmp_ln321_60_reg_3204 | done_196_fu_1789_p2);

assign done_198_fu_1831_p2 = (icmp_ln321_61_reg_3209 | done_197_fu_1812_p2);

assign done_199_fu_1879_p2 = (len_522_reg_3224 ^ 1'd1);

assign done_200_fu_1884_p2 = (icmp_ln321_64_reg_3231 | done_199_fu_1879_p2);

assign done_201_fu_1904_p2 = (icmp_ln321_65_reg_3236 | done_200_fu_1884_p2);

assign done_202_fu_1927_p2 = (icmp_ln321_66_reg_3241 | done_201_fu_1904_p2);

assign done_203_fu_1946_p2 = (icmp_ln321_67_reg_3246 | done_202_fu_1927_p2);

assign done_fu_1292_p2 = (len_reg_3039 ^ 1'd1);

assign hash_fu_609_p2 = (zext_ln294_fu_605_p1 ^ shl_ln_fu_543_p3);

assign iIdx_fu_1988_p2 = (iIdx_1_fu_302 + 32'd1);

assign icmp_ln321_35_fu_693_p2 = ((present_window_98_reg_2964 != tmp_46_fu_683_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_36_fu_708_p2 = ((present_window_97_reg_2976 != tmp_47_fu_698_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_37_fu_723_p2 = ((present_window_reg_2988 != tmp_48_fu_713_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_38_fu_738_p2 = ((tmp_184_reg_3012 != tmp_49_fu_728_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_40_fu_778_p2 = ((present_window_99_reg_2952 != tmp_51_fu_768_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_41_fu_793_p2 = ((present_window_98_reg_2964 != tmp_52_fu_783_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_42_fu_808_p2 = ((present_window_97_reg_2976 != tmp_53_fu_798_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_43_fu_823_p2 = ((present_window_reg_2988 != tmp_54_fu_813_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_44_fu_838_p2 = ((tmp_184_reg_3012 != tmp_55_fu_828_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_46_fu_878_p2 = ((present_window_99_reg_2952 != tmp_57_fu_868_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_47_fu_893_p2 = ((present_window_98_reg_2964 != tmp_58_fu_883_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_48_fu_908_p2 = ((present_window_97_reg_2976 != tmp_59_fu_898_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_49_fu_923_p2 = ((present_window_reg_2988 != tmp_60_fu_913_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_50_fu_938_p2 = ((tmp_184_reg_3012 != tmp_63_fu_928_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_52_fu_978_p2 = ((present_window_99_reg_2952 != tmp_68_fu_968_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_53_fu_993_p2 = ((present_window_98_reg_2964 != tmp_69_fu_983_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_54_fu_1008_p2 = ((present_window_97_reg_2976 != tmp_70_fu_998_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_55_fu_1023_p2 = ((present_window_reg_2988 != tmp_71_fu_1013_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_56_fu_1038_p2 = ((tmp_184_reg_3012 != tmp_72_fu_1028_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_58_fu_1078_p2 = ((present_window_99_reg_2952 != tmp_74_fu_1068_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_59_fu_1093_p2 = ((present_window_98_reg_2964 != tmp_75_fu_1083_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_60_fu_1108_p2 = ((present_window_97_reg_2976 != tmp_76_fu_1098_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_61_fu_1123_p2 = ((present_window_reg_2988 != tmp_77_fu_1113_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_62_fu_1138_p2 = ((tmp_184_reg_3012 != tmp_78_fu_1128_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_64_fu_1178_p2 = ((present_window_99_reg_2952 != tmp_80_fu_1168_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_65_fu_1193_p2 = ((present_window_98_reg_2964 != tmp_81_fu_1183_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_66_fu_1208_p2 = ((present_window_97_reg_2976 != tmp_82_fu_1198_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_67_fu_1223_p2 = ((present_window_reg_2988 != tmp_83_fu_1213_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_68_fu_1238_p2 = ((tmp_184_reg_3012 != tmp_84_fu_1228_p4) ? 1'b1 : 1'b0);

assign icmp_ln321_fu_678_p2 = ((present_window_99_reg_2952 != tmp_45_fu_668_p4) ? 1'b1 : 1'b0);

assign icmp_ln327_18_fu_1370_p2 = ((zext_ln319_fu_1286_p1 < currIdx_fu_1256_p2) ? 1'b1 : 1'b0);

assign icmp_ln327_20_fu_2141_p2 = ((len_484_fu_2133_p3 > 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln327_21_fu_1491_p2 = ((zext_ln319_6_fu_1407_p1 < currIdx_fu_1256_p2) ? 1'b1 : 1'b0);

assign icmp_ln327_23_fu_2266_p2 = ((len_496_fu_2258_p3 > 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln327_24_fu_1606_p2 = ((zext_ln319_7_fu_1528_p1 < currIdx_fu_1256_p2) ? 1'b1 : 1'b0);

assign icmp_ln327_26_fu_2345_p2 = ((len_508_fu_2337_p3 > 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln327_27_fu_1721_p2 = ((zext_ln319_8_fu_1643_p1 < currIdx_fu_1256_p2) ? 1'b1 : 1'b0);

assign icmp_ln327_29_fu_2424_p2 = ((len_520_fu_2416_p3 > 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln327_30_fu_1836_p2 = ((zext_ln319_9_fu_1758_p1 < currIdx_fu_1256_p2) ? 1'b1 : 1'b0);

assign icmp_ln327_32_fu_2503_p2 = ((len_532_fu_2495_p3 > 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln327_33_fu_1951_p2 = ((zext_ln319_10_fu_1873_p1 < currIdx_fu_1256_p2) ? 1'b1 : 1'b0);

assign icmp_ln327_81_fu_1392_p2 = ((tmp_178_fu_1382_p4 == 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln327_82_fu_1513_p2 = ((tmp_179_fu_1503_p4 == 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln327_83_fu_1628_p2 = ((tmp_180_fu_1618_p4 == 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln327_84_fu_1743_p2 = ((tmp_181_fu_1733_p4 == 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln327_85_fu_1858_p2 = ((tmp_182_fu_1848_p4 == 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln327_86_fu_1973_p2 = ((tmp_183_fu_1963_p4 == 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln327_fu_2022_p2 = ((len_472_fu_2014_p3 > 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln328_10_fu_2514_p2 = ((match_offset_56_fu_2509_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln328_6_fu_2152_p2 = ((match_offset_50_fu_2147_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln328_7_fu_2277_p2 = ((match_offset_52_fu_2272_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln328_8_fu_2356_p2 = ((match_offset_54_fu_2351_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln328_9_fu_2435_p2 = ((match_offset_55_fu_2430_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln328_fu_2033_p2 = ((match_offset_fu_2028_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln329_31_fu_1523_p2 = ((zext_ln319_6_fu_1407_p1 < mul) ? 1'b1 : 1'b0);

assign icmp_ln329_32_fu_1638_p2 = ((zext_ln319_7_fu_1528_p1 < mul) ? 1'b1 : 1'b0);

assign icmp_ln329_33_fu_1753_p2 = ((zext_ln319_8_fu_1643_p1 < mul) ? 1'b1 : 1'b0);

assign icmp_ln329_34_fu_1868_p2 = ((zext_ln319_9_fu_1758_p1 < mul) ? 1'b1 : 1'b0);

assign icmp_ln329_35_fu_1983_p2 = ((zext_ln319_10_fu_1873_p1 < mul) ? 1'b1 : 1'b0);

assign icmp_ln329_fu_1402_p2 = ((zext_ln319_fu_1286_p1 < mul) ? 1'b1 : 1'b0);

assign icmp_ln330_12_fu_2050_p2 = ((match_offset_fu_2028_p2 < 32'd4097) ? 1'b1 : 1'b0);

assign icmp_ln330_13_fu_2163_p2 = ((len_484_fu_2133_p3 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln330_14_fu_2169_p2 = ((match_offset_50_fu_2147_p2 < 32'd4097) ? 1'b1 : 1'b0);

assign icmp_ln330_15_fu_2599_p2 = ((len_496_reg_3499 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln330_16_fu_2288_p2 = ((match_offset_52_fu_2272_p2 < 32'd4097) ? 1'b1 : 1'b0);

assign icmp_ln330_17_fu_2662_p2 = ((len_508_reg_3516 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln330_18_fu_2367_p2 = ((match_offset_54_fu_2351_p2 < 32'd4097) ? 1'b1 : 1'b0);

assign icmp_ln330_19_fu_2717_p2 = ((len_520_reg_3533 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln330_20_fu_2446_p2 = ((match_offset_55_fu_2430_p2 < 32'd4097) ? 1'b1 : 1'b0);

assign icmp_ln330_21_fu_2758_p2 = ((len_532_reg_3550 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln330_22_fu_2525_p2 = ((match_offset_56_fu_2509_p2 < 32'd4097) ? 1'b1 : 1'b0);

assign icmp_ln330_fu_2044_p2 = ((len_472_fu_2014_p3 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln336_10_fu_2833_p2 = ((len_539_reg_3589 > match_length_68_fu_2814_p3) ? 1'b1 : 1'b0);

assign icmp_ln336_6_fu_2576_p2 = ((len_535_reg_3493 > len_534_reg_3486) ? 1'b1 : 1'b0);

assign icmp_ln336_7_fu_2640_p2 = ((len_536_fu_2633_p3 > match_length_62_fu_2580_p3) ? 1'b1 : 1'b0);

assign icmp_ln336_8_fu_2703_p2 = ((len_537_fu_2696_p3 > match_length_64_fu_2646_p3) ? 1'b1 : 1'b0);

assign icmp_ln336_9_fu_2810_p2 = ((len_538_reg_3583 > match_length_66_reg_3577) ? 1'b1 : 1'b0);

assign icmp_ln336_fu_2558_p2 = ((len_534_reg_3486 != 3'd0) ? 1'b1 : 1'b0);

assign lclBufStream_din = tmp_data_V_load_reg_2942;

assign len_463_fu_1302_p3 = ((len_reg_3039[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign len_464_fu_1309_p3 = ((done_175_fu_1297_p2[0:0] == 1'b1) ? zext_ln321_fu_1289_p1 : len_463_fu_1302_p3);

assign len_465_fu_1322_p2 = (len_464_fu_1309_p3 + 2'd1);

assign len_466_fu_1328_p3 = ((done_176_fu_1317_p2[0:0] == 1'b1) ? len_464_fu_1309_p3 : len_465_fu_1322_p2);

assign len_467_fu_1345_p2 = (zext_ln317_fu_1336_p1 + 3'd1);

assign len_468_fu_1351_p3 = ((done_177_fu_1340_p2[0:0] == 1'b1) ? zext_ln317_fu_1336_p1 : len_467_fu_1345_p2);

assign len_469_fu_1364_p2 = (len_468_fu_1351_p3 + 3'd1);

assign len_470_fu_1999_p3 = ((done_178_reg_3261[0:0] == 1'b1) ? len_468_reg_3256 : len_469_reg_3267);

assign len_471_fu_2008_p2 = (len_470_fu_1999_p3 + 3'd1);

assign len_472_fu_2014_p3 = ((or_ln321_fu_2004_p2[0:0] == 1'b1) ? len_470_fu_1999_p3 : len_471_fu_2008_p2);

assign len_474_fu_763_p2 = ((present_window_40_load_1_reg_3000 == tmp_50_fu_753_p4) ? 1'b1 : 1'b0);

assign len_475_fu_1423_p3 = ((len_474_reg_3076[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign len_476_fu_1430_p3 = ((done_180_fu_1418_p2[0:0] == 1'b1) ? zext_ln321_6_fu_1410_p1 : len_475_fu_1423_p3);

assign len_477_fu_1443_p2 = (len_476_fu_1430_p3 + 2'd1);

assign len_478_fu_1449_p3 = ((done_181_fu_1438_p2[0:0] == 1'b1) ? len_476_fu_1430_p3 : len_477_fu_1443_p2);

assign len_479_fu_1466_p2 = (zext_ln317_6_fu_1457_p1 + 3'd1);

assign len_480_fu_1472_p3 = ((done_182_fu_1461_p2[0:0] == 1'b1) ? zext_ln317_6_fu_1457_p1 : len_479_fu_1466_p2);

assign len_481_fu_1485_p2 = (len_480_fu_1472_p3 + 3'd1);

assign len_482_fu_2118_p3 = ((done_183_reg_3302[0:0] == 1'b1) ? len_480_reg_3297 : len_481_reg_3308);

assign len_483_fu_2127_p2 = (len_482_fu_2118_p3 + 3'd1);

assign len_484_fu_2133_p3 = ((or_ln321_30_fu_2123_p2[0:0] == 1'b1) ? len_482_fu_2118_p3 : len_483_fu_2127_p2);

assign len_486_fu_863_p2 = ((present_window_40_load_1_reg_3000 == tmp_56_fu_853_p4) ? 1'b1 : 1'b0);

assign len_487_fu_1544_p3 = ((len_486_reg_3113[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign len_488_fu_1551_p3 = ((done_185_fu_1539_p2[0:0] == 1'b1) ? zext_ln321_7_fu_1531_p1 : len_487_fu_1544_p3);

assign len_489_fu_1564_p2 = (len_488_fu_1551_p3 + 2'd1);

assign len_490_fu_1570_p3 = ((done_186_fu_1559_p2[0:0] == 1'b1) ? len_488_fu_1551_p3 : len_489_fu_1564_p2);

assign len_491_fu_1587_p2 = (zext_ln317_7_fu_1578_p1 + 3'd1);

assign len_492_fu_1593_p3 = ((done_187_fu_1582_p2[0:0] == 1'b1) ? zext_ln317_7_fu_1578_p1 : len_491_fu_1587_p2);

assign len_493_fu_2237_p2 = (len_492_reg_3338 + 3'd1);

assign len_494_fu_2242_p3 = ((done_188_reg_3344[0:0] == 1'b1) ? len_492_reg_3338 : len_493_fu_2237_p2);

assign len_495_fu_2252_p2 = (len_494_fu_2242_p3 + 3'd1);

assign len_496_fu_2258_p3 = ((or_ln321_35_fu_2248_p2[0:0] == 1'b1) ? len_494_fu_2242_p3 : len_495_fu_2252_p2);

assign len_498_fu_963_p2 = ((present_window_40_load_1_reg_3000 == tmp_67_fu_953_p4) ? 1'b1 : 1'b0);

assign len_499_fu_1659_p3 = ((len_498_reg_3150[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign len_500_fu_1666_p3 = ((done_190_fu_1654_p2[0:0] == 1'b1) ? zext_ln321_8_fu_1646_p1 : len_499_fu_1659_p3);

assign len_501_fu_1679_p2 = (len_500_fu_1666_p3 + 2'd1);

assign len_502_fu_1685_p3 = ((done_191_fu_1674_p2[0:0] == 1'b1) ? len_500_fu_1666_p3 : len_501_fu_1679_p2);

assign len_503_fu_1702_p2 = (zext_ln317_8_fu_1693_p1 + 3'd1);

assign len_504_fu_1708_p3 = ((done_192_fu_1697_p2[0:0] == 1'b1) ? zext_ln317_8_fu_1693_p1 : len_503_fu_1702_p2);

assign len_505_fu_2316_p2 = (len_504_reg_3375 + 3'd1);

assign len_506_fu_2321_p3 = ((done_193_reg_3381[0:0] == 1'b1) ? len_504_reg_3375 : len_505_fu_2316_p2);

assign len_507_fu_2331_p2 = (len_506_fu_2321_p3 + 3'd1);

assign len_508_fu_2337_p3 = ((or_ln321_40_fu_2327_p2[0:0] == 1'b1) ? len_506_fu_2321_p3 : len_507_fu_2331_p2);

assign len_510_fu_1063_p2 = ((present_window_40_load_1_reg_3000 == tmp_73_fu_1053_p4) ? 1'b1 : 1'b0);

assign len_511_fu_1774_p3 = ((len_510_reg_3187[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign len_512_fu_1781_p3 = ((done_195_fu_1769_p2[0:0] == 1'b1) ? zext_ln321_9_fu_1761_p1 : len_511_fu_1774_p3);

assign len_513_fu_1794_p2 = (len_512_fu_1781_p3 + 2'd1);

assign len_514_fu_1800_p3 = ((done_196_fu_1789_p2[0:0] == 1'b1) ? len_512_fu_1781_p3 : len_513_fu_1794_p2);

assign len_515_fu_1817_p2 = (zext_ln317_9_fu_1808_p1 + 3'd1);

assign len_516_fu_1823_p3 = ((done_197_fu_1812_p2[0:0] == 1'b1) ? zext_ln317_9_fu_1808_p1 : len_515_fu_1817_p2);

assign len_517_fu_2395_p2 = (len_516_reg_3412 + 3'd1);

assign len_518_fu_2400_p3 = ((done_198_reg_3418[0:0] == 1'b1) ? len_516_reg_3412 : len_517_fu_2395_p2);

assign len_519_fu_2410_p2 = (len_518_fu_2400_p3 + 3'd1);

assign len_520_fu_2416_p3 = ((or_ln321_45_fu_2406_p2[0:0] == 1'b1) ? len_518_fu_2400_p3 : len_519_fu_2410_p2);

assign len_522_fu_1163_p2 = ((present_window_40_load_1_reg_3000 == tmp_79_fu_1153_p4) ? 1'b1 : 1'b0);

assign len_523_fu_1889_p3 = ((len_522_reg_3224[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign len_524_fu_1896_p3 = ((done_200_fu_1884_p2[0:0] == 1'b1) ? zext_ln321_10_fu_1876_p1 : len_523_fu_1889_p3);

assign len_525_fu_1909_p2 = (len_524_fu_1896_p3 + 2'd1);

assign len_526_fu_1915_p3 = ((done_201_fu_1904_p2[0:0] == 1'b1) ? len_524_fu_1896_p3 : len_525_fu_1909_p2);

assign len_527_fu_1932_p2 = (zext_ln317_10_fu_1923_p1 + 3'd1);

assign len_528_fu_1938_p3 = ((done_202_fu_1927_p2[0:0] == 1'b1) ? zext_ln317_10_fu_1923_p1 : len_527_fu_1932_p2);

assign len_529_fu_2474_p2 = (len_528_reg_3449 + 3'd1);

assign len_530_fu_2479_p3 = ((done_203_reg_3455[0:0] == 1'b1) ? len_528_reg_3449 : len_529_fu_2474_p2);

assign len_531_fu_2489_p2 = (len_530_fu_2479_p3 + 3'd1);

assign len_532_fu_2495_p3 = ((or_ln321_50_fu_2485_p2[0:0] == 1'b1) ? len_530_fu_2479_p3 : len_531_fu_2489_p2);

assign len_534_fu_2110_p3 = ((and_ln330_19_fu_2104_p2[0:0] == 1'b1) ? len_472_fu_2014_p3 : select_ln330_fu_2090_p3);

assign len_535_fu_2229_p3 = ((and_ln330_22_fu_2223_p2[0:0] == 1'b1) ? len_484_fu_2133_p3 : select_ln330_68_fu_2209_p3);

assign len_536_fu_2633_p3 = ((and_ln330_25_fu_2628_p2[0:0] == 1'b1) ? len_496_reg_3499 : select_ln330_70_fu_2614_p3);

assign len_537_fu_2696_p3 = ((and_ln330_28_fu_2691_p2[0:0] == 1'b1) ? len_508_reg_3516 : select_ln330_72_fu_2677_p3);

assign len_538_fu_2751_p3 = ((and_ln330_31_fu_2746_p2[0:0] == 1'b1) ? len_520_reg_3533 : select_ln330_74_fu_2732_p3);

assign len_539_fu_2792_p3 = ((and_ln330_34_fu_2787_p2[0:0] == 1'b1) ? len_532_reg_3550 : select_ln330_76_fu_2773_p3);

assign len_fu_663_p2 = ((present_window_40_load_1_reg_3000 == trunc_ln714_fu_659_p1) ? 1'b1 : 1'b0);

assign match_length_62_fu_2580_p3 = ((icmp_ln336_6_fu_2576_p2[0:0] == 1'b1) ? len_535_reg_3493 : len_534_reg_3486);

assign match_length_64_fu_2646_p3 = ((icmp_ln336_7_fu_2640_p2[0:0] == 1'b1) ? len_536_fu_2633_p3 : match_length_62_fu_2580_p3);

assign match_length_66_fu_2709_p3 = ((icmp_ln336_8_fu_2703_p2[0:0] == 1'b1) ? len_537_fu_2696_p3 : match_length_64_fu_2646_p3);

assign match_length_68_fu_2814_p3 = ((icmp_ln336_9_fu_2810_p2[0:0] == 1'b1) ? len_538_reg_3583 : match_length_66_reg_3577);

assign match_length_70_fu_2838_p3 = ((icmp_ln336_10_fu_2833_p2[0:0] == 1'b1) ? len_539_reg_3589 : match_length_68_fu_2814_p3);

assign match_offset_49_fu_2563_p3 = ((icmp_ln336_fu_2558_p2[0:0] == 1'b1) ? add_ln327_fu_2553_p2 : 16'd0);

assign match_offset_50_fu_2147_p2 = ($signed(sub_ln327_6_reg_3318) + $signed(32'd4294967295));

assign match_offset_51_fu_2586_p3 = ((icmp_ln336_6_fu_2576_p2[0:0] == 1'b1) ? add_ln327_3_fu_2571_p2 : match_offset_49_fu_2563_p3);

assign match_offset_52_fu_2272_p2 = ($signed(sub_ln327_7_reg_3355) + $signed(32'd4294967295));

assign match_offset_53_fu_2654_p3 = ((icmp_ln336_7_fu_2640_p2[0:0] == 1'b1) ? add_ln327_4_fu_2594_p2 : match_offset_51_fu_2586_p3);

assign match_offset_54_fu_2351_p2 = ($signed(sub_ln327_8_reg_3392) + $signed(32'd4294967295));

assign match_offset_55_fu_2430_p2 = ($signed(sub_ln327_9_reg_3429) + $signed(32'd4294967295));

assign match_offset_56_fu_2509_p2 = ($signed(sub_ln327_10_reg_3466) + $signed(32'd4294967295));

assign match_offset_fu_2028_p2 = ($signed(sub_ln327_reg_3277) + $signed(32'd4294967295));

assign or_ln321_30_fu_2123_p2 = (icmp_ln321_44_reg_3103_pp0_iter3_reg | done_183_reg_3302);

assign or_ln321_35_fu_2248_p2 = (icmp_ln321_50_reg_3140_pp0_iter3_reg | done_188_reg_3344);

assign or_ln321_40_fu_2327_p2 = (icmp_ln321_56_reg_3177_pp0_iter3_reg | done_193_reg_3381);

assign or_ln321_45_fu_2406_p2 = (icmp_ln321_62_reg_3214_pp0_iter3_reg | done_198_reg_3418);

assign or_ln321_50_fu_2485_p2 = (icmp_ln321_68_reg_3251_pp0_iter3_reg | done_203_reg_3455);

assign or_ln321_fu_2004_p2 = (icmp_ln321_38_reg_3066_pp0_iter3_reg | done_178_reg_3261);

assign present_window_36_out = present_window_reg_2988_pp0_iter5_reg;

assign present_window_37_out = present_window_97_reg_2976_pp0_iter5_reg;

assign present_window_38_out = present_window_98_reg_2964_pp0_iter5_reg;

assign present_window_39_out = present_window_99_reg_2952_pp0_iter5_reg;

assign present_window_40_out = present_window_40_fu_310;

assign select_ln330_68_fu_2209_p3 = ((and_ln330_21_fu_2203_p2[0:0] == 1'b1) ? 3'd3 : 3'd0);

assign select_ln330_70_fu_2614_p3 = ((and_ln330_24_fu_2609_p2[0:0] == 1'b1) ? 3'd3 : 3'd0);

assign select_ln330_72_fu_2677_p3 = ((and_ln330_27_fu_2672_p2[0:0] == 1'b1) ? 3'd3 : 3'd0);

assign select_ln330_74_fu_2732_p3 = ((and_ln330_30_fu_2727_p2[0:0] == 1'b1) ? 3'd3 : 3'd0);

assign select_ln330_76_fu_2773_p3 = ((and_ln330_33_fu_2768_p2[0:0] == 1'b1) ? 3'd3 : 3'd0);

assign select_ln330_fu_2090_p3 = ((and_ln330_18_fu_2084_p2[0:0] == 1'b1) ? 3'd3 : 3'd0);

assign select_ln336_10_fu_2850_p3 = ((icmp_ln336_10_fu_2833_p2[0:0] == 1'b1) ? add_ln336_2_fu_2845_p2 : select_ln336_9_fu_2825_p3);

assign select_ln336_8_fu_2804_p3 = ((icmp_ln336_8_reg_3572[0:0] == 1'b1) ? add_ln336_3_fu_2799_p2 : match_offset_53_reg_3567);

assign select_ln336_9_fu_2825_p3 = ((icmp_ln336_9_fu_2810_p2[0:0] == 1'b1) ? add_ln336_fu_2820_p2 : select_ln336_8_fu_2804_p3);

assign shl_ln293_3_fu_555_p3 = {{present_window_39_fu_314}, {3'd0}};

assign shl_ln293_4_fu_563_p3 = {{present_window_38_fu_318}, {2'd0}};

assign shl_ln2_fu_571_p3 = {{present_window_40_fu_310}, {1'd0}};

assign shl_ln_fu_543_p3 = {{present_window_40_fu_310}, {4'd0}};

assign sub_ln327_10_fu_1957_p2 = (currIdx_fu_1256_p2 - zext_ln319_10_fu_1873_p1);

assign sub_ln327_6_fu_1497_p2 = (currIdx_fu_1256_p2 - zext_ln319_6_fu_1407_p1);

assign sub_ln327_7_fu_1612_p2 = (currIdx_fu_1256_p2 - zext_ln319_7_fu_1528_p1);

assign sub_ln327_8_fu_1727_p2 = (currIdx_fu_1256_p2 - zext_ln319_8_fu_1643_p1);

assign sub_ln327_9_fu_1842_p2 = (currIdx_fu_1256_p2 - zext_ln319_9_fu_1758_p1);

assign sub_ln327_fu_1376_p2 = (currIdx_fu_1256_p2 - zext_ln319_fu_1286_p1);

assign tmp_178_fu_1382_p4 = {{sub_ln327_fu_1376_p2[31:15]}};

assign tmp_179_fu_1503_p4 = {{sub_ln327_6_fu_1497_p2[31:15]}};

assign tmp_180_fu_1618_p4 = {{sub_ln327_7_fu_1612_p2[31:15]}};

assign tmp_181_fu_1733_p4 = {{sub_ln327_8_fu_1727_p2[31:15]}};

assign tmp_182_fu_1848_p4 = {{sub_ln327_9_fu_1842_p2[31:15]}};

assign tmp_183_fu_1963_p4 = {{sub_ln327_10_fu_1957_p2[31:15]}};

assign tmp_45_fu_668_p4 = {{dict_V_q1[15:8]}};

assign tmp_46_fu_683_p4 = {{dict_V_q1[23:16]}};

assign tmp_47_fu_698_p4 = {{dict_V_q1[31:24]}};

assign tmp_48_fu_713_p4 = {{dict_V_q1[39:32]}};

assign tmp_49_fu_728_p4 = {{dict_V_q1[47:40]}};

assign tmp_50_fu_753_p4 = {{dict_V_q1[79:72]}};

assign tmp_51_fu_768_p4 = {{dict_V_q1[87:80]}};

assign tmp_52_fu_783_p4 = {{dict_V_q1[95:88]}};

assign tmp_53_fu_798_p4 = {{dict_V_q1[103:96]}};

assign tmp_54_fu_813_p4 = {{dict_V_q1[111:104]}};

assign tmp_55_fu_828_p4 = {{dict_V_q1[119:112]}};

assign tmp_56_fu_853_p4 = {{dict_V_q1[151:144]}};

assign tmp_57_fu_868_p4 = {{dict_V_q1[159:152]}};

assign tmp_58_fu_883_p4 = {{dict_V_q1[167:160]}};

assign tmp_59_fu_898_p4 = {{dict_V_q1[175:168]}};

assign tmp_60_fu_913_p4 = {{dict_V_q1[183:176]}};

assign tmp_63_fu_928_p4 = {{dict_V_q1[191:184]}};

assign tmp_67_fu_953_p4 = {{dict_V_q1[223:216]}};

assign tmp_68_fu_968_p4 = {{dict_V_q1[231:224]}};

assign tmp_69_fu_983_p4 = {{dict_V_q1[239:232]}};

assign tmp_70_fu_998_p4 = {{dict_V_q1[247:240]}};

assign tmp_71_fu_1013_p4 = {{dict_V_q1[255:248]}};

assign tmp_72_fu_1028_p4 = {{dict_V_q1[263:256]}};

assign tmp_73_fu_1053_p4 = {{dict_V_q1[295:288]}};

assign tmp_74_fu_1068_p4 = {{dict_V_q1[303:296]}};

assign tmp_75_fu_1083_p4 = {{dict_V_q1[311:304]}};

assign tmp_76_fu_1098_p4 = {{dict_V_q1[319:312]}};

assign tmp_77_fu_1113_p4 = {{dict_V_q1[327:320]}};

assign tmp_78_fu_1128_p4 = {{dict_V_q1[335:328]}};

assign tmp_79_fu_1153_p4 = {{dict_V_q1[367:360]}};

assign tmp_80_fu_1168_p4 = {{dict_V_q1[375:368]}};

assign tmp_81_fu_1183_p4 = {{dict_V_q1[383:376]}};

assign tmp_82_fu_1198_p4 = {{dict_V_q1[391:384]}};

assign tmp_83_fu_1213_p4 = {{dict_V_q1[399:392]}};

assign tmp_84_fu_1228_p4 = {{dict_V_q1[407:400]}};

assign tmp_data_V_46_fu_511_p1 = downStream_6_dout[7:0];

assign trunc_ln1715_fu_645_p1 = dict_V_q1[359:0];

assign trunc_ln276_fu_1246_p1 = iIdx_1_fu_302[23:0];

assign trunc_ln338_31_fu_1519_p1 = sub_ln327_6_fu_1497_p2[15:0];

assign trunc_ln338_32_fu_1634_p1 = sub_ln327_7_fu_1612_p2[15:0];

assign trunc_ln338_33_fu_1749_p1 = sub_ln327_8_fu_1727_p2[15:0];

assign trunc_ln338_34_fu_1864_p1 = sub_ln327_9_fu_1842_p2[15:0];

assign trunc_ln338_35_fu_1979_p1 = sub_ln327_10_fu_1957_p2[15:0];

assign trunc_ln338_fu_1398_p1 = sub_ln327_fu_1376_p2[15:0];

assign trunc_ln714_fu_659_p1 = dict_V_q1[7:0];

assign xor_ln293_2_fu_593_p2 = (zext_ln293_4_fu_589_p1 ^ shl_ln293_3_fu_555_p3);

assign xor_ln293_fu_583_p2 = (zext_ln293_fu_551_p1 ^ shl_ln293_4_fu_563_p3);

assign xor_ln294_fu_599_p2 = (zext_ln293_3_fu_579_p1 ^ xor_ln293_2_fu_593_p2);

assign xor_ln329_31_fu_2158_p2 = (icmp_ln329_31_reg_3333 ^ 1'd1);

assign xor_ln329_32_fu_2283_p2 = (icmp_ln329_32_reg_3370 ^ 1'd1);

assign xor_ln329_33_fu_2362_p2 = (icmp_ln329_33_reg_3407 ^ 1'd1);

assign xor_ln329_34_fu_2441_p2 = (icmp_ln329_34_reg_3444 ^ 1'd1);

assign xor_ln329_35_fu_2520_p2 = (icmp_ln329_35_reg_3481 ^ 1'd1);

assign xor_ln329_fu_2039_p2 = (icmp_ln329_reg_3292 ^ 1'd1);

assign xor_ln330_10_fu_2781_p2 = (icmp_ln330_21_fu_2758_p2 ^ 1'd1);

assign xor_ln330_6_fu_2217_p2 = (icmp_ln330_13_fu_2163_p2 ^ 1'd1);

assign xor_ln330_7_fu_2622_p2 = (icmp_ln330_15_fu_2599_p2 ^ 1'd1);

assign xor_ln330_8_fu_2685_p2 = (icmp_ln330_17_fu_2662_p2 ^ 1'd1);

assign xor_ln330_9_fu_2740_p2 = (icmp_ln330_19_fu_2717_p2 ^ 1'd1);

assign xor_ln330_fu_2098_p2 = (icmp_ln330_fu_2044_p2 ^ 1'd1);

assign zext_ln293_3_fu_579_p1 = shl_ln2_fu_571_p3;

assign zext_ln293_4_fu_589_p1 = xor_ln293_fu_583_p2;

assign zext_ln293_fu_551_p1 = present_window_39_fu_314;

assign zext_ln294_fu_605_p1 = xor_ln294_fu_599_p2;

assign zext_ln301_fu_615_p1 = hash_fu_609_p2;

assign zext_ln317_10_fu_1923_p1 = len_526_fu_1915_p3;

assign zext_ln317_6_fu_1457_p1 = len_478_fu_1449_p3;

assign zext_ln317_7_fu_1578_p1 = len_490_fu_1570_p3;

assign zext_ln317_8_fu_1693_p1 = len_502_fu_1685_p3;

assign zext_ln317_9_fu_1808_p1 = len_514_fu_1800_p3;

assign zext_ln317_fu_1336_p1 = len_466_fu_1328_p3;

assign zext_ln319_10_fu_1873_p1 = compareIdx_31_reg_3219;

assign zext_ln319_6_fu_1407_p1 = compareIdx_6_reg_3071;

assign zext_ln319_7_fu_1528_p1 = compareIdx_7_reg_3108;

assign zext_ln319_8_fu_1643_p1 = compareIdx_8_reg_3145;

assign zext_ln319_9_fu_1758_p1 = compareIdx_9_reg_3182;

assign zext_ln319_fu_1286_p1 = compareIdx_reg_3034;

assign zext_ln321_10_fu_1876_p1 = len_522_reg_3224;

assign zext_ln321_6_fu_1410_p1 = len_474_reg_3076;

assign zext_ln321_7_fu_1531_p1 = len_486_reg_3113;

assign zext_ln321_8_fu_1646_p1 = len_498_reg_3150;

assign zext_ln321_9_fu_1761_p1 = len_510_reg_3187;

assign zext_ln321_fu_1289_p1 = len_reg_3039;

assign zext_ln336_fu_2858_p1 = match_length_70_reg_3595;

endmodule //gzipcMulticoreStreaming_lzCompress_Pipeline_lz_compress_1
