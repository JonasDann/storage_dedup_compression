-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_lz77DivideStream_14_0_Pipeline_lz77_divide is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    boosterStream_dout : IN STD_LOGIC_VECTOR (32 downto 0);
    boosterStream_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
    boosterStream_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
    boosterStream_empty_n : IN STD_LOGIC;
    boosterStream_read : OUT STD_LOGIC;
    lz77Stream_0_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    lz77Stream_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    lz77Stream_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    lz77Stream_0_full_n : IN STD_LOGIC;
    lz77Stream_0_write : OUT STD_LOGIC;
    lcl_dyn_ltree_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    lcl_dyn_ltree_V_ce0 : OUT STD_LOGIC;
    lcl_dyn_ltree_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    lcl_dyn_ltree_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    lcl_dyn_ltree_V_ce1 : OUT STD_LOGIC;
    lcl_dyn_ltree_V_we1 : OUT STD_LOGIC;
    lcl_dyn_ltree_V_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    lcl_dyn_dtree_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lcl_dyn_dtree_V_ce0 : OUT STD_LOGIC;
    lcl_dyn_dtree_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    lcl_dyn_dtree_V_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lcl_dyn_dtree_V_ce1 : OUT STD_LOGIC;
    lcl_dyn_dtree_V_we1 : OUT STD_LOGIC;
    lcl_dyn_dtree_V_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    just_started_1_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    just_started_1_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of gzipcMulticoreStreaming_lz77DivideStream_14_0_Pipeline_lz77_divide is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_0_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_0_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_0_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_101 : STD_LOGIC_VECTOR (8 downto 0) := "100000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_predicate_op30_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal tmp_strobe_V_reg_514 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_strobe_V_reg_514_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal next_state_8_reg_510 : STD_LOGIC_VECTOR (31 downto 0);
    signal next_state_8_reg_510_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_op83_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal tmp_strobe_V_fu_247_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal length_code51_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal length_code51_ce0 : STD_LOGIC;
    signal length_code51_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dist_code22_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal dist_code22_ce0 : STD_LOGIC;
    signal dist_code22_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal lz77Stream_0_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal boosterStream_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal next_state_8_reg_510_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_strobe_V_reg_514_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tCh_fu_255_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tCh_reg_518 : STD_LOGIC_VECTOR (7 downto 0);
    signal tCh_reg_518_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tLen_fu_259_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tLen_reg_524 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln187_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln187_reg_529 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln187_reg_529_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln187_reg_529_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln189_fu_357_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln189_reg_538 : STD_LOGIC_VECTOR (8 downto 0);
    signal length_code51_load_reg_543 : STD_LOGIC_VECTOR (4 downto 0);
    signal lcl_dyn_ltree_V_addr_8_reg_553 : STD_LOGIC_VECTOR (8 downto 0);
    signal lcl_dyn_dtree_V_addr_reg_559 : STD_LOGIC_VECTOR (4 downto 0);
    signal lcl_dyn_ltree_V_addr_reg_565 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln188_fu_310_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln189_fu_399_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln190_fu_432_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln191_fu_437_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_fu_442_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tOffset2_9_fu_94 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal tOffset1_9_fu_98 : STD_LOGIC_VECTOR (7 downto 0);
    signal just_started_fu_102 : STD_LOGIC_VECTOR (0 downto 0);
    signal next_state_fu_106 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_next_state_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_32_fu_110 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln257_fu_378_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln257_15_fu_390_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_s_fu_403_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln257_16_fu_415_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_315_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln_fu_341_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln189_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tOffset_cast_fu_331_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal xor_ln189_fu_351_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln188_8_fu_423_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ltreeIdx_fu_426_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op74_load_state3 : BOOLEAN;
    signal ap_enable_operation_74 : BOOLEAN;
    signal ap_enable_state3_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op85_load_state4 : BOOLEAN;
    signal ap_enable_operation_85 : BOOLEAN;
    signal ap_enable_state4_pp0_iter3_stage0 : BOOLEAN;
    signal ap_predicate_op87_store_state4 : BOOLEAN;
    signal ap_enable_operation_87 : BOOLEAN;
    signal ap_predicate_op94_store_state4 : BOOLEAN;
    signal ap_enable_operation_94 : BOOLEAN;
    signal ap_predicate_op80_load_state3 : BOOLEAN;
    signal ap_enable_operation_80 : BOOLEAN;
    signal ap_predicate_op92_load_state4 : BOOLEAN;
    signal ap_enable_operation_92 : BOOLEAN;
    signal ap_predicate_op77_load_state3 : BOOLEAN;
    signal ap_enable_operation_77 : BOOLEAN;
    signal ap_predicate_op88_load_state4 : BOOLEAN;
    signal ap_enable_operation_88 : BOOLEAN;
    signal ap_predicate_op90_store_state4 : BOOLEAN;
    signal ap_enable_operation_90 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_476 : BOOLEAN;
    signal ap_condition_482 : BOOLEAN;
    signal ap_condition_487 : BOOLEAN;
    signal ap_condition_492 : BOOLEAN;
    signal ap_condition_495 : BOOLEAN;
    signal ap_condition_501 : BOOLEAN;
    signal ap_condition_504 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component gzipcMulticoreStreaming_lz77DivideStream_14_0_Pipeline_lz77_divide_length_code51_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component gzipcMulticoreStreaming_lz77DivideStream_14_0_Pipeline_lz77_divide_dist_code22_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    length_code51_U : component gzipcMulticoreStreaming_lz77DivideStream_14_0_Pipeline_lz77_divide_length_code51_ROM_AUTO_1R
    generic map (
        DataWidth => 5,
        AddressRange => 259,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => length_code51_address0,
        ce0 => length_code51_ce0,
        q0 => length_code51_q0);

    dist_code22_U : component gzipcMulticoreStreaming_lz77DivideStream_14_0_Pipeline_lz77_divide_dist_code22_ROM_AUTO_1R
    generic map (
        DataWidth => 5,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dist_code22_address0,
        ce0 => dist_code22_ce0,
        q0 => dist_code22_q0);

    flow_control_loop_pipe_sequential_init_U : component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    just_started_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_const_boolean_1 = ap_condition_476)) then 
                    just_started_fu_102 <= ap_const_lv1_0;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    just_started_fu_102 <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;

    next_state_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_const_boolean_1 = ap_condition_495)) then 
                    next_state_fu_106(0) <= '0';
                    next_state_fu_106(1) <= '0';
                elsif ((ap_const_boolean_1 = ap_condition_492)) then 
                    next_state_fu_106(0) <= '1';
                    next_state_fu_106(1) <= '0';
                elsif (((ap_sig_allocacmp_next_state_8 = ap_const_lv32_2) and (ap_start_int = ap_const_logic_1))) then 
                    next_state_fu_106(0) <= '0';
                    next_state_fu_106(1) <= '0';
                elsif (((ap_sig_allocacmp_next_state_8 = ap_const_lv32_1) and (ap_start_int = ap_const_logic_1))) then 
                    next_state_fu_106(0) <= '0';
                    next_state_fu_106(1) <= '1';
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    next_state_fu_106(0) <= '0';
                    next_state_fu_106(1) <= '0';
                end if;
            end if; 
        end if;
    end process;

    p_Result_32_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_Result_32_fu_110 <= ap_const_lv9_0;
                elsif ((ap_const_boolean_1 = ap_condition_504)) then 
                    p_Result_32_fu_110 <= zext_ln257_16_fu_415_p1;
                elsif ((ap_const_boolean_1 = ap_condition_501)) then 
                    p_Result_32_fu_110 <= p_Result_s_fu_403_p3;
                elsif (((next_state_8_reg_510 = ap_const_lv32_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    p_Result_32_fu_110 <= zext_ln257_15_fu_390_p1;
                elsif (((next_state_8_reg_510 = ap_const_lv32_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    p_Result_32_fu_110 <= zext_ln257_fu_378_p1;
                end if;
            end if; 
        end if;
    end process;

    tOffset1_9_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_const_boolean_1 = ap_condition_476)) then 
                    tOffset1_9_fu_98 <= boosterStream_dout(23 downto 16);
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    tOffset1_9_fu_98 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    tOffset2_9_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_const_boolean_1 = ap_condition_476)) then 
                    tOffset2_9_fu_94 <= boosterStream_dout(31 downto 24);
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    tOffset2_9_fu_94 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln187_reg_529_pp0_iter1_reg <= icmp_ln187_reg_529;
                    next_state_8_reg_510(1 downto 0) <= ap_sig_allocacmp_next_state_8(1 downto 0);
                    next_state_8_reg_510_pp0_iter1_reg(1 downto 0) <= next_state_8_reg_510(1 downto 0);
                tCh_reg_518_pp0_iter1_reg <= tCh_reg_518;
                tmp_strobe_V_reg_514_pp0_iter1_reg <= tmp_strobe_V_reg_514;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_sig_allocacmp_next_state_8 = ap_const_lv32_1)) and not((ap_sig_allocacmp_next_state_8 = ap_const_lv32_2)) and (tmp_strobe_V_fu_247_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln187_reg_529 <= icmp_ln187_fu_289_p2;
                tCh_reg_518 <= tCh_fu_255_p1;
                tLen_reg_524 <= boosterStream_dout(15 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln187_reg_529_pp0_iter2_reg <= icmp_ln187_reg_529_pp0_iter1_reg;
                    next_state_8_reg_510_pp0_iter2_reg(1 downto 0) <= next_state_8_reg_510_pp0_iter1_reg(1 downto 0);
                tmp_strobe_V_reg_514_pp0_iter2_reg <= tmp_strobe_V_reg_514_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_2)) and not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_strobe_V_reg_514_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln187_reg_529_pp0_iter1_reg = ap_const_lv1_0))) then
                lcl_dyn_dtree_V_addr_reg_559 <= zext_ln191_fu_437_p1(5 - 1 downto 0);
                lcl_dyn_ltree_V_addr_8_reg_553 <= zext_ln190_fu_432_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_2)) and not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_strobe_V_reg_514_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln187_reg_529_pp0_iter1_reg = ap_const_lv1_1))) then
                    lcl_dyn_ltree_V_addr_reg_565(7 downto 0) <= zext_ln197_fu_442_p1(9 - 1 downto 0)(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((next_state_8_reg_510 = ap_const_lv32_1)) and not((next_state_8_reg_510 = ap_const_lv32_2)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_strobe_V_reg_514 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln187_reg_529 = ap_const_lv1_0))) then
                length_code51_load_reg_543 <= length_code51_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_sig_allocacmp_next_state_8 = ap_const_lv32_1)) and not((ap_sig_allocacmp_next_state_8 = ap_const_lv32_2)) and (tmp_strobe_V_fu_247_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln187_fu_289_p2 = ap_const_lv1_0))) then
                select_ln189_reg_538 <= select_ln189_fu_357_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_sig_allocacmp_next_state_8 = ap_const_lv32_1)) and not((ap_sig_allocacmp_next_state_8 = ap_const_lv32_2)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_strobe_V_reg_514 <= boosterStream_dout(32 downto 32);
            end if;
        end if;
    end process;
    next_state_8_reg_510(31 downto 2) <= "000000000000000000000000000000";
    next_state_8_reg_510_pp0_iter1_reg(31 downto 2) <= "000000000000000000000000000000";
    next_state_8_reg_510_pp0_iter2_reg(31 downto 2) <= "000000000000000000000000000000";
    lcl_dyn_ltree_V_addr_reg_565(8) <= '0';
    next_state_fu_106(31 downto 2) <= "000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, boosterStream_empty_n, ap_predicate_op30_read_state1, lz77Stream_0_full_n, ap_predicate_op83_write_state3, ap_start_int)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_predicate_op83_write_state3 = ap_const_boolean_1) and (lz77Stream_0_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (boosterStream_empty_n = ap_const_logic_0) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, boosterStream_empty_n, ap_predicate_op30_read_state1, lz77Stream_0_full_n, ap_predicate_op83_write_state3, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_predicate_op83_write_state3 = ap_const_boolean_1) and (lz77Stream_0_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (boosterStream_empty_n = ap_const_logic_0) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, boosterStream_empty_n, ap_predicate_op30_read_state1, lz77Stream_0_full_n, ap_predicate_op83_write_state3, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_predicate_op83_write_state3 = ap_const_boolean_1) and (lz77Stream_0_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (boosterStream_empty_n = ap_const_logic_0) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(boosterStream_empty_n, ap_predicate_op30_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (boosterStream_empty_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter2_assign_proc : process(lz77Stream_0_full_n, ap_predicate_op83_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_predicate_op83_write_state3 = ap_const_boolean_1) and (lz77Stream_0_full_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_476_assign_proc : process(tmp_strobe_V_fu_247_p3, ap_sig_allocacmp_next_state_8, ap_start_int)
    begin
                ap_condition_476 <= (not((ap_sig_allocacmp_next_state_8 = ap_const_lv32_1)) and not((ap_sig_allocacmp_next_state_8 = ap_const_lv32_2)) and (tmp_strobe_V_fu_247_p3 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1));
    end process;


    ap_condition_482_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_strobe_V_reg_514_pp0_iter1_reg, next_state_8_reg_510_pp0_iter1_reg, ap_block_pp0_stage0)
    begin
                ap_condition_482 <= (not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_2)) and not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_strobe_V_reg_514_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_condition_487_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, next_state_8_reg_510_pp0_iter2_reg, tmp_strobe_V_reg_514_pp0_iter2_reg)
    begin
                ap_condition_487 <= (not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_1)) and not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_2)) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_strobe_V_reg_514_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_492_assign_proc : process(tmp_strobe_V_fu_247_p3, icmp_ln187_fu_289_p2, ap_sig_allocacmp_next_state_8, ap_start_int)
    begin
                ap_condition_492 <= (not((ap_sig_allocacmp_next_state_8 = ap_const_lv32_1)) and not((ap_sig_allocacmp_next_state_8 = ap_const_lv32_2)) and (tmp_strobe_V_fu_247_p3 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (icmp_ln187_fu_289_p2 = ap_const_lv1_0));
    end process;


    ap_condition_495_assign_proc : process(tmp_strobe_V_fu_247_p3, icmp_ln187_fu_289_p2, ap_sig_allocacmp_next_state_8, ap_start_int)
    begin
                ap_condition_495 <= (not((ap_sig_allocacmp_next_state_8 = ap_const_lv32_1)) and not((ap_sig_allocacmp_next_state_8 = ap_const_lv32_2)) and (tmp_strobe_V_fu_247_p3 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (icmp_ln187_fu_289_p2 = ap_const_lv1_1));
    end process;


    ap_condition_501_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_strobe_V_reg_514, next_state_8_reg_510, icmp_ln187_reg_529)
    begin
                ap_condition_501 <= (not((next_state_8_reg_510 = ap_const_lv32_1)) and not((next_state_8_reg_510 = ap_const_lv32_2)) and (tmp_strobe_V_reg_514 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln187_reg_529 = ap_const_lv1_0));
    end process;


    ap_condition_504_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_strobe_V_reg_514, next_state_8_reg_510, icmp_ln187_reg_529)
    begin
                ap_condition_504 <= (not((next_state_8_reg_510 = ap_const_lv32_1)) and not((next_state_8_reg_510 = ap_const_lv32_2)) and (tmp_strobe_V_reg_514 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln187_reg_529 = ap_const_lv1_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, tmp_strobe_V_fu_247_p3, ap_sig_allocacmp_next_state_8, ap_start_int)
    begin
        if ((not((ap_sig_allocacmp_next_state_8 = ap_const_lv32_1)) and not((ap_sig_allocacmp_next_state_8 = ap_const_lv32_2)) and (tmp_strobe_V_fu_247_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_74_assign_proc : process(ap_predicate_op74_load_state3)
    begin
                ap_enable_operation_74 <= (ap_predicate_op74_load_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_77_assign_proc : process(ap_predicate_op77_load_state3)
    begin
                ap_enable_operation_77 <= (ap_predicate_op77_load_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_80_assign_proc : process(ap_predicate_op80_load_state3)
    begin
                ap_enable_operation_80 <= (ap_predicate_op80_load_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_85_assign_proc : process(ap_predicate_op85_load_state4)
    begin
                ap_enable_operation_85 <= (ap_predicate_op85_load_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_87_assign_proc : process(ap_predicate_op87_store_state4)
    begin
                ap_enable_operation_87 <= (ap_predicate_op87_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_88_assign_proc : process(ap_predicate_op88_load_state4)
    begin
                ap_enable_operation_88 <= (ap_predicate_op88_load_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_90_assign_proc : process(ap_predicate_op90_store_state4)
    begin
                ap_enable_operation_90 <= (ap_predicate_op90_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_92_assign_proc : process(ap_predicate_op92_load_state4)
    begin
                ap_enable_operation_92 <= (ap_predicate_op92_load_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_94_assign_proc : process(ap_predicate_op94_store_state4)
    begin
                ap_enable_operation_94 <= (ap_predicate_op94_store_state4 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state3_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state3_pp0_iter2_stage0 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state4_pp0_iter3_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3)
    begin
                ap_enable_state4_pp0_iter3_stage0 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_predicate_op30_read_state1_assign_proc : process(ap_sig_allocacmp_next_state_8)
    begin
                ap_predicate_op30_read_state1 <= (not((ap_sig_allocacmp_next_state_8 = ap_const_lv32_1)) and not((ap_sig_allocacmp_next_state_8 = ap_const_lv32_2)));
    end process;


    ap_predicate_op74_load_state3_assign_proc : process(tmp_strobe_V_reg_514_pp0_iter1_reg, next_state_8_reg_510_pp0_iter1_reg, icmp_ln187_reg_529_pp0_iter1_reg)
    begin
                ap_predicate_op74_load_state3 <= (not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_2)) and not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_1)) and (tmp_strobe_V_reg_514_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln187_reg_529_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op77_load_state3_assign_proc : process(tmp_strobe_V_reg_514_pp0_iter1_reg, next_state_8_reg_510_pp0_iter1_reg, icmp_ln187_reg_529_pp0_iter1_reg)
    begin
                ap_predicate_op77_load_state3 <= (not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_2)) and not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_1)) and (tmp_strobe_V_reg_514_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln187_reg_529_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op80_load_state3_assign_proc : process(tmp_strobe_V_reg_514_pp0_iter1_reg, next_state_8_reg_510_pp0_iter1_reg, icmp_ln187_reg_529_pp0_iter1_reg)
    begin
                ap_predicate_op80_load_state3 <= (not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_2)) and not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_1)) and (tmp_strobe_V_reg_514_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln187_reg_529_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op83_write_state3_assign_proc : process(tmp_strobe_V_reg_514_pp0_iter1_reg, next_state_8_reg_510_pp0_iter1_reg)
    begin
                ap_predicate_op83_write_state3 <= ((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_2) or ((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_1) or (tmp_strobe_V_reg_514_pp0_iter1_reg = ap_const_lv1_1)));
    end process;


    ap_predicate_op85_load_state4_assign_proc : process(next_state_8_reg_510_pp0_iter2_reg, tmp_strobe_V_reg_514_pp0_iter2_reg, icmp_ln187_reg_529_pp0_iter2_reg)
    begin
                ap_predicate_op85_load_state4 <= (not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_1)) and not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_2)) and (icmp_ln187_reg_529_pp0_iter2_reg = ap_const_lv1_0) and (tmp_strobe_V_reg_514_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op87_store_state4_assign_proc : process(next_state_8_reg_510_pp0_iter2_reg, tmp_strobe_V_reg_514_pp0_iter2_reg, icmp_ln187_reg_529_pp0_iter2_reg)
    begin
                ap_predicate_op87_store_state4 <= (not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_1)) and not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_2)) and (icmp_ln187_reg_529_pp0_iter2_reg = ap_const_lv1_0) and (tmp_strobe_V_reg_514_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op88_load_state4_assign_proc : process(next_state_8_reg_510_pp0_iter2_reg, tmp_strobe_V_reg_514_pp0_iter2_reg, icmp_ln187_reg_529_pp0_iter2_reg)
    begin
                ap_predicate_op88_load_state4 <= (not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_1)) and not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_2)) and (icmp_ln187_reg_529_pp0_iter2_reg = ap_const_lv1_0) and (tmp_strobe_V_reg_514_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op90_store_state4_assign_proc : process(next_state_8_reg_510_pp0_iter2_reg, tmp_strobe_V_reg_514_pp0_iter2_reg, icmp_ln187_reg_529_pp0_iter2_reg)
    begin
                ap_predicate_op90_store_state4 <= (not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_1)) and not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_2)) and (icmp_ln187_reg_529_pp0_iter2_reg = ap_const_lv1_0) and (tmp_strobe_V_reg_514_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op92_load_state4_assign_proc : process(next_state_8_reg_510_pp0_iter2_reg, tmp_strobe_V_reg_514_pp0_iter2_reg, icmp_ln187_reg_529_pp0_iter2_reg)
    begin
                ap_predicate_op92_load_state4 <= (not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_1)) and not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_2)) and (icmp_ln187_reg_529_pp0_iter2_reg = ap_const_lv1_1) and (tmp_strobe_V_reg_514_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op94_store_state4_assign_proc : process(next_state_8_reg_510_pp0_iter2_reg, tmp_strobe_V_reg_514_pp0_iter2_reg, icmp_ln187_reg_529_pp0_iter2_reg)
    begin
                ap_predicate_op94_store_state4 <= (not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_1)) and not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_2)) and (icmp_ln187_reg_529_pp0_iter2_reg = ap_const_lv1_1) and (tmp_strobe_V_reg_514_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_next_state_8_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, next_state_fu_106)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_next_state_8 <= ap_const_lv32_0_1;
        else 
            ap_sig_allocacmp_next_state_8 <= next_state_fu_106;
        end if; 
    end process;


    boosterStream_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, boosterStream_empty_n, ap_predicate_op30_read_state1, ap_block_pp0_stage0, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op30_read_state1 = ap_const_boolean_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            boosterStream_blk_n <= boosterStream_empty_n;
        else 
            boosterStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    boosterStream_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_predicate_op30_read_state1, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op30_read_state1 = ap_const_boolean_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            boosterStream_read <= ap_const_logic_1;
        else 
            boosterStream_read <= ap_const_logic_0;
        end if; 
    end process;

    dist_code22_address0 <= zext_ln189_fu_399_p1(9 - 1 downto 0);

    dist_code22_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dist_code22_ce0 <= ap_const_logic_1;
        else 
            dist_code22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln187_fu_289_p2 <= "1" when (tLen_fu_259_p4 = ap_const_lv8_0) else "0";
    icmp_ln189_fu_325_p2 <= "1" when (tmp_fu_315_p4 = ap_const_lv8_0) else "0";
    just_started_1_out <= just_started_fu_102;

    just_started_1_out_ap_vld_assign_proc : process(tmp_strobe_V_reg_514_pp0_iter1_reg, next_state_8_reg_510_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if ((not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_2)) and not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_strobe_V_reg_514_pp0_iter1_reg = ap_const_lv1_0))) then 
            just_started_1_out_ap_vld <= ap_const_logic_1;
        else 
            just_started_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    lcl_dyn_dtree_V_address0 <= zext_ln191_fu_437_p1(5 - 1 downto 0);
    lcl_dyn_dtree_V_address1 <= lcl_dyn_dtree_V_addr_reg_559;

    lcl_dyn_dtree_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lcl_dyn_dtree_V_ce0 <= ap_const_logic_1;
        else 
            lcl_dyn_dtree_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lcl_dyn_dtree_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            lcl_dyn_dtree_V_ce1 <= ap_const_logic_1;
        else 
            lcl_dyn_dtree_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    lcl_dyn_dtree_V_d1 <= std_logic_vector(unsigned(lcl_dyn_dtree_V_q0) + unsigned(ap_const_lv14_1));

    lcl_dyn_dtree_V_we1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, next_state_8_reg_510_pp0_iter2_reg, tmp_strobe_V_reg_514_pp0_iter2_reg, icmp_ln187_reg_529_pp0_iter2_reg)
    begin
        if ((not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_1)) and not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_2)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln187_reg_529_pp0_iter2_reg = ap_const_lv1_0) and (tmp_strobe_V_reg_514_pp0_iter2_reg = ap_const_lv1_1))) then 
            lcl_dyn_dtree_V_we1 <= ap_const_logic_1;
        else 
            lcl_dyn_dtree_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    lcl_dyn_ltree_V_address0_assign_proc : process(icmp_ln187_reg_529_pp0_iter1_reg, zext_ln190_fu_432_p1, zext_ln197_fu_442_p1, ap_condition_482)
    begin
        if ((ap_const_boolean_1 = ap_condition_482)) then
            if ((icmp_ln187_reg_529_pp0_iter1_reg = ap_const_lv1_1)) then 
                lcl_dyn_ltree_V_address0 <= zext_ln197_fu_442_p1(9 - 1 downto 0);
            elsif ((icmp_ln187_reg_529_pp0_iter1_reg = ap_const_lv1_0)) then 
                lcl_dyn_ltree_V_address0 <= zext_ln190_fu_432_p1(9 - 1 downto 0);
            else 
                lcl_dyn_ltree_V_address0 <= "XXXXXXXXX";
            end if;
        else 
            lcl_dyn_ltree_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    lcl_dyn_ltree_V_address1_assign_proc : process(icmp_ln187_reg_529_pp0_iter2_reg, lcl_dyn_ltree_V_addr_8_reg_553, lcl_dyn_ltree_V_addr_reg_565, ap_condition_487)
    begin
        if ((ap_const_boolean_1 = ap_condition_487)) then
            if ((icmp_ln187_reg_529_pp0_iter2_reg = ap_const_lv1_1)) then 
                lcl_dyn_ltree_V_address1 <= lcl_dyn_ltree_V_addr_reg_565;
            elsif ((icmp_ln187_reg_529_pp0_iter2_reg = ap_const_lv1_0)) then 
                lcl_dyn_ltree_V_address1 <= lcl_dyn_ltree_V_addr_8_reg_553;
            else 
                lcl_dyn_ltree_V_address1 <= "XXXXXXXXX";
            end if;
        else 
            lcl_dyn_ltree_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    lcl_dyn_ltree_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_strobe_V_reg_514_pp0_iter1_reg, next_state_8_reg_510_pp0_iter1_reg, ap_block_pp0_stage0_11001, icmp_ln187_reg_529_pp0_iter1_reg)
    begin
        if (((not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_2)) and not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_strobe_V_reg_514_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln187_reg_529_pp0_iter1_reg = ap_const_lv1_1)) or (not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_2)) and not((next_state_8_reg_510_pp0_iter1_reg = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_strobe_V_reg_514_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln187_reg_529_pp0_iter1_reg = ap_const_lv1_0)))) then 
            lcl_dyn_ltree_V_ce0 <= ap_const_logic_1;
        else 
            lcl_dyn_ltree_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lcl_dyn_ltree_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, next_state_8_reg_510_pp0_iter2_reg, tmp_strobe_V_reg_514_pp0_iter2_reg, icmp_ln187_reg_529_pp0_iter2_reg)
    begin
        if (((not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_1)) and not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_2)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln187_reg_529_pp0_iter2_reg = ap_const_lv1_1) and (tmp_strobe_V_reg_514_pp0_iter2_reg = ap_const_lv1_1)) or (not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_1)) and not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_2)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln187_reg_529_pp0_iter2_reg = ap_const_lv1_0) and (tmp_strobe_V_reg_514_pp0_iter2_reg = ap_const_lv1_1)))) then 
            lcl_dyn_ltree_V_ce1 <= ap_const_logic_1;
        else 
            lcl_dyn_ltree_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    lcl_dyn_ltree_V_d1 <= std_logic_vector(unsigned(lcl_dyn_ltree_V_q0) + unsigned(ap_const_lv14_1));

    lcl_dyn_ltree_V_we1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, next_state_8_reg_510_pp0_iter2_reg, tmp_strobe_V_reg_514_pp0_iter2_reg, icmp_ln187_reg_529_pp0_iter2_reg)
    begin
        if (((not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_1)) and not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_2)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln187_reg_529_pp0_iter2_reg = ap_const_lv1_1) and (tmp_strobe_V_reg_514_pp0_iter2_reg = ap_const_lv1_1)) or (not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_1)) and not((next_state_8_reg_510_pp0_iter2_reg = ap_const_lv32_2)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln187_reg_529_pp0_iter2_reg = ap_const_lv1_0) and (tmp_strobe_V_reg_514_pp0_iter2_reg = ap_const_lv1_1)))) then 
            lcl_dyn_ltree_V_we1 <= ap_const_logic_1;
        else 
            lcl_dyn_ltree_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    length_code51_address0 <= zext_ln188_fu_310_p1(9 - 1 downto 0);

    length_code51_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            length_code51_ce0 <= ap_const_logic_1;
        else 
            length_code51_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ltreeIdx_fu_426_p2 <= std_logic_vector(unsigned(zext_ln188_8_fu_423_p1) + unsigned(ap_const_lv9_101));

    lz77Stream_0_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, lz77Stream_0_full_n, ap_predicate_op83_write_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op83_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lz77Stream_0_blk_n <= lz77Stream_0_full_n;
        else 
            lz77Stream_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lz77Stream_0_din <= (ap_const_lv1_1 & p_Result_32_fu_110);

    lz77Stream_0_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op83_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op83_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lz77Stream_0_write <= ap_const_logic_1;
        else 
            lz77Stream_0_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_s_fu_403_p3 <= (ap_const_lv1_1 & tLen_reg_524);
    select_ln189_fu_357_p3 <= 
        tOffset_cast_fu_331_p4 when (icmp_ln189_fu_325_p2(0) = '1') else 
        xor_ln189_fu_351_p2;
    tCh_fu_255_p1 <= boosterStream_dout(8 - 1 downto 0);
    tLen_fu_259_p4 <= boosterStream_dout(15 downto 8);
    tOffset_cast_fu_331_p4 <= boosterStream_dout(24 downto 16);
    tmp_fu_315_p4 <= boosterStream_dout(31 downto 24);
    tmp_strobe_V_fu_247_p3 <= boosterStream_dout(32 downto 32);
    trunc_ln_fu_341_p4 <= boosterStream_dout(31 downto 23);
    xor_ln189_fu_351_p2 <= (trunc_ln_fu_341_p4 xor ap_const_lv9_100);
    zext_ln188_8_fu_423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(length_code51_load_reg_543),9));
    zext_ln188_fu_310_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tLen_fu_259_p4),64));
    zext_ln189_fu_399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln189_reg_538),64));
    zext_ln190_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ltreeIdx_fu_426_p2),64));
    zext_ln191_fu_437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dist_code22_q0),64));
    zext_ln197_fu_442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tCh_reg_518_pp0_iter1_reg),64));
    zext_ln257_15_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tOffset2_9_fu_94),9));
    zext_ln257_16_fu_415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tCh_reg_518),9));
    zext_ln257_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tOffset1_9_fu_98),9));
end behav;
