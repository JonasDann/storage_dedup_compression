-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_processBitLength_14_Pipeline_compute_histogram is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    digit_histogram_V_103_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_102_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_101_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_100_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_99_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_98_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_97_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_96_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_95_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_94_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_93_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_92_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_91_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_90_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_89_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_88_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    prev_freq_V : IN STD_LOGIC_VECTOR (13 downto 0);
    heapLength_11 : IN STD_LOGIC_VECTOR (15 downto 0);
    prev_sorting_value_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    prev_sorting_value_V_ce0 : OUT STD_LOGIC;
    prev_sorting_value_V_we0 : OUT STD_LOGIC;
    prev_sorting_value_V_d0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    prev_sorting_frequency_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    prev_sorting_frequency_V_ce0 : OUT STD_LOGIC;
    prev_sorting_frequency_V_we0 : OUT STD_LOGIC;
    prev_sorting_frequency_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    heap_value_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    heap_value_V_ce0 : OUT STD_LOGIC;
    heap_value_V_q0 : IN STD_LOGIC_VECTOR (9 downto 0);
    heap_frequency_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    heap_frequency_V_ce0 : OUT STD_LOGIC;
    heap_frequency_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    zext_ln143_1 : IN STD_LOGIC_VECTOR (3 downto 0);
    current_digit_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    current_digit_V_ce0 : OUT STD_LOGIC;
    current_digit_V_we0 : OUT STD_LOGIC;
    current_digit_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    digit_histogram_V_104_out_i : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_104_out_o : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_104_out_o_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_105_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_105_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_106_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_106_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_107_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_107_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_108_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_108_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_109_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_109_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_110_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_110_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_111_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_111_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_112_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_112_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_113_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_113_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_114_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_114_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_115_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_115_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_116_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_116_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_117_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_117_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_118_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_118_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_119_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_119_out_ap_vld : OUT STD_LOGIC;
    not_sorted_1_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    not_sorted_1_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of gzipcMulticoreStreaming_processBitLength_14_Pipeline_compute_histogram is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln155_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal not_sorted_reg_517 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln143_1_cast_fu_529_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln143_1_cast_reg_1051 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln155_reg_1056 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln155_reg_1056_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln158_fu_639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln158_reg_1060 : STD_LOGIC_VECTOR (63 downto 0);
    signal digit_V_fu_659_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal digit_V_reg_1077 : STD_LOGIC_VECTOR (3 downto 0);
    signal not_sorted_1_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sorted_1_reg_1082 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_not_sorted_phi_fu_521_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal digit_histogram_V_52_fu_770_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal prev_freq_V_1_fu_156 : STD_LOGIC_VECTOR (13 downto 0);
    signal j_fu_160 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_11_fu_633_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_j_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal digit_histogram_V_fu_164 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_38_fu_168 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_39_fu_172 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_40_fu_176 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_41_fu_180 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_42_fu_184 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_43_fu_188 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_44_fu_192 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_45_fu_196 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_46_fu_200 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_47_fu_204 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_48_fu_208 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_49_fu_212 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_50_fu_216 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_51_fu_220 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln1737_fu_650_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal lshr_ln1737_fu_654_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln1081_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_733_p18 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component gzipcMulticoreStreaming_mux_164_5_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        din3 : IN STD_LOGIC_VECTOR (4 downto 0);
        din4 : IN STD_LOGIC_VECTOR (4 downto 0);
        din5 : IN STD_LOGIC_VECTOR (4 downto 0);
        din6 : IN STD_LOGIC_VECTOR (4 downto 0);
        din7 : IN STD_LOGIC_VECTOR (4 downto 0);
        din8 : IN STD_LOGIC_VECTOR (4 downto 0);
        din9 : IN STD_LOGIC_VECTOR (4 downto 0);
        din10 : IN STD_LOGIC_VECTOR (4 downto 0);
        din11 : IN STD_LOGIC_VECTOR (4 downto 0);
        din12 : IN STD_LOGIC_VECTOR (4 downto 0);
        din13 : IN STD_LOGIC_VECTOR (4 downto 0);
        din14 : IN STD_LOGIC_VECTOR (4 downto 0);
        din15 : IN STD_LOGIC_VECTOR (4 downto 0);
        din16 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_164_5_1_1_U1532 : component gzipcMulticoreStreaming_mux_164_5_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        din2_WIDTH => 5,
        din3_WIDTH => 5,
        din4_WIDTH => 5,
        din5_WIDTH => 5,
        din6_WIDTH => 5,
        din7_WIDTH => 5,
        din8_WIDTH => 5,
        din9_WIDTH => 5,
        din10_WIDTH => 5,
        din11_WIDTH => 5,
        din12_WIDTH => 5,
        din13_WIDTH => 5,
        din14_WIDTH => 5,
        din15_WIDTH => 5,
        din16_WIDTH => 4,
        dout_WIDTH => 5)
    port map (
        din0 => digit_histogram_V_fu_164,
        din1 => digit_histogram_V_38_fu_168,
        din2 => digit_histogram_V_39_fu_172,
        din3 => digit_histogram_V_40_fu_176,
        din4 => digit_histogram_V_41_fu_180,
        din5 => digit_histogram_V_42_fu_184,
        din6 => digit_histogram_V_43_fu_188,
        din7 => digit_histogram_V_44_fu_192,
        din8 => digit_histogram_V_45_fu_196,
        din9 => digit_histogram_V_46_fu_200,
        din10 => digit_histogram_V_47_fu_204,
        din11 => digit_histogram_V_48_fu_208,
        din12 => digit_histogram_V_49_fu_212,
        din13 => digit_histogram_V_50_fu_216,
        din14 => digit_histogram_V_51_fu_220,
        din15 => digit_histogram_V_104_out_i,
        din16 => digit_V_reg_1077,
        dout => tmp_s_fu_733_p18);

    flow_control_loop_pipe_sequential_init_U : component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    digit_histogram_V_38_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_38_fu_168 <= digit_histogram_V_89_reload;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_reg_1077 = ap_const_lv4_1))) then 
                    digit_histogram_V_38_fu_168 <= digit_histogram_V_52_fu_770_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_39_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_39_fu_172 <= digit_histogram_V_90_reload;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_reg_1077 = ap_const_lv4_2))) then 
                    digit_histogram_V_39_fu_172 <= digit_histogram_V_52_fu_770_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_40_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_40_fu_176 <= digit_histogram_V_91_reload;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_reg_1077 = ap_const_lv4_3))) then 
                    digit_histogram_V_40_fu_176 <= digit_histogram_V_52_fu_770_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_41_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_41_fu_180 <= digit_histogram_V_92_reload;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_reg_1077 = ap_const_lv4_4))) then 
                    digit_histogram_V_41_fu_180 <= digit_histogram_V_52_fu_770_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_42_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_42_fu_184 <= digit_histogram_V_93_reload;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_reg_1077 = ap_const_lv4_5))) then 
                    digit_histogram_V_42_fu_184 <= digit_histogram_V_52_fu_770_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_43_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_43_fu_188 <= digit_histogram_V_94_reload;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_reg_1077 = ap_const_lv4_6))) then 
                    digit_histogram_V_43_fu_188 <= digit_histogram_V_52_fu_770_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_44_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_44_fu_192 <= digit_histogram_V_95_reload;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_reg_1077 = ap_const_lv4_7))) then 
                    digit_histogram_V_44_fu_192 <= digit_histogram_V_52_fu_770_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_45_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_45_fu_196 <= digit_histogram_V_96_reload;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_reg_1077 = ap_const_lv4_8))) then 
                    digit_histogram_V_45_fu_196 <= digit_histogram_V_52_fu_770_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_46_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_46_fu_200 <= digit_histogram_V_97_reload;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_reg_1077 = ap_const_lv4_9))) then 
                    digit_histogram_V_46_fu_200 <= digit_histogram_V_52_fu_770_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_47_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_47_fu_204 <= digit_histogram_V_98_reload;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_reg_1077 = ap_const_lv4_A))) then 
                    digit_histogram_V_47_fu_204 <= digit_histogram_V_52_fu_770_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_48_fu_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_48_fu_208 <= digit_histogram_V_99_reload;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_reg_1077 = ap_const_lv4_B))) then 
                    digit_histogram_V_48_fu_208 <= digit_histogram_V_52_fu_770_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_49_fu_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_49_fu_212 <= digit_histogram_V_100_reload;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_reg_1077 = ap_const_lv4_C))) then 
                    digit_histogram_V_49_fu_212 <= digit_histogram_V_52_fu_770_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_50_fu_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_50_fu_216 <= digit_histogram_V_101_reload;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_reg_1077 = ap_const_lv4_D))) then 
                    digit_histogram_V_50_fu_216 <= digit_histogram_V_52_fu_770_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_51_fu_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_51_fu_220 <= digit_histogram_V_102_reload;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_reg_1077 = ap_const_lv4_E))) then 
                    digit_histogram_V_51_fu_220 <= digit_histogram_V_52_fu_770_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_fu_164 <= digit_histogram_V_88_reload;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_reg_1077 = ap_const_lv4_0))) then 
                    digit_histogram_V_fu_164 <= digit_histogram_V_52_fu_770_p2;
                end if;
            end if; 
        end if;
    end process;

    j_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln155_fu_627_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_fu_160 <= j_11_fu_633_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_160 <= ap_const_lv16_0;
                end if;
            end if; 
        end if;
    end process;

    not_sorted_reg_517_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln155_reg_1056_pp0_iter1_reg = ap_const_lv1_0))) then 
                not_sorted_reg_517 <= not_sorted_1_reg_1082;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                not_sorted_reg_517 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    prev_freq_V_1_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    prev_freq_V_1_fu_156 <= prev_freq_V;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln155_reg_1056 = ap_const_lv1_0))) then 
                    prev_freq_V_1_fu_156 <= heap_frequency_V_q0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                icmp_ln155_reg_1056 <= icmp_ln155_fu_627_p2;
                icmp_ln155_reg_1056_pp0_iter1_reg <= icmp_ln155_reg_1056;
                    zext_ln143_1_cast_reg_1051(3 downto 0) <= zext_ln143_1_cast_fu_529_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_0))) then
                digit_V_reg_1077 <= digit_V_fu_659_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_0))) then
                not_sorted_1_reg_1082 <= not_sorted_1_fu_673_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln155_fu_627_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    zext_ln158_reg_1060(15 downto 0) <= zext_ln158_fu_639_p1(15 downto 0);
            end if;
        end if;
    end process;
    zext_ln143_1_cast_reg_1051(16 downto 4) <= "0000000000000";
    zext_ln158_reg_1060(63 downto 16) <= "000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln155_fu_627_p2)
    begin
        if (((icmp_ln155_fu_627_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_not_sorted_phi_fu_521_p4_assign_proc : process(ap_enable_reg_pp0_iter2, not_sorted_reg_517, icmp_ln155_reg_1056_pp0_iter1_reg, not_sorted_1_reg_1082, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln155_reg_1056_pp0_iter1_reg = ap_const_lv1_0))) then 
            ap_phi_mux_not_sorted_phi_fu_521_p4 <= not_sorted_1_reg_1082;
        else 
            ap_phi_mux_not_sorted_phi_fu_521_p4 <= not_sorted_reg_517;
        end if; 
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_10_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_loop_init, ap_block_pp0_stage0, j_fu_160)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_10 <= ap_const_lv16_0;
        else 
            ap_sig_allocacmp_j_10 <= j_fu_160;
        end if; 
    end process;

    current_digit_V_address0 <= zext_ln158_reg_1060(5 - 1 downto 0);

    current_digit_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            current_digit_V_ce0 <= ap_const_logic_1;
        else 
            current_digit_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    current_digit_V_d0 <= lshr_ln1737_fu_654_p2(4 - 1 downto 0);

    current_digit_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_0))) then 
            current_digit_V_we0 <= ap_const_logic_1;
        else 
            current_digit_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    digit_V_fu_659_p1 <= lshr_ln1737_fu_654_p2(4 - 1 downto 0);

    digit_histogram_V_104_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, digit_histogram_V_103_reload, digit_histogram_V_104_out_i, digit_V_reg_1077, ap_loop_init, ap_block_pp0_stage0, digit_histogram_V_52_fu_770_p2)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0)) then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                digit_histogram_V_104_out_o <= digit_histogram_V_103_reload;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_reg_1077 = ap_const_lv4_F))) then 
                digit_histogram_V_104_out_o <= digit_histogram_V_52_fu_770_p2;
            else 
                digit_histogram_V_104_out_o <= digit_histogram_V_104_out_i;
            end if;
        else 
            digit_histogram_V_104_out_o <= digit_histogram_V_104_out_i;
        end if; 
    end process;


    digit_histogram_V_104_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, digit_V_reg_1077, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_reg_1077 = ap_const_lv4_F)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            digit_histogram_V_104_out_o_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_104_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_105_out <= digit_histogram_V_51_fu_220;

    digit_histogram_V_105_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_1))) then 
            digit_histogram_V_105_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_105_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_106_out <= digit_histogram_V_50_fu_216;

    digit_histogram_V_106_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_1))) then 
            digit_histogram_V_106_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_106_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_107_out <= digit_histogram_V_49_fu_212;

    digit_histogram_V_107_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_1))) then 
            digit_histogram_V_107_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_107_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_108_out <= digit_histogram_V_48_fu_208;

    digit_histogram_V_108_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_1))) then 
            digit_histogram_V_108_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_108_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_109_out <= digit_histogram_V_47_fu_204;

    digit_histogram_V_109_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_1))) then 
            digit_histogram_V_109_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_109_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_110_out <= digit_histogram_V_46_fu_200;

    digit_histogram_V_110_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_1))) then 
            digit_histogram_V_110_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_110_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_111_out <= digit_histogram_V_45_fu_196;

    digit_histogram_V_111_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_1))) then 
            digit_histogram_V_111_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_111_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_112_out <= digit_histogram_V_44_fu_192;

    digit_histogram_V_112_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_1))) then 
            digit_histogram_V_112_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_112_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_113_out <= digit_histogram_V_43_fu_188;

    digit_histogram_V_113_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_1))) then 
            digit_histogram_V_113_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_113_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_114_out <= digit_histogram_V_42_fu_184;

    digit_histogram_V_114_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_1))) then 
            digit_histogram_V_114_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_114_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_115_out <= digit_histogram_V_41_fu_180;

    digit_histogram_V_115_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_1))) then 
            digit_histogram_V_115_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_115_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_116_out <= digit_histogram_V_40_fu_176;

    digit_histogram_V_116_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_1))) then 
            digit_histogram_V_116_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_116_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_117_out <= digit_histogram_V_39_fu_172;

    digit_histogram_V_117_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_1))) then 
            digit_histogram_V_117_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_117_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_118_out <= digit_histogram_V_38_fu_168;

    digit_histogram_V_118_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_1))) then 
            digit_histogram_V_118_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_118_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_119_out <= digit_histogram_V_fu_164;

    digit_histogram_V_119_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_1))) then 
            digit_histogram_V_119_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_119_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_52_fu_770_p2 <= std_logic_vector(unsigned(tmp_s_fu_733_p18) + unsigned(ap_const_lv5_1));
    heap_frequency_V_address0 <= zext_ln158_fu_639_p1(5 - 1 downto 0);

    heap_frequency_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            heap_frequency_V_ce0 <= ap_const_logic_1;
        else 
            heap_frequency_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    heap_value_V_address0 <= zext_ln158_fu_639_p1(5 - 1 downto 0);

    heap_value_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            heap_value_V_ce0 <= ap_const_logic_1;
        else 
            heap_value_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1081_fu_667_p2 <= "1" when (unsigned(prev_freq_V_1_fu_156) > unsigned(heap_frequency_V_q0)) else "0";
    icmp_ln155_fu_627_p2 <= "1" when (ap_sig_allocacmp_j_10 = heapLength_11) else "0";
    j_11_fu_633_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_10) + unsigned(ap_const_lv16_1));
    lshr_ln1737_fu_654_p2 <= std_logic_vector(shift_right(unsigned(zext_ln1737_fu_650_p1),to_integer(unsigned('0' & zext_ln143_1_cast_reg_1051(17-1 downto 0)))));
    not_sorted_1_fu_673_p2 <= (icmp_ln1081_fu_667_p2 or ap_phi_mux_not_sorted_phi_fu_521_p4);
    not_sorted_1_out <= ap_phi_mux_not_sorted_phi_fu_521_p4;

    not_sorted_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_1))) then 
            not_sorted_1_out_ap_vld <= ap_const_logic_1;
        else 
            not_sorted_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    prev_sorting_frequency_V_address0 <= zext_ln158_reg_1060(5 - 1 downto 0);

    prev_sorting_frequency_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            prev_sorting_frequency_V_ce0 <= ap_const_logic_1;
        else 
            prev_sorting_frequency_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    prev_sorting_frequency_V_d0 <= heap_frequency_V_q0;

    prev_sorting_frequency_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_0))) then 
            prev_sorting_frequency_V_we0 <= ap_const_logic_1;
        else 
            prev_sorting_frequency_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    prev_sorting_value_V_address0 <= zext_ln158_reg_1060(5 - 1 downto 0);

    prev_sorting_value_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            prev_sorting_value_V_ce0 <= ap_const_logic_1;
        else 
            prev_sorting_value_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    prev_sorting_value_V_d0 <= heap_value_V_q0;

    prev_sorting_value_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln155_reg_1056)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln155_reg_1056 = ap_const_lv1_0))) then 
            prev_sorting_value_V_we0 <= ap_const_logic_1;
        else 
            prev_sorting_value_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln143_1_cast_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln143_1),17));
    zext_ln158_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_j_10),64));
    zext_ln1737_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(heap_frequency_V_q0),17));
end behav;
