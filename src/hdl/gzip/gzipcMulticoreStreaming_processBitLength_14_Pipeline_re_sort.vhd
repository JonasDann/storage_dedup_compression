-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_processBitLength_14_Pipeline_re_sort is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    digit_location_V_135_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_134_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_133_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_132_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_131_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_130_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_129_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_128_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_127_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_126_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_125_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_124_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_123_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_122_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_121_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_120_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    heapLength_11 : IN STD_LOGIC_VECTOR (15 downto 0);
    not_sorted_1_reload : IN STD_LOGIC_VECTOR (0 downto 0);
    current_digit_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    current_digit_V_ce0 : OUT STD_LOGIC;
    current_digit_V_q0 : IN STD_LOGIC_VECTOR (3 downto 0);
    prev_sorting_value_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    prev_sorting_value_V_ce0 : OUT STD_LOGIC;
    prev_sorting_value_V_q0 : IN STD_LOGIC_VECTOR (9 downto 0);
    prev_sorting_frequency_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    prev_sorting_frequency_V_ce0 : OUT STD_LOGIC;
    prev_sorting_frequency_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    heap_value_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    heap_value_V_ce0 : OUT STD_LOGIC;
    heap_value_V_we0 : OUT STD_LOGIC;
    heap_value_V_d0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    heap_frequency_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    heap_frequency_V_ce0 : OUT STD_LOGIC;
    heap_frequency_V_we0 : OUT STD_LOGIC;
    heap_frequency_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    digit_location_V_152_out_i : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_152_out_o : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_152_out_o_ap_vld : OUT STD_LOGIC;
    digit_location_V_151_out_i : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_151_out_o : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_151_out_o_ap_vld : OUT STD_LOGIC;
    digit_location_V_150_out_i : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_150_out_o : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_150_out_o_ap_vld : OUT STD_LOGIC;
    digit_location_V_149_out_i : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_149_out_o : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_149_out_o_ap_vld : OUT STD_LOGIC;
    digit_location_V_148_out_i : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_148_out_o : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_148_out_o_ap_vld : OUT STD_LOGIC;
    digit_location_V_147_out_i : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_147_out_o : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_147_out_o_ap_vld : OUT STD_LOGIC;
    digit_location_V_146_out_i : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_146_out_o : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_146_out_o_ap_vld : OUT STD_LOGIC;
    digit_location_V_145_out_i : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_145_out_o : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_145_out_o_ap_vld : OUT STD_LOGIC;
    digit_location_V_144_out_i : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_144_out_o : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_144_out_o_ap_vld : OUT STD_LOGIC;
    digit_location_V_143_out_i : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_143_out_o : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_143_out_o_ap_vld : OUT STD_LOGIC;
    digit_location_V_142_out_i : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_142_out_o : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_142_out_o_ap_vld : OUT STD_LOGIC;
    digit_location_V_141_out_i : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_141_out_o : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_141_out_o_ap_vld : OUT STD_LOGIC;
    digit_location_V_140_out_i : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_140_out_o : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_140_out_o_ap_vld : OUT STD_LOGIC;
    digit_location_V_139_out_i : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_139_out_o : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_139_out_o_ap_vld : OUT STD_LOGIC;
    digit_location_V_138_out_i : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_138_out_o : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_location_V_138_out_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of gzipcMulticoreStreaming_processBitLength_14_Pipeline_re_sort is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal and_ln177_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln180_fu_446_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln587_fu_559_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal digit_location_V_62_fu_565_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal j_5_fu_142 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_9_fu_440_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_j : STD_LOGIC_VECTOR (15 downto 0);
    signal digit_location_V_fu_146 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln177_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_521_p18 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component gzipcMulticoreStreaming_mux_164_5_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        din3 : IN STD_LOGIC_VECTOR (4 downto 0);
        din4 : IN STD_LOGIC_VECTOR (4 downto 0);
        din5 : IN STD_LOGIC_VECTOR (4 downto 0);
        din6 : IN STD_LOGIC_VECTOR (4 downto 0);
        din7 : IN STD_LOGIC_VECTOR (4 downto 0);
        din8 : IN STD_LOGIC_VECTOR (4 downto 0);
        din9 : IN STD_LOGIC_VECTOR (4 downto 0);
        din10 : IN STD_LOGIC_VECTOR (4 downto 0);
        din11 : IN STD_LOGIC_VECTOR (4 downto 0);
        din12 : IN STD_LOGIC_VECTOR (4 downto 0);
        din13 : IN STD_LOGIC_VECTOR (4 downto 0);
        din14 : IN STD_LOGIC_VECTOR (4 downto 0);
        din15 : IN STD_LOGIC_VECTOR (4 downto 0);
        din16 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_164_5_1_1_U1625 : component gzipcMulticoreStreaming_mux_164_5_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        din2_WIDTH => 5,
        din3_WIDTH => 5,
        din4_WIDTH => 5,
        din5_WIDTH => 5,
        din6_WIDTH => 5,
        din7_WIDTH => 5,
        din8_WIDTH => 5,
        din9_WIDTH => 5,
        din10_WIDTH => 5,
        din11_WIDTH => 5,
        din12_WIDTH => 5,
        din13_WIDTH => 5,
        din14_WIDTH => 5,
        din15_WIDTH => 5,
        din16_WIDTH => 4,
        dout_WIDTH => 5)
    port map (
        din0 => digit_location_V_fu_146,
        din1 => digit_location_V_138_out_i,
        din2 => digit_location_V_139_out_i,
        din3 => digit_location_V_140_out_i,
        din4 => digit_location_V_141_out_i,
        din5 => digit_location_V_142_out_i,
        din6 => digit_location_V_143_out_i,
        din7 => digit_location_V_144_out_i,
        din8 => digit_location_V_145_out_i,
        din9 => digit_location_V_146_out_i,
        din10 => digit_location_V_147_out_i,
        din11 => digit_location_V_148_out_i,
        din12 => digit_location_V_149_out_i,
        din13 => digit_location_V_150_out_i,
        din14 => digit_location_V_151_out_i,
        din15 => digit_location_V_152_out_i,
        din16 => current_digit_V_q0,
        dout => tmp_s_fu_521_p18);

    flow_control_loop_pipe_sequential_init_U : component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    digit_location_V_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    digit_location_V_fu_146 <= digit_location_V_120_reload;
                elsif (((current_digit_V_q0 = ap_const_lv4_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    digit_location_V_fu_146 <= digit_location_V_62_fu_565_p2;
                end if;
            end if; 
        end if;
    end process;

    j_5_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln177_fu_434_p2))) then 
                    j_5_fu_142 <= j_9_fu_440_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_5_fu_142 <= ap_const_lv16_0;
                end if;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    and_ln177_fu_434_p2 <= (not_sorted_1_reload and icmp_ln177_fu_428_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, and_ln177_fu_434_p2)
    begin
        if (((ap_const_lv1_0 = and_ln177_fu_434_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, j_5_fu_142)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_j <= ap_const_lv16_0;
        else 
            ap_sig_allocacmp_j <= j_5_fu_142;
        end if; 
    end process;

    current_digit_V_address0 <= zext_ln180_fu_446_p1(5 - 1 downto 0);

    current_digit_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            current_digit_V_ce0 <= ap_const_logic_1;
        else 
            current_digit_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    digit_location_V_138_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, digit_location_V_121_reload, current_digit_V_q0, digit_location_V_138_out_i, ap_block_pp0_stage0, digit_location_V_62_fu_565_p2, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                digit_location_V_138_out_o <= digit_location_V_121_reload;
            elsif (((current_digit_V_q0 = ap_const_lv4_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                digit_location_V_138_out_o <= digit_location_V_62_fu_565_p2;
            else 
                digit_location_V_138_out_o <= digit_location_V_138_out_i;
            end if;
        else 
            digit_location_V_138_out_o <= digit_location_V_138_out_i;
        end if; 
    end process;


    digit_location_V_138_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, current_digit_V_q0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((current_digit_V_q0 = ap_const_lv4_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)))) then 
            digit_location_V_138_out_o_ap_vld <= ap_const_logic_1;
        else 
            digit_location_V_138_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    digit_location_V_139_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, digit_location_V_122_reload, current_digit_V_q0, digit_location_V_139_out_i, ap_block_pp0_stage0, digit_location_V_62_fu_565_p2, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                digit_location_V_139_out_o <= digit_location_V_122_reload;
            elsif (((current_digit_V_q0 = ap_const_lv4_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                digit_location_V_139_out_o <= digit_location_V_62_fu_565_p2;
            else 
                digit_location_V_139_out_o <= digit_location_V_139_out_i;
            end if;
        else 
            digit_location_V_139_out_o <= digit_location_V_139_out_i;
        end if; 
    end process;


    digit_location_V_139_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, current_digit_V_q0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((current_digit_V_q0 = ap_const_lv4_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)))) then 
            digit_location_V_139_out_o_ap_vld <= ap_const_logic_1;
        else 
            digit_location_V_139_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    digit_location_V_140_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, digit_location_V_123_reload, current_digit_V_q0, digit_location_V_140_out_i, ap_block_pp0_stage0, digit_location_V_62_fu_565_p2, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                digit_location_V_140_out_o <= digit_location_V_123_reload;
            elsif (((current_digit_V_q0 = ap_const_lv4_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                digit_location_V_140_out_o <= digit_location_V_62_fu_565_p2;
            else 
                digit_location_V_140_out_o <= digit_location_V_140_out_i;
            end if;
        else 
            digit_location_V_140_out_o <= digit_location_V_140_out_i;
        end if; 
    end process;


    digit_location_V_140_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, current_digit_V_q0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((current_digit_V_q0 = ap_const_lv4_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)))) then 
            digit_location_V_140_out_o_ap_vld <= ap_const_logic_1;
        else 
            digit_location_V_140_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    digit_location_V_141_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, digit_location_V_124_reload, current_digit_V_q0, digit_location_V_141_out_i, ap_block_pp0_stage0, digit_location_V_62_fu_565_p2, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                digit_location_V_141_out_o <= digit_location_V_124_reload;
            elsif (((current_digit_V_q0 = ap_const_lv4_4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                digit_location_V_141_out_o <= digit_location_V_62_fu_565_p2;
            else 
                digit_location_V_141_out_o <= digit_location_V_141_out_i;
            end if;
        else 
            digit_location_V_141_out_o <= digit_location_V_141_out_i;
        end if; 
    end process;


    digit_location_V_141_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, current_digit_V_q0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((current_digit_V_q0 = ap_const_lv4_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)))) then 
            digit_location_V_141_out_o_ap_vld <= ap_const_logic_1;
        else 
            digit_location_V_141_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    digit_location_V_142_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, digit_location_V_125_reload, current_digit_V_q0, digit_location_V_142_out_i, ap_block_pp0_stage0, digit_location_V_62_fu_565_p2, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                digit_location_V_142_out_o <= digit_location_V_125_reload;
            elsif (((current_digit_V_q0 = ap_const_lv4_5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                digit_location_V_142_out_o <= digit_location_V_62_fu_565_p2;
            else 
                digit_location_V_142_out_o <= digit_location_V_142_out_i;
            end if;
        else 
            digit_location_V_142_out_o <= digit_location_V_142_out_i;
        end if; 
    end process;


    digit_location_V_142_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, current_digit_V_q0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((current_digit_V_q0 = ap_const_lv4_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)))) then 
            digit_location_V_142_out_o_ap_vld <= ap_const_logic_1;
        else 
            digit_location_V_142_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    digit_location_V_143_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, digit_location_V_126_reload, current_digit_V_q0, digit_location_V_143_out_i, ap_block_pp0_stage0, digit_location_V_62_fu_565_p2, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                digit_location_V_143_out_o <= digit_location_V_126_reload;
            elsif (((current_digit_V_q0 = ap_const_lv4_6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                digit_location_V_143_out_o <= digit_location_V_62_fu_565_p2;
            else 
                digit_location_V_143_out_o <= digit_location_V_143_out_i;
            end if;
        else 
            digit_location_V_143_out_o <= digit_location_V_143_out_i;
        end if; 
    end process;


    digit_location_V_143_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, current_digit_V_q0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((current_digit_V_q0 = ap_const_lv4_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)))) then 
            digit_location_V_143_out_o_ap_vld <= ap_const_logic_1;
        else 
            digit_location_V_143_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    digit_location_V_144_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, digit_location_V_127_reload, current_digit_V_q0, digit_location_V_144_out_i, ap_block_pp0_stage0, digit_location_V_62_fu_565_p2, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                digit_location_V_144_out_o <= digit_location_V_127_reload;
            elsif (((current_digit_V_q0 = ap_const_lv4_7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                digit_location_V_144_out_o <= digit_location_V_62_fu_565_p2;
            else 
                digit_location_V_144_out_o <= digit_location_V_144_out_i;
            end if;
        else 
            digit_location_V_144_out_o <= digit_location_V_144_out_i;
        end if; 
    end process;


    digit_location_V_144_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, current_digit_V_q0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((current_digit_V_q0 = ap_const_lv4_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)))) then 
            digit_location_V_144_out_o_ap_vld <= ap_const_logic_1;
        else 
            digit_location_V_144_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    digit_location_V_145_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, digit_location_V_128_reload, current_digit_V_q0, digit_location_V_145_out_i, ap_block_pp0_stage0, digit_location_V_62_fu_565_p2, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                digit_location_V_145_out_o <= digit_location_V_128_reload;
            elsif (((current_digit_V_q0 = ap_const_lv4_8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                digit_location_V_145_out_o <= digit_location_V_62_fu_565_p2;
            else 
                digit_location_V_145_out_o <= digit_location_V_145_out_i;
            end if;
        else 
            digit_location_V_145_out_o <= digit_location_V_145_out_i;
        end if; 
    end process;


    digit_location_V_145_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, current_digit_V_q0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((current_digit_V_q0 = ap_const_lv4_8) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)))) then 
            digit_location_V_145_out_o_ap_vld <= ap_const_logic_1;
        else 
            digit_location_V_145_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    digit_location_V_146_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, digit_location_V_129_reload, current_digit_V_q0, digit_location_V_146_out_i, ap_block_pp0_stage0, digit_location_V_62_fu_565_p2, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                digit_location_V_146_out_o <= digit_location_V_129_reload;
            elsif (((current_digit_V_q0 = ap_const_lv4_9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                digit_location_V_146_out_o <= digit_location_V_62_fu_565_p2;
            else 
                digit_location_V_146_out_o <= digit_location_V_146_out_i;
            end if;
        else 
            digit_location_V_146_out_o <= digit_location_V_146_out_i;
        end if; 
    end process;


    digit_location_V_146_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, current_digit_V_q0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((current_digit_V_q0 = ap_const_lv4_9) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)))) then 
            digit_location_V_146_out_o_ap_vld <= ap_const_logic_1;
        else 
            digit_location_V_146_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    digit_location_V_147_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, digit_location_V_130_reload, current_digit_V_q0, digit_location_V_147_out_i, ap_block_pp0_stage0, digit_location_V_62_fu_565_p2, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                digit_location_V_147_out_o <= digit_location_V_130_reload;
            elsif (((current_digit_V_q0 = ap_const_lv4_A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                digit_location_V_147_out_o <= digit_location_V_62_fu_565_p2;
            else 
                digit_location_V_147_out_o <= digit_location_V_147_out_i;
            end if;
        else 
            digit_location_V_147_out_o <= digit_location_V_147_out_i;
        end if; 
    end process;


    digit_location_V_147_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, current_digit_V_q0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((current_digit_V_q0 = ap_const_lv4_A) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)))) then 
            digit_location_V_147_out_o_ap_vld <= ap_const_logic_1;
        else 
            digit_location_V_147_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    digit_location_V_148_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, digit_location_V_131_reload, current_digit_V_q0, digit_location_V_148_out_i, ap_block_pp0_stage0, digit_location_V_62_fu_565_p2, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                digit_location_V_148_out_o <= digit_location_V_131_reload;
            elsif (((current_digit_V_q0 = ap_const_lv4_B) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                digit_location_V_148_out_o <= digit_location_V_62_fu_565_p2;
            else 
                digit_location_V_148_out_o <= digit_location_V_148_out_i;
            end if;
        else 
            digit_location_V_148_out_o <= digit_location_V_148_out_i;
        end if; 
    end process;


    digit_location_V_148_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, current_digit_V_q0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((current_digit_V_q0 = ap_const_lv4_B) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)))) then 
            digit_location_V_148_out_o_ap_vld <= ap_const_logic_1;
        else 
            digit_location_V_148_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    digit_location_V_149_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, digit_location_V_132_reload, current_digit_V_q0, digit_location_V_149_out_i, ap_block_pp0_stage0, digit_location_V_62_fu_565_p2, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                digit_location_V_149_out_o <= digit_location_V_132_reload;
            elsif (((current_digit_V_q0 = ap_const_lv4_C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                digit_location_V_149_out_o <= digit_location_V_62_fu_565_p2;
            else 
                digit_location_V_149_out_o <= digit_location_V_149_out_i;
            end if;
        else 
            digit_location_V_149_out_o <= digit_location_V_149_out_i;
        end if; 
    end process;


    digit_location_V_149_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, current_digit_V_q0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((current_digit_V_q0 = ap_const_lv4_C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)))) then 
            digit_location_V_149_out_o_ap_vld <= ap_const_logic_1;
        else 
            digit_location_V_149_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    digit_location_V_150_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, digit_location_V_133_reload, current_digit_V_q0, digit_location_V_150_out_i, ap_block_pp0_stage0, digit_location_V_62_fu_565_p2, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                digit_location_V_150_out_o <= digit_location_V_133_reload;
            elsif (((current_digit_V_q0 = ap_const_lv4_D) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                digit_location_V_150_out_o <= digit_location_V_62_fu_565_p2;
            else 
                digit_location_V_150_out_o <= digit_location_V_150_out_i;
            end if;
        else 
            digit_location_V_150_out_o <= digit_location_V_150_out_i;
        end if; 
    end process;


    digit_location_V_150_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, current_digit_V_q0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((current_digit_V_q0 = ap_const_lv4_D) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)))) then 
            digit_location_V_150_out_o_ap_vld <= ap_const_logic_1;
        else 
            digit_location_V_150_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    digit_location_V_151_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, digit_location_V_134_reload, current_digit_V_q0, digit_location_V_151_out_i, ap_block_pp0_stage0, digit_location_V_62_fu_565_p2, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                digit_location_V_151_out_o <= digit_location_V_134_reload;
            elsif (((current_digit_V_q0 = ap_const_lv4_E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                digit_location_V_151_out_o <= digit_location_V_62_fu_565_p2;
            else 
                digit_location_V_151_out_o <= digit_location_V_151_out_i;
            end if;
        else 
            digit_location_V_151_out_o <= digit_location_V_151_out_i;
        end if; 
    end process;


    digit_location_V_151_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, current_digit_V_q0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((current_digit_V_q0 = ap_const_lv4_E) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)))) then 
            digit_location_V_151_out_o_ap_vld <= ap_const_logic_1;
        else 
            digit_location_V_151_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    digit_location_V_152_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, digit_location_V_135_reload, current_digit_V_q0, digit_location_V_152_out_i, ap_block_pp0_stage0, digit_location_V_62_fu_565_p2, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                digit_location_V_152_out_o <= digit_location_V_135_reload;
            elsif (((current_digit_V_q0 = ap_const_lv4_F) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                digit_location_V_152_out_o <= digit_location_V_62_fu_565_p2;
            else 
                digit_location_V_152_out_o <= digit_location_V_152_out_i;
            end if;
        else 
            digit_location_V_152_out_o <= digit_location_V_152_out_i;
        end if; 
    end process;


    digit_location_V_152_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, current_digit_V_q0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((current_digit_V_q0 = ap_const_lv4_F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)))) then 
            digit_location_V_152_out_o_ap_vld <= ap_const_logic_1;
        else 
            digit_location_V_152_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_location_V_62_fu_565_p2 <= std_logic_vector(unsigned(tmp_s_fu_521_p18) + unsigned(ap_const_lv5_1));
    heap_frequency_V_address0 <= zext_ln587_fu_559_p1(5 - 1 downto 0);

    heap_frequency_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            heap_frequency_V_ce0 <= ap_const_logic_1;
        else 
            heap_frequency_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    heap_frequency_V_d0 <= prev_sorting_frequency_V_q0;

    heap_frequency_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            heap_frequency_V_we0 <= ap_const_logic_1;
        else 
            heap_frequency_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    heap_value_V_address0 <= zext_ln587_fu_559_p1(5 - 1 downto 0);

    heap_value_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            heap_value_V_ce0 <= ap_const_logic_1;
        else 
            heap_value_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    heap_value_V_d0 <= prev_sorting_value_V_q0;

    heap_value_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            heap_value_V_we0 <= ap_const_logic_1;
        else 
            heap_value_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln177_fu_428_p2 <= "1" when (unsigned(ap_sig_allocacmp_j) < unsigned(heapLength_11)) else "0";
    j_9_fu_440_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j) + unsigned(ap_const_lv16_1));
    prev_sorting_frequency_V_address0 <= zext_ln180_fu_446_p1(5 - 1 downto 0);

    prev_sorting_frequency_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            prev_sorting_frequency_V_ce0 <= ap_const_logic_1;
        else 
            prev_sorting_frequency_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    prev_sorting_value_V_address0 <= zext_ln180_fu_446_p1(5 - 1 downto 0);

    prev_sorting_value_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            prev_sorting_value_V_ce0 <= ap_const_logic_1;
        else 
            prev_sorting_value_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln180_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_j),64));
    zext_ln587_fu_559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_521_p18),64));
end behav;
