-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_zlibTreegenStreamLL_14_unsigned_char_0_s is
port (
    lz77SerialTree1_dout : IN STD_LOGIC_VECTOR (14 downto 0);
    lz77SerialTree1_empty_n : IN STD_LOGIC;
    lz77SerialTree1_read : OUT STD_LOGIC;
    hufSerialCodeStream2_din : OUT STD_LOGIC_VECTOR (19 downto 0);
    hufSerialCodeStream2_full_n : IN STD_LOGIC;
    hufSerialCodeStream2_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of gzipcMulticoreStreaming_zlibTreegenStreamLL_14_unsigned_char_0_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal filterRadixSortPart1_286_10_14_1_U0_ap_start : STD_LOGIC;
    signal filterRadixSortPart1_286_10_14_1_U0_start_full_n : STD_LOGIC;
    signal filterRadixSortPart1_286_10_14_1_U0_ap_done : STD_LOGIC;
    signal filterRadixSortPart1_286_10_14_1_U0_ap_continue : STD_LOGIC;
    signal filterRadixSortPart1_286_10_14_1_U0_ap_idle : STD_LOGIC;
    signal filterRadixSortPart1_286_10_14_1_U0_ap_ready : STD_LOGIC;
    signal filterRadixSortPart1_286_10_14_1_U0_start_out : STD_LOGIC;
    signal filterRadixSortPart1_286_10_14_1_U0_start_write : STD_LOGIC;
    signal filterRadixSortPart1_286_10_14_1_U0_lz77SerialTree1_read : STD_LOGIC;
    signal filterRadixSortPart1_286_10_14_1_U0_intlHeapStream_i_0_din : STD_LOGIC_VECTOR (24 downto 0);
    signal filterRadixSortPart1_286_10_14_1_U0_intlHeapStream_i_0_write : STD_LOGIC;
    signal filterRadixSortPart1_286_10_14_1_U0_heapLenStream125_din : STD_LOGIC_VECTOR (8 downto 0);
    signal filterRadixSortPart1_286_10_14_1_U0_heapLenStream125_write : STD_LOGIC;
    signal filterRadixSortPart1_286_10_14_1_U0_heapLenStream226_din : STD_LOGIC_VECTOR (8 downto 0);
    signal filterRadixSortPart1_286_10_14_1_U0_heapLenStream226_write : STD_LOGIC;
    signal filterRadixSortPart1_286_10_14_1_U0_ldMaxCodes21_din : STD_LOGIC_VECTOR (9 downto 0);
    signal filterRadixSortPart1_286_10_14_1_U0_ldMaxCodes21_write : STD_LOGIC;
    signal filterRadixSortPart1_286_10_14_1_U0_isEOBlocks27_din : STD_LOGIC_VECTOR (0 downto 0);
    signal filterRadixSortPart1_286_10_14_1_U0_isEOBlocks27_write : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_U0_ap_start : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_U0_ap_done : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_U0_ap_continue : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_U0_ap_idle : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_U0_ap_ready : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_U0_start_out : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_U0_start_write : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_U0_intlHeapStream_i_0_read : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_U0_intlHeapStream_i_1_din : STD_LOGIC_VECTOR (24 downto 0);
    signal radixSortMidPartial_286_10_14_U0_intlHeapStream_i_1_write : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_71_U0_ap_start : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_71_U0_ap_done : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_71_U0_ap_continue : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_71_U0_ap_idle : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_71_U0_ap_ready : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_71_U0_start_out : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_71_U0_start_write : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_71_U0_intlHeapStream_i_1_read : STD_LOGIC;
    signal radixSortMidPartial_286_10_14_71_U0_intlHeapStream_i_2_din : STD_LOGIC_VECTOR (24 downto 0);
    signal radixSortMidPartial_286_10_14_71_U0_intlHeapStream_i_2_write : STD_LOGIC;
    signal radixPartialFinalSort_286_10_14_U0_ap_start : STD_LOGIC;
    signal radixPartialFinalSort_286_10_14_U0_ap_done : STD_LOGIC;
    signal radixPartialFinalSort_286_10_14_U0_ap_continue : STD_LOGIC;
    signal radixPartialFinalSort_286_10_14_U0_ap_idle : STD_LOGIC;
    signal radixPartialFinalSort_286_10_14_U0_ap_ready : STD_LOGIC;
    signal radixPartialFinalSort_286_10_14_U0_intlHeapStream_i_2_read : STD_LOGIC;
    signal radixPartialFinalSort_286_10_14_U0_heapTreeStream_din : STD_LOGIC_VECTOR (24 downto 0);
    signal radixPartialFinalSort_286_10_14_U0_heapTreeStream_write : STD_LOGIC;
    signal radixPartialFinalSort_286_10_14_U0_heapCanzStream_din : STD_LOGIC_VECTOR (24 downto 0);
    signal radixPartialFinalSort_286_10_14_U0_heapCanzStream_write : STD_LOGIC;
    signal createTreeWrapper_286_10_14_U0_ap_start : STD_LOGIC;
    signal createTreeWrapper_286_10_14_U0_ap_done : STD_LOGIC;
    signal createTreeWrapper_286_10_14_U0_ap_continue : STD_LOGIC;
    signal createTreeWrapper_286_10_14_U0_ap_idle : STD_LOGIC;
    signal createTreeWrapper_286_10_14_U0_ap_ready : STD_LOGIC;
    signal createTreeWrapper_286_10_14_U0_start_out : STD_LOGIC;
    signal createTreeWrapper_286_10_14_U0_start_write : STD_LOGIC;
    signal createTreeWrapper_286_10_14_U0_heapTreeStream_read : STD_LOGIC;
    signal createTreeWrapper_286_10_14_U0_heapLenStream125_read : STD_LOGIC;
    signal createTreeWrapper_286_10_14_U0_parentStream_din : STD_LOGIC_VECTOR (10 downto 0);
    signal createTreeWrapper_286_10_14_U0_parentStream_write : STD_LOGIC;
    signal getHuffBitLengths_286_10_14_U0_ap_start : STD_LOGIC;
    signal getHuffBitLengths_286_10_14_U0_ap_done : STD_LOGIC;
    signal getHuffBitLengths_286_10_14_U0_ap_continue : STD_LOGIC;
    signal getHuffBitLengths_286_10_14_U0_ap_idle : STD_LOGIC;
    signal getHuffBitLengths_286_10_14_U0_ap_ready : STD_LOGIC;
    signal getHuffBitLengths_286_10_14_U0_start_out : STD_LOGIC;
    signal getHuffBitLengths_286_10_14_U0_start_write : STD_LOGIC;
    signal getHuffBitLengths_286_10_14_U0_parentStream_read : STD_LOGIC;
    signal getHuffBitLengths_286_10_14_U0_lengthHistogramStream_din : STD_LOGIC_VECTOR (12 downto 0);
    signal getHuffBitLengths_286_10_14_U0_lengthHistogramStream_write : STD_LOGIC;
    signal truncateTreeStream_U0_ap_start : STD_LOGIC;
    signal truncateTreeStream_U0_ap_done : STD_LOGIC;
    signal truncateTreeStream_U0_ap_continue : STD_LOGIC;
    signal truncateTreeStream_U0_ap_idle : STD_LOGIC;
    signal truncateTreeStream_U0_ap_ready : STD_LOGIC;
    signal truncateTreeStream_U0_lengthHistogramStream_read : STD_LOGIC;
    signal truncateTreeStream_U0_truncLengthHistStream_din : STD_LOGIC_VECTOR (12 downto 0);
    signal truncateTreeStream_U0_truncLengthHistStream_write : STD_LOGIC;
    signal canonizeGetCodes_286_10_14_U0_ap_start : STD_LOGIC;
    signal canonizeGetCodes_286_10_14_U0_ap_done : STD_LOGIC;
    signal canonizeGetCodes_286_10_14_U0_ap_continue : STD_LOGIC;
    signal canonizeGetCodes_286_10_14_U0_ap_idle : STD_LOGIC;
    signal canonizeGetCodes_286_10_14_U0_ap_ready : STD_LOGIC;
    signal canonizeGetCodes_286_10_14_U0_heapCanzStream_read : STD_LOGIC;
    signal canonizeGetCodes_286_10_14_U0_heapLenStream226_read : STD_LOGIC;
    signal canonizeGetCodes_286_10_14_U0_truncLengthHistStream_read : STD_LOGIC;
    signal canonizeGetCodes_286_10_14_U0_ldCodes_din : STD_LOGIC_VECTOR (20 downto 0);
    signal canonizeGetCodes_286_10_14_U0_ldCodes_write : STD_LOGIC;
    signal streamDistributor_4_U0_ap_start : STD_LOGIC;
    signal streamDistributor_4_U0_start_full_n : STD_LOGIC;
    signal streamDistributor_4_U0_ap_done : STD_LOGIC;
    signal streamDistributor_4_U0_ap_continue : STD_LOGIC;
    signal streamDistributor_4_U0_ap_idle : STD_LOGIC;
    signal streamDistributor_4_U0_ap_ready : STD_LOGIC;
    signal streamDistributor_4_U0_isEOBlocks27_read : STD_LOGIC;
    signal streamDistributor_4_U0_eoBlocks_0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal streamDistributor_4_U0_eoBlocks_0_write : STD_LOGIC;
    signal streamDistributor_4_U0_eoBlocks_1_din : STD_LOGIC_VECTOR (0 downto 0);
    signal streamDistributor_4_U0_eoBlocks_1_write : STD_LOGIC;
    signal streamDistributor_4_U0_eoBlocks_2_din : STD_LOGIC_VECTOR (0 downto 0);
    signal streamDistributor_4_U0_eoBlocks_2_write : STD_LOGIC;
    signal streamDistributor_4_U0_eoBlocks_3_din : STD_LOGIC_VECTOR (0 downto 0);
    signal streamDistributor_4_U0_eoBlocks_3_write : STD_LOGIC;
    signal streamDistributor_4_U0_start_out : STD_LOGIC;
    signal streamDistributor_4_U0_start_write : STD_LOGIC;
    signal codeWordDistributor_U0_ap_start : STD_LOGIC;
    signal codeWordDistributor_U0_ap_done : STD_LOGIC;
    signal codeWordDistributor_U0_ap_continue : STD_LOGIC;
    signal codeWordDistributor_U0_ap_idle : STD_LOGIC;
    signal codeWordDistributor_U0_ap_ready : STD_LOGIC;
    signal codeWordDistributor_U0_ldCodes_read : STD_LOGIC;
    signal codeWordDistributor_U0_ldCodes1_din : STD_LOGIC_VECTOR (20 downto 0);
    signal codeWordDistributor_U0_ldCodes1_write : STD_LOGIC;
    signal codeWordDistributor_U0_ldCodes2_din : STD_LOGIC_VECTOR (20 downto 0);
    signal codeWordDistributor_U0_ldCodes2_write : STD_LOGIC;
    signal codeWordDistributor_U0_ldMaxCodes21_read : STD_LOGIC;
    signal codeWordDistributor_U0_ldMaxCodes122_din : STD_LOGIC_VECTOR (9 downto 0);
    signal codeWordDistributor_U0_ldMaxCodes122_write : STD_LOGIC;
    signal codeWordDistributor_U0_ldMaxCodes223_din : STD_LOGIC_VECTOR (9 downto 0);
    signal codeWordDistributor_U0_ldMaxCodes223_write : STD_LOGIC;
    signal codeWordDistributor_U0_eoBlocks_0_read : STD_LOGIC;
    signal genBitLenFreq_14_U0_ap_start : STD_LOGIC;
    signal genBitLenFreq_14_U0_ap_done : STD_LOGIC;
    signal genBitLenFreq_14_U0_ap_continue : STD_LOGIC;
    signal genBitLenFreq_14_U0_ap_idle : STD_LOGIC;
    signal genBitLenFreq_14_U0_ap_ready : STD_LOGIC;
    signal genBitLenFreq_14_U0_ldCodes1_read : STD_LOGIC;
    signal genBitLenFreq_14_U0_eoBlocks_1_read : STD_LOGIC;
    signal genBitLenFreq_14_U0_ldFrequency_din : STD_LOGIC_VECTOR (14 downto 0);
    signal genBitLenFreq_14_U0_ldFrequency_write : STD_LOGIC;
    signal genBitLenFreq_14_U0_ldMaxCodes122_read : STD_LOGIC;
    signal processBitLength_14_U0_ap_start : STD_LOGIC;
    signal processBitLength_14_U0_ap_done : STD_LOGIC;
    signal processBitLength_14_U0_ap_continue : STD_LOGIC;
    signal processBitLength_14_U0_ap_idle : STD_LOGIC;
    signal processBitLength_14_U0_ap_ready : STD_LOGIC;
    signal processBitLength_14_U0_ldFrequency_read : STD_LOGIC;
    signal processBitLength_14_U0_eoBlocks_2_read : STD_LOGIC;
    signal processBitLength_14_U0_blCodes_din : STD_LOGIC_VECTOR (20 downto 0);
    signal processBitLength_14_U0_blCodes_write : STD_LOGIC;
    signal processBitLength_14_U0_blMaxCodes24_din : STD_LOGIC_VECTOR (9 downto 0);
    signal processBitLength_14_U0_blMaxCodes24_write : STD_LOGIC;
    signal sendProcTrees_U0_ap_start : STD_LOGIC;
    signal sendProcTrees_U0_ap_done : STD_LOGIC;
    signal sendProcTrees_U0_ap_continue : STD_LOGIC;
    signal sendProcTrees_U0_ap_idle : STD_LOGIC;
    signal sendProcTrees_U0_ap_ready : STD_LOGIC;
    signal sendProcTrees_U0_start_out : STD_LOGIC;
    signal sendProcTrees_U0_start_write : STD_LOGIC;
    signal sendProcTrees_U0_ldMaxCodes223_read : STD_LOGIC;
    signal sendProcTrees_U0_blMaxCodes24_read : STD_LOGIC;
    signal sendProcTrees_U0_ldCodes2_read : STD_LOGIC;
    signal sendProcTrees_U0_blCodes_read : STD_LOGIC;
    signal sendProcTrees_U0_eoBlocks_3_read : STD_LOGIC;
    signal sendProcTrees_U0_intlHufCodeStream_din : STD_LOGIC_VECTOR (58 downto 0);
    signal sendProcTrees_U0_intlHufCodeStream_write : STD_LOGIC;
    signal sendHuffData_unsigned_char_0_U0_ap_start : STD_LOGIC;
    signal sendHuffData_unsigned_char_0_U0_ap_done : STD_LOGIC;
    signal sendHuffData_unsigned_char_0_U0_ap_continue : STD_LOGIC;
    signal sendHuffData_unsigned_char_0_U0_ap_idle : STD_LOGIC;
    signal sendHuffData_unsigned_char_0_U0_ap_ready : STD_LOGIC;
    signal sendHuffData_unsigned_char_0_U0_intlHufCodeStream_read : STD_LOGIC;
    signal sendHuffData_unsigned_char_0_U0_hufSerialCodeStream2_din : STD_LOGIC_VECTOR (19 downto 0);
    signal sendHuffData_unsigned_char_0_U0_hufSerialCodeStream2_write : STD_LOGIC;
    signal intlHeapStream_i_0_full_n : STD_LOGIC;
    signal intlHeapStream_i_0_dout : STD_LOGIC_VECTOR (24 downto 0);
    signal intlHeapStream_i_0_num_data_valid : STD_LOGIC_VECTOR (5 downto 0);
    signal intlHeapStream_i_0_fifo_cap : STD_LOGIC_VECTOR (5 downto 0);
    signal intlHeapStream_i_0_empty_n : STD_LOGIC;
    signal heapLenStream1_full_n : STD_LOGIC;
    signal heapLenStream1_dout : STD_LOGIC_VECTOR (8 downto 0);
    signal heapLenStream1_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal heapLenStream1_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal heapLenStream1_empty_n : STD_LOGIC;
    signal heapLenStream2_full_n : STD_LOGIC;
    signal heapLenStream2_dout : STD_LOGIC_VECTOR (8 downto 0);
    signal heapLenStream2_num_data_valid : STD_LOGIC_VECTOR (4 downto 0);
    signal heapLenStream2_fifo_cap : STD_LOGIC_VECTOR (4 downto 0);
    signal heapLenStream2_empty_n : STD_LOGIC;
    signal ldMaxCodes_full_n : STD_LOGIC;
    signal ldMaxCodes_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal ldMaxCodes_num_data_valid : STD_LOGIC_VECTOR (4 downto 0);
    signal ldMaxCodes_fifo_cap : STD_LOGIC_VECTOR (4 downto 0);
    signal ldMaxCodes_empty_n : STD_LOGIC;
    signal isEOBlocks_full_n : STD_LOGIC;
    signal isEOBlocks_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal isEOBlocks_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal isEOBlocks_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal isEOBlocks_empty_n : STD_LOGIC;
    signal intlHeapStream_i_1_full_n : STD_LOGIC;
    signal intlHeapStream_i_1_dout : STD_LOGIC_VECTOR (24 downto 0);
    signal intlHeapStream_i_1_num_data_valid : STD_LOGIC_VECTOR (5 downto 0);
    signal intlHeapStream_i_1_fifo_cap : STD_LOGIC_VECTOR (5 downto 0);
    signal intlHeapStream_i_1_empty_n : STD_LOGIC;
    signal intlHeapStream_i_2_full_n : STD_LOGIC;
    signal intlHeapStream_i_2_dout : STD_LOGIC_VECTOR (24 downto 0);
    signal intlHeapStream_i_2_num_data_valid : STD_LOGIC_VECTOR (5 downto 0);
    signal intlHeapStream_i_2_fifo_cap : STD_LOGIC_VECTOR (5 downto 0);
    signal intlHeapStream_i_2_empty_n : STD_LOGIC;
    signal heapTreeStream_full_n : STD_LOGIC;
    signal heapTreeStream_dout : STD_LOGIC_VECTOR (24 downto 0);
    signal heapTreeStream_num_data_valid : STD_LOGIC_VECTOR (9 downto 0);
    signal heapTreeStream_fifo_cap : STD_LOGIC_VECTOR (9 downto 0);
    signal heapTreeStream_empty_n : STD_LOGIC;
    signal heapCanzStream_full_n : STD_LOGIC;
    signal heapCanzStream_dout : STD_LOGIC_VECTOR (24 downto 0);
    signal heapCanzStream_num_data_valid : STD_LOGIC_VECTOR (11 downto 0);
    signal heapCanzStream_fifo_cap : STD_LOGIC_VECTOR (11 downto 0);
    signal heapCanzStream_empty_n : STD_LOGIC;
    signal parentStream_full_n : STD_LOGIC;
    signal parentStream_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal parentStream_num_data_valid : STD_LOGIC_VECTOR (10 downto 0);
    signal parentStream_fifo_cap : STD_LOGIC_VECTOR (10 downto 0);
    signal parentStream_empty_n : STD_LOGIC;
    signal lengthHistogramStream_full_n : STD_LOGIC;
    signal lengthHistogramStream_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal lengthHistogramStream_num_data_valid : STD_LOGIC_VECTOR (6 downto 0);
    signal lengthHistogramStream_fifo_cap : STD_LOGIC_VECTOR (6 downto 0);
    signal lengthHistogramStream_empty_n : STD_LOGIC;
    signal truncLengthHistStream_full_n : STD_LOGIC;
    signal truncLengthHistStream_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal truncLengthHistStream_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal truncLengthHistStream_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal truncLengthHistStream_empty_n : STD_LOGIC;
    signal ldCodes_full_n : STD_LOGIC;
    signal ldCodes_dout : STD_LOGIC_VECTOR (20 downto 0);
    signal ldCodes_num_data_valid : STD_LOGIC_VECTOR (4 downto 0);
    signal ldCodes_fifo_cap : STD_LOGIC_VECTOR (4 downto 0);
    signal ldCodes_empty_n : STD_LOGIC;
    signal eoBlocks_0_full_n : STD_LOGIC;
    signal eoBlocks_0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal eoBlocks_0_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal eoBlocks_0_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal eoBlocks_0_empty_n : STD_LOGIC;
    signal eoBlocks_1_full_n : STD_LOGIC;
    signal eoBlocks_1_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal eoBlocks_1_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal eoBlocks_1_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal eoBlocks_1_empty_n : STD_LOGIC;
    signal eoBlocks_2_full_n : STD_LOGIC;
    signal eoBlocks_2_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal eoBlocks_2_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal eoBlocks_2_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal eoBlocks_2_empty_n : STD_LOGIC;
    signal eoBlocks_3_full_n : STD_LOGIC;
    signal eoBlocks_3_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal eoBlocks_3_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal eoBlocks_3_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal eoBlocks_3_empty_n : STD_LOGIC;
    signal ldCodes1_full_n : STD_LOGIC;
    signal ldCodes1_dout : STD_LOGIC_VECTOR (20 downto 0);
    signal ldCodes1_num_data_valid : STD_LOGIC_VECTOR (9 downto 0);
    signal ldCodes1_fifo_cap : STD_LOGIC_VECTOR (9 downto 0);
    signal ldCodes1_empty_n : STD_LOGIC;
    signal ldCodes2_full_n : STD_LOGIC;
    signal ldCodes2_dout : STD_LOGIC_VECTOR (20 downto 0);
    signal ldCodes2_num_data_valid : STD_LOGIC_VECTOR (10 downto 0);
    signal ldCodes2_fifo_cap : STD_LOGIC_VECTOR (10 downto 0);
    signal ldCodes2_empty_n : STD_LOGIC;
    signal ldMaxCodes1_full_n : STD_LOGIC;
    signal ldMaxCodes1_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal ldMaxCodes1_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal ldMaxCodes1_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal ldMaxCodes1_empty_n : STD_LOGIC;
    signal ldMaxCodes2_full_n : STD_LOGIC;
    signal ldMaxCodes2_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal ldMaxCodes2_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal ldMaxCodes2_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal ldMaxCodes2_empty_n : STD_LOGIC;
    signal ldFrequency_full_n : STD_LOGIC;
    signal ldFrequency_dout : STD_LOGIC_VECTOR (14 downto 0);
    signal ldFrequency_num_data_valid : STD_LOGIC_VECTOR (5 downto 0);
    signal ldFrequency_fifo_cap : STD_LOGIC_VECTOR (5 downto 0);
    signal ldFrequency_empty_n : STD_LOGIC;
    signal blCodes_full_n : STD_LOGIC;
    signal blCodes_dout : STD_LOGIC_VECTOR (20 downto 0);
    signal blCodes_num_data_valid : STD_LOGIC_VECTOR (5 downto 0);
    signal blCodes_fifo_cap : STD_LOGIC_VECTOR (5 downto 0);
    signal blCodes_empty_n : STD_LOGIC;
    signal blMaxCodes_full_n : STD_LOGIC;
    signal blMaxCodes_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal blMaxCodes_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal blMaxCodes_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal blMaxCodes_empty_n : STD_LOGIC;
    signal intlHufCodeStream_full_n : STD_LOGIC;
    signal intlHufCodeStream_dout : STD_LOGIC_VECTOR (58 downto 0);
    signal intlHufCodeStream_num_data_valid : STD_LOGIC_VECTOR (9 downto 0);
    signal intlHufCodeStream_fifo_cap : STD_LOGIC_VECTOR (9 downto 0);
    signal intlHufCodeStream_empty_n : STD_LOGIC;
    signal start_for_radixSortMidPartial_286_10_14_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_radixSortMidPartial_286_10_14_U0_full_n : STD_LOGIC;
    signal start_for_radixSortMidPartial_286_10_14_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_radixSortMidPartial_286_10_14_U0_empty_n : STD_LOGIC;
    signal start_for_createTreeWrapper_286_10_14_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_createTreeWrapper_286_10_14_U0_full_n : STD_LOGIC;
    signal start_for_createTreeWrapper_286_10_14_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_createTreeWrapper_286_10_14_U0_empty_n : STD_LOGIC;
    signal start_for_canonizeGetCodes_286_10_14_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_canonizeGetCodes_286_10_14_U0_full_n : STD_LOGIC;
    signal start_for_canonizeGetCodes_286_10_14_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_canonizeGetCodes_286_10_14_U0_empty_n : STD_LOGIC;
    signal start_for_streamDistributor_4_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_streamDistributor_4_U0_full_n : STD_LOGIC;
    signal start_for_streamDistributor_4_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_streamDistributor_4_U0_empty_n : STD_LOGIC;
    signal start_for_codeWordDistributor_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_codeWordDistributor_U0_full_n : STD_LOGIC;
    signal start_for_codeWordDistributor_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_codeWordDistributor_U0_empty_n : STD_LOGIC;
    signal start_for_radixSortMidPartial_286_10_14_71_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_radixSortMidPartial_286_10_14_71_U0_full_n : STD_LOGIC;
    signal start_for_radixSortMidPartial_286_10_14_71_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_radixSortMidPartial_286_10_14_71_U0_empty_n : STD_LOGIC;
    signal start_for_radixPartialFinalSort_286_10_14_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_radixPartialFinalSort_286_10_14_U0_full_n : STD_LOGIC;
    signal start_for_radixPartialFinalSort_286_10_14_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_radixPartialFinalSort_286_10_14_U0_empty_n : STD_LOGIC;
    signal start_for_getHuffBitLengths_286_10_14_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_getHuffBitLengths_286_10_14_U0_full_n : STD_LOGIC;
    signal start_for_getHuffBitLengths_286_10_14_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_getHuffBitLengths_286_10_14_U0_empty_n : STD_LOGIC;
    signal start_for_truncateTreeStream_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_truncateTreeStream_U0_full_n : STD_LOGIC;
    signal start_for_truncateTreeStream_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_truncateTreeStream_U0_empty_n : STD_LOGIC;
    signal start_for_genBitLenFreq_14_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_genBitLenFreq_14_U0_full_n : STD_LOGIC;
    signal start_for_genBitLenFreq_14_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_genBitLenFreq_14_U0_empty_n : STD_LOGIC;
    signal start_for_processBitLength_14_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_processBitLength_14_U0_full_n : STD_LOGIC;
    signal start_for_processBitLength_14_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_processBitLength_14_U0_empty_n : STD_LOGIC;
    signal start_for_sendProcTrees_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_sendProcTrees_U0_full_n : STD_LOGIC;
    signal start_for_sendProcTrees_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_sendProcTrees_U0_empty_n : STD_LOGIC;
    signal start_for_sendHuffData_unsigned_char_0_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_sendHuffData_unsigned_char_0_U0_full_n : STD_LOGIC;
    signal start_for_sendHuffData_unsigned_char_0_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_sendHuffData_unsigned_char_0_U0_empty_n : STD_LOGIC;

    component gzipcMulticoreStreaming_filterRadixSortPart1_286_10_14_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        lz77SerialTree1_dout : IN STD_LOGIC_VECTOR (14 downto 0);
        lz77SerialTree1_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        lz77SerialTree1_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        lz77SerialTree1_empty_n : IN STD_LOGIC;
        lz77SerialTree1_read : OUT STD_LOGIC;
        intlHeapStream_i_0_din : OUT STD_LOGIC_VECTOR (24 downto 0);
        intlHeapStream_i_0_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        intlHeapStream_i_0_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
        intlHeapStream_i_0_full_n : IN STD_LOGIC;
        intlHeapStream_i_0_write : OUT STD_LOGIC;
        heapLenStream125_din : OUT STD_LOGIC_VECTOR (8 downto 0);
        heapLenStream125_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        heapLenStream125_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        heapLenStream125_full_n : IN STD_LOGIC;
        heapLenStream125_write : OUT STD_LOGIC;
        heapLenStream226_din : OUT STD_LOGIC_VECTOR (8 downto 0);
        heapLenStream226_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        heapLenStream226_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        heapLenStream226_full_n : IN STD_LOGIC;
        heapLenStream226_write : OUT STD_LOGIC;
        ldMaxCodes21_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        ldMaxCodes21_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        ldMaxCodes21_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        ldMaxCodes21_full_n : IN STD_LOGIC;
        ldMaxCodes21_write : OUT STD_LOGIC;
        isEOBlocks27_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        isEOBlocks27_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        isEOBlocks27_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        isEOBlocks27_full_n : IN STD_LOGIC;
        isEOBlocks27_write : OUT STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_radixSortMidPartial_286_10_14_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        intlHeapStream_i_0_dout : IN STD_LOGIC_VECTOR (24 downto 0);
        intlHeapStream_i_0_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        intlHeapStream_i_0_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
        intlHeapStream_i_0_empty_n : IN STD_LOGIC;
        intlHeapStream_i_0_read : OUT STD_LOGIC;
        intlHeapStream_i_1_din : OUT STD_LOGIC_VECTOR (24 downto 0);
        intlHeapStream_i_1_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        intlHeapStream_i_1_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
        intlHeapStream_i_1_full_n : IN STD_LOGIC;
        intlHeapStream_i_1_write : OUT STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_radixSortMidPartial_286_10_14_71 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        intlHeapStream_i_1_dout : IN STD_LOGIC_VECTOR (24 downto 0);
        intlHeapStream_i_1_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        intlHeapStream_i_1_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
        intlHeapStream_i_1_empty_n : IN STD_LOGIC;
        intlHeapStream_i_1_read : OUT STD_LOGIC;
        intlHeapStream_i_2_din : OUT STD_LOGIC_VECTOR (24 downto 0);
        intlHeapStream_i_2_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        intlHeapStream_i_2_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
        intlHeapStream_i_2_full_n : IN STD_LOGIC;
        intlHeapStream_i_2_write : OUT STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_radixPartialFinalSort_286_10_14_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        intlHeapStream_i_2_dout : IN STD_LOGIC_VECTOR (24 downto 0);
        intlHeapStream_i_2_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        intlHeapStream_i_2_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
        intlHeapStream_i_2_empty_n : IN STD_LOGIC;
        intlHeapStream_i_2_read : OUT STD_LOGIC;
        heapTreeStream_din : OUT STD_LOGIC_VECTOR (24 downto 0);
        heapTreeStream_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        heapTreeStream_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        heapTreeStream_full_n : IN STD_LOGIC;
        heapTreeStream_write : OUT STD_LOGIC;
        heapCanzStream_din : OUT STD_LOGIC_VECTOR (24 downto 0);
        heapCanzStream_num_data_valid : IN STD_LOGIC_VECTOR (11 downto 0);
        heapCanzStream_fifo_cap : IN STD_LOGIC_VECTOR (11 downto 0);
        heapCanzStream_full_n : IN STD_LOGIC;
        heapCanzStream_write : OUT STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_createTreeWrapper_286_10_14_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        heapTreeStream_dout : IN STD_LOGIC_VECTOR (24 downto 0);
        heapTreeStream_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        heapTreeStream_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        heapTreeStream_empty_n : IN STD_LOGIC;
        heapTreeStream_read : OUT STD_LOGIC;
        heapLenStream125_dout : IN STD_LOGIC_VECTOR (8 downto 0);
        heapLenStream125_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        heapLenStream125_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        heapLenStream125_empty_n : IN STD_LOGIC;
        heapLenStream125_read : OUT STD_LOGIC;
        parentStream_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        parentStream_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        parentStream_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        parentStream_full_n : IN STD_LOGIC;
        parentStream_write : OUT STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_getHuffBitLengths_286_10_14_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        parentStream_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        parentStream_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        parentStream_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        parentStream_empty_n : IN STD_LOGIC;
        parentStream_read : OUT STD_LOGIC;
        lengthHistogramStream_din : OUT STD_LOGIC_VECTOR (12 downto 0);
        lengthHistogramStream_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        lengthHistogramStream_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        lengthHistogramStream_full_n : IN STD_LOGIC;
        lengthHistogramStream_write : OUT STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_truncateTreeStream IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        lengthHistogramStream_dout : IN STD_LOGIC_VECTOR (12 downto 0);
        lengthHistogramStream_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        lengthHistogramStream_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        lengthHistogramStream_empty_n : IN STD_LOGIC;
        lengthHistogramStream_read : OUT STD_LOGIC;
        truncLengthHistStream_din : OUT STD_LOGIC_VECTOR (12 downto 0);
        truncLengthHistStream_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        truncLengthHistStream_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        truncLengthHistStream_full_n : IN STD_LOGIC;
        truncLengthHistStream_write : OUT STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_canonizeGetCodes_286_10_14_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        heapCanzStream_dout : IN STD_LOGIC_VECTOR (24 downto 0);
        heapCanzStream_num_data_valid : IN STD_LOGIC_VECTOR (11 downto 0);
        heapCanzStream_fifo_cap : IN STD_LOGIC_VECTOR (11 downto 0);
        heapCanzStream_empty_n : IN STD_LOGIC;
        heapCanzStream_read : OUT STD_LOGIC;
        heapLenStream226_dout : IN STD_LOGIC_VECTOR (8 downto 0);
        heapLenStream226_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        heapLenStream226_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        heapLenStream226_empty_n : IN STD_LOGIC;
        heapLenStream226_read : OUT STD_LOGIC;
        truncLengthHistStream_dout : IN STD_LOGIC_VECTOR (12 downto 0);
        truncLengthHistStream_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        truncLengthHistStream_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        truncLengthHistStream_empty_n : IN STD_LOGIC;
        truncLengthHistStream_read : OUT STD_LOGIC;
        ldCodes_din : OUT STD_LOGIC_VECTOR (20 downto 0);
        ldCodes_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        ldCodes_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        ldCodes_full_n : IN STD_LOGIC;
        ldCodes_write : OUT STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_streamDistributor_4_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        isEOBlocks27_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        isEOBlocks27_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        isEOBlocks27_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        isEOBlocks27_empty_n : IN STD_LOGIC;
        isEOBlocks27_read : OUT STD_LOGIC;
        eoBlocks_0_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        eoBlocks_0_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        eoBlocks_0_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        eoBlocks_0_full_n : IN STD_LOGIC;
        eoBlocks_0_write : OUT STD_LOGIC;
        eoBlocks_1_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        eoBlocks_1_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        eoBlocks_1_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        eoBlocks_1_full_n : IN STD_LOGIC;
        eoBlocks_1_write : OUT STD_LOGIC;
        eoBlocks_2_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        eoBlocks_2_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        eoBlocks_2_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        eoBlocks_2_full_n : IN STD_LOGIC;
        eoBlocks_2_write : OUT STD_LOGIC;
        eoBlocks_3_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        eoBlocks_3_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        eoBlocks_3_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        eoBlocks_3_full_n : IN STD_LOGIC;
        eoBlocks_3_write : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_codeWordDistributor IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ldCodes_dout : IN STD_LOGIC_VECTOR (20 downto 0);
        ldCodes_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        ldCodes_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        ldCodes_empty_n : IN STD_LOGIC;
        ldCodes_read : OUT STD_LOGIC;
        ldCodes1_din : OUT STD_LOGIC_VECTOR (20 downto 0);
        ldCodes1_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        ldCodes1_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        ldCodes1_full_n : IN STD_LOGIC;
        ldCodes1_write : OUT STD_LOGIC;
        ldCodes2_din : OUT STD_LOGIC_VECTOR (20 downto 0);
        ldCodes2_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        ldCodes2_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        ldCodes2_full_n : IN STD_LOGIC;
        ldCodes2_write : OUT STD_LOGIC;
        ldMaxCodes21_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        ldMaxCodes21_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        ldMaxCodes21_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        ldMaxCodes21_empty_n : IN STD_LOGIC;
        ldMaxCodes21_read : OUT STD_LOGIC;
        ldMaxCodes122_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        ldMaxCodes122_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        ldMaxCodes122_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        ldMaxCodes122_full_n : IN STD_LOGIC;
        ldMaxCodes122_write : OUT STD_LOGIC;
        ldMaxCodes223_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        ldMaxCodes223_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        ldMaxCodes223_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        ldMaxCodes223_full_n : IN STD_LOGIC;
        ldMaxCodes223_write : OUT STD_LOGIC;
        eoBlocks_0_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        eoBlocks_0_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        eoBlocks_0_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        eoBlocks_0_empty_n : IN STD_LOGIC;
        eoBlocks_0_read : OUT STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_genBitLenFreq_14_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ldCodes1_dout : IN STD_LOGIC_VECTOR (20 downto 0);
        ldCodes1_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        ldCodes1_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        ldCodes1_empty_n : IN STD_LOGIC;
        ldCodes1_read : OUT STD_LOGIC;
        eoBlocks_1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        eoBlocks_1_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        eoBlocks_1_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        eoBlocks_1_empty_n : IN STD_LOGIC;
        eoBlocks_1_read : OUT STD_LOGIC;
        ldFrequency_din : OUT STD_LOGIC_VECTOR (14 downto 0);
        ldFrequency_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        ldFrequency_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
        ldFrequency_full_n : IN STD_LOGIC;
        ldFrequency_write : OUT STD_LOGIC;
        ldMaxCodes122_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        ldMaxCodes122_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        ldMaxCodes122_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        ldMaxCodes122_empty_n : IN STD_LOGIC;
        ldMaxCodes122_read : OUT STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_processBitLength_14_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ldFrequency_dout : IN STD_LOGIC_VECTOR (14 downto 0);
        ldFrequency_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        ldFrequency_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
        ldFrequency_empty_n : IN STD_LOGIC;
        ldFrequency_read : OUT STD_LOGIC;
        eoBlocks_2_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        eoBlocks_2_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        eoBlocks_2_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        eoBlocks_2_empty_n : IN STD_LOGIC;
        eoBlocks_2_read : OUT STD_LOGIC;
        blCodes_din : OUT STD_LOGIC_VECTOR (20 downto 0);
        blCodes_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        blCodes_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
        blCodes_full_n : IN STD_LOGIC;
        blCodes_write : OUT STD_LOGIC;
        blMaxCodes24_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        blMaxCodes24_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        blMaxCodes24_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        blMaxCodes24_full_n : IN STD_LOGIC;
        blMaxCodes24_write : OUT STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_sendProcTrees IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        ldMaxCodes223_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        ldMaxCodes223_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        ldMaxCodes223_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        ldMaxCodes223_empty_n : IN STD_LOGIC;
        ldMaxCodes223_read : OUT STD_LOGIC;
        blMaxCodes24_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        blMaxCodes24_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        blMaxCodes24_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        blMaxCodes24_empty_n : IN STD_LOGIC;
        blMaxCodes24_read : OUT STD_LOGIC;
        ldCodes2_dout : IN STD_LOGIC_VECTOR (20 downto 0);
        ldCodes2_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        ldCodes2_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        ldCodes2_empty_n : IN STD_LOGIC;
        ldCodes2_read : OUT STD_LOGIC;
        blCodes_dout : IN STD_LOGIC_VECTOR (20 downto 0);
        blCodes_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        blCodes_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
        blCodes_empty_n : IN STD_LOGIC;
        blCodes_read : OUT STD_LOGIC;
        eoBlocks_3_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        eoBlocks_3_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        eoBlocks_3_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        eoBlocks_3_empty_n : IN STD_LOGIC;
        eoBlocks_3_read : OUT STD_LOGIC;
        intlHufCodeStream_din : OUT STD_LOGIC_VECTOR (58 downto 0);
        intlHufCodeStream_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        intlHufCodeStream_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        intlHufCodeStream_full_n : IN STD_LOGIC;
        intlHufCodeStream_write : OUT STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_sendHuffData_unsigned_char_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        intlHufCodeStream_dout : IN STD_LOGIC_VECTOR (58 downto 0);
        intlHufCodeStream_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        intlHufCodeStream_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        intlHufCodeStream_empty_n : IN STD_LOGIC;
        intlHufCodeStream_read : OUT STD_LOGIC;
        hufSerialCodeStream2_din : OUT STD_LOGIC_VECTOR (19 downto 0);
        hufSerialCodeStream2_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        hufSerialCodeStream2_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        hufSerialCodeStream2_full_n : IN STD_LOGIC;
        hufSerialCodeStream2_write : OUT STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w25_d32_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (24 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (24 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (5 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (5 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w9_d8_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (8 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (8 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w9_d16_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (8 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (8 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (4 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (4 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w10_d16_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (4 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (4 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w1_d8_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w25_d320_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (24 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (24 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w25_d1280_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (24 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (24 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w11_d640_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (10 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w13_d36_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (6 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (6 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w13_d72_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w21_d16_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (20 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (20 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (4 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (4 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w21_d320_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (20 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (20 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w21_d640_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (20 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (20 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w10_d4_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w10_d8_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w15_d32_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (14 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (14 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (5 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (5 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w21_d32_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (20 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (20 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (5 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (5 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_fifo_w59_d320_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (58 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (58 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_start_for_radixSortMidPartial_286_10_14_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_start_for_createTreeWrapper_286_10_14_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_start_for_canonizeGetCodes_286_10_14_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_start_for_streamDistributor_4_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_start_for_codeWordDistributor_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_start_for_radixSortMidPartial_286_10_14_71_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_start_for_radixPartialFinalSort_286_10_14_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_start_for_getHuffBitLengths_286_10_14_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_start_for_truncateTreeStream_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_start_for_genBitLenFreq_14_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_start_for_processBitLength_14_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_start_for_sendProcTrees_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component gzipcMulticoreStreaming_start_for_sendHuffData_unsigned_char_0_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    filterRadixSortPart1_286_10_14_1_U0 : component gzipcMulticoreStreaming_filterRadixSortPart1_286_10_14_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => filterRadixSortPart1_286_10_14_1_U0_ap_start,
        start_full_n => filterRadixSortPart1_286_10_14_1_U0_start_full_n,
        ap_done => filterRadixSortPart1_286_10_14_1_U0_ap_done,
        ap_continue => filterRadixSortPart1_286_10_14_1_U0_ap_continue,
        ap_idle => filterRadixSortPart1_286_10_14_1_U0_ap_idle,
        ap_ready => filterRadixSortPart1_286_10_14_1_U0_ap_ready,
        start_out => filterRadixSortPart1_286_10_14_1_U0_start_out,
        start_write => filterRadixSortPart1_286_10_14_1_U0_start_write,
        lz77SerialTree1_dout => lz77SerialTree1_dout,
        lz77SerialTree1_num_data_valid => ap_const_lv10_0,
        lz77SerialTree1_fifo_cap => ap_const_lv10_0,
        lz77SerialTree1_empty_n => lz77SerialTree1_empty_n,
        lz77SerialTree1_read => filterRadixSortPart1_286_10_14_1_U0_lz77SerialTree1_read,
        intlHeapStream_i_0_din => filterRadixSortPart1_286_10_14_1_U0_intlHeapStream_i_0_din,
        intlHeapStream_i_0_num_data_valid => intlHeapStream_i_0_num_data_valid,
        intlHeapStream_i_0_fifo_cap => intlHeapStream_i_0_fifo_cap,
        intlHeapStream_i_0_full_n => intlHeapStream_i_0_full_n,
        intlHeapStream_i_0_write => filterRadixSortPart1_286_10_14_1_U0_intlHeapStream_i_0_write,
        heapLenStream125_din => filterRadixSortPart1_286_10_14_1_U0_heapLenStream125_din,
        heapLenStream125_num_data_valid => heapLenStream1_num_data_valid,
        heapLenStream125_fifo_cap => heapLenStream1_fifo_cap,
        heapLenStream125_full_n => heapLenStream1_full_n,
        heapLenStream125_write => filterRadixSortPart1_286_10_14_1_U0_heapLenStream125_write,
        heapLenStream226_din => filterRadixSortPart1_286_10_14_1_U0_heapLenStream226_din,
        heapLenStream226_num_data_valid => heapLenStream2_num_data_valid,
        heapLenStream226_fifo_cap => heapLenStream2_fifo_cap,
        heapLenStream226_full_n => heapLenStream2_full_n,
        heapLenStream226_write => filterRadixSortPart1_286_10_14_1_U0_heapLenStream226_write,
        ldMaxCodes21_din => filterRadixSortPart1_286_10_14_1_U0_ldMaxCodes21_din,
        ldMaxCodes21_num_data_valid => ldMaxCodes_num_data_valid,
        ldMaxCodes21_fifo_cap => ldMaxCodes_fifo_cap,
        ldMaxCodes21_full_n => ldMaxCodes_full_n,
        ldMaxCodes21_write => filterRadixSortPart1_286_10_14_1_U0_ldMaxCodes21_write,
        isEOBlocks27_din => filterRadixSortPart1_286_10_14_1_U0_isEOBlocks27_din,
        isEOBlocks27_num_data_valid => isEOBlocks_num_data_valid,
        isEOBlocks27_fifo_cap => isEOBlocks_fifo_cap,
        isEOBlocks27_full_n => isEOBlocks_full_n,
        isEOBlocks27_write => filterRadixSortPart1_286_10_14_1_U0_isEOBlocks27_write);

    radixSortMidPartial_286_10_14_U0 : component gzipcMulticoreStreaming_radixSortMidPartial_286_10_14_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => radixSortMidPartial_286_10_14_U0_ap_start,
        start_full_n => start_for_radixSortMidPartial_286_10_14_71_U0_full_n,
        ap_done => radixSortMidPartial_286_10_14_U0_ap_done,
        ap_continue => radixSortMidPartial_286_10_14_U0_ap_continue,
        ap_idle => radixSortMidPartial_286_10_14_U0_ap_idle,
        ap_ready => radixSortMidPartial_286_10_14_U0_ap_ready,
        start_out => radixSortMidPartial_286_10_14_U0_start_out,
        start_write => radixSortMidPartial_286_10_14_U0_start_write,
        intlHeapStream_i_0_dout => intlHeapStream_i_0_dout,
        intlHeapStream_i_0_num_data_valid => intlHeapStream_i_0_num_data_valid,
        intlHeapStream_i_0_fifo_cap => intlHeapStream_i_0_fifo_cap,
        intlHeapStream_i_0_empty_n => intlHeapStream_i_0_empty_n,
        intlHeapStream_i_0_read => radixSortMidPartial_286_10_14_U0_intlHeapStream_i_0_read,
        intlHeapStream_i_1_din => radixSortMidPartial_286_10_14_U0_intlHeapStream_i_1_din,
        intlHeapStream_i_1_num_data_valid => intlHeapStream_i_1_num_data_valid,
        intlHeapStream_i_1_fifo_cap => intlHeapStream_i_1_fifo_cap,
        intlHeapStream_i_1_full_n => intlHeapStream_i_1_full_n,
        intlHeapStream_i_1_write => radixSortMidPartial_286_10_14_U0_intlHeapStream_i_1_write);

    radixSortMidPartial_286_10_14_71_U0 : component gzipcMulticoreStreaming_radixSortMidPartial_286_10_14_71
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => radixSortMidPartial_286_10_14_71_U0_ap_start,
        start_full_n => start_for_radixPartialFinalSort_286_10_14_U0_full_n,
        ap_done => radixSortMidPartial_286_10_14_71_U0_ap_done,
        ap_continue => radixSortMidPartial_286_10_14_71_U0_ap_continue,
        ap_idle => radixSortMidPartial_286_10_14_71_U0_ap_idle,
        ap_ready => radixSortMidPartial_286_10_14_71_U0_ap_ready,
        start_out => radixSortMidPartial_286_10_14_71_U0_start_out,
        start_write => radixSortMidPartial_286_10_14_71_U0_start_write,
        intlHeapStream_i_1_dout => intlHeapStream_i_1_dout,
        intlHeapStream_i_1_num_data_valid => intlHeapStream_i_1_num_data_valid,
        intlHeapStream_i_1_fifo_cap => intlHeapStream_i_1_fifo_cap,
        intlHeapStream_i_1_empty_n => intlHeapStream_i_1_empty_n,
        intlHeapStream_i_1_read => radixSortMidPartial_286_10_14_71_U0_intlHeapStream_i_1_read,
        intlHeapStream_i_2_din => radixSortMidPartial_286_10_14_71_U0_intlHeapStream_i_2_din,
        intlHeapStream_i_2_num_data_valid => intlHeapStream_i_2_num_data_valid,
        intlHeapStream_i_2_fifo_cap => intlHeapStream_i_2_fifo_cap,
        intlHeapStream_i_2_full_n => intlHeapStream_i_2_full_n,
        intlHeapStream_i_2_write => radixSortMidPartial_286_10_14_71_U0_intlHeapStream_i_2_write);

    radixPartialFinalSort_286_10_14_U0 : component gzipcMulticoreStreaming_radixPartialFinalSort_286_10_14_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => radixPartialFinalSort_286_10_14_U0_ap_start,
        ap_done => radixPartialFinalSort_286_10_14_U0_ap_done,
        ap_continue => radixPartialFinalSort_286_10_14_U0_ap_continue,
        ap_idle => radixPartialFinalSort_286_10_14_U0_ap_idle,
        ap_ready => radixPartialFinalSort_286_10_14_U0_ap_ready,
        intlHeapStream_i_2_dout => intlHeapStream_i_2_dout,
        intlHeapStream_i_2_num_data_valid => intlHeapStream_i_2_num_data_valid,
        intlHeapStream_i_2_fifo_cap => intlHeapStream_i_2_fifo_cap,
        intlHeapStream_i_2_empty_n => intlHeapStream_i_2_empty_n,
        intlHeapStream_i_2_read => radixPartialFinalSort_286_10_14_U0_intlHeapStream_i_2_read,
        heapTreeStream_din => radixPartialFinalSort_286_10_14_U0_heapTreeStream_din,
        heapTreeStream_num_data_valid => heapTreeStream_num_data_valid,
        heapTreeStream_fifo_cap => heapTreeStream_fifo_cap,
        heapTreeStream_full_n => heapTreeStream_full_n,
        heapTreeStream_write => radixPartialFinalSort_286_10_14_U0_heapTreeStream_write,
        heapCanzStream_din => radixPartialFinalSort_286_10_14_U0_heapCanzStream_din,
        heapCanzStream_num_data_valid => heapCanzStream_num_data_valid,
        heapCanzStream_fifo_cap => heapCanzStream_fifo_cap,
        heapCanzStream_full_n => heapCanzStream_full_n,
        heapCanzStream_write => radixPartialFinalSort_286_10_14_U0_heapCanzStream_write);

    createTreeWrapper_286_10_14_U0 : component gzipcMulticoreStreaming_createTreeWrapper_286_10_14_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => createTreeWrapper_286_10_14_U0_ap_start,
        start_full_n => start_for_getHuffBitLengths_286_10_14_U0_full_n,
        ap_done => createTreeWrapper_286_10_14_U0_ap_done,
        ap_continue => createTreeWrapper_286_10_14_U0_ap_continue,
        ap_idle => createTreeWrapper_286_10_14_U0_ap_idle,
        ap_ready => createTreeWrapper_286_10_14_U0_ap_ready,
        start_out => createTreeWrapper_286_10_14_U0_start_out,
        start_write => createTreeWrapper_286_10_14_U0_start_write,
        heapTreeStream_dout => heapTreeStream_dout,
        heapTreeStream_num_data_valid => heapTreeStream_num_data_valid,
        heapTreeStream_fifo_cap => heapTreeStream_fifo_cap,
        heapTreeStream_empty_n => heapTreeStream_empty_n,
        heapTreeStream_read => createTreeWrapper_286_10_14_U0_heapTreeStream_read,
        heapLenStream125_dout => heapLenStream1_dout,
        heapLenStream125_num_data_valid => heapLenStream1_num_data_valid,
        heapLenStream125_fifo_cap => heapLenStream1_fifo_cap,
        heapLenStream125_empty_n => heapLenStream1_empty_n,
        heapLenStream125_read => createTreeWrapper_286_10_14_U0_heapLenStream125_read,
        parentStream_din => createTreeWrapper_286_10_14_U0_parentStream_din,
        parentStream_num_data_valid => parentStream_num_data_valid,
        parentStream_fifo_cap => parentStream_fifo_cap,
        parentStream_full_n => parentStream_full_n,
        parentStream_write => createTreeWrapper_286_10_14_U0_parentStream_write);

    getHuffBitLengths_286_10_14_U0 : component gzipcMulticoreStreaming_getHuffBitLengths_286_10_14_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => getHuffBitLengths_286_10_14_U0_ap_start,
        start_full_n => start_for_truncateTreeStream_U0_full_n,
        ap_done => getHuffBitLengths_286_10_14_U0_ap_done,
        ap_continue => getHuffBitLengths_286_10_14_U0_ap_continue,
        ap_idle => getHuffBitLengths_286_10_14_U0_ap_idle,
        ap_ready => getHuffBitLengths_286_10_14_U0_ap_ready,
        start_out => getHuffBitLengths_286_10_14_U0_start_out,
        start_write => getHuffBitLengths_286_10_14_U0_start_write,
        parentStream_dout => parentStream_dout,
        parentStream_num_data_valid => parentStream_num_data_valid,
        parentStream_fifo_cap => parentStream_fifo_cap,
        parentStream_empty_n => parentStream_empty_n,
        parentStream_read => getHuffBitLengths_286_10_14_U0_parentStream_read,
        lengthHistogramStream_din => getHuffBitLengths_286_10_14_U0_lengthHistogramStream_din,
        lengthHistogramStream_num_data_valid => lengthHistogramStream_num_data_valid,
        lengthHistogramStream_fifo_cap => lengthHistogramStream_fifo_cap,
        lengthHistogramStream_full_n => lengthHistogramStream_full_n,
        lengthHistogramStream_write => getHuffBitLengths_286_10_14_U0_lengthHistogramStream_write);

    truncateTreeStream_U0 : component gzipcMulticoreStreaming_truncateTreeStream
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => truncateTreeStream_U0_ap_start,
        ap_done => truncateTreeStream_U0_ap_done,
        ap_continue => truncateTreeStream_U0_ap_continue,
        ap_idle => truncateTreeStream_U0_ap_idle,
        ap_ready => truncateTreeStream_U0_ap_ready,
        lengthHistogramStream_dout => lengthHistogramStream_dout,
        lengthHistogramStream_num_data_valid => lengthHistogramStream_num_data_valid,
        lengthHistogramStream_fifo_cap => lengthHistogramStream_fifo_cap,
        lengthHistogramStream_empty_n => lengthHistogramStream_empty_n,
        lengthHistogramStream_read => truncateTreeStream_U0_lengthHistogramStream_read,
        truncLengthHistStream_din => truncateTreeStream_U0_truncLengthHistStream_din,
        truncLengthHistStream_num_data_valid => truncLengthHistStream_num_data_valid,
        truncLengthHistStream_fifo_cap => truncLengthHistStream_fifo_cap,
        truncLengthHistStream_full_n => truncLengthHistStream_full_n,
        truncLengthHistStream_write => truncateTreeStream_U0_truncLengthHistStream_write);

    canonizeGetCodes_286_10_14_U0 : component gzipcMulticoreStreaming_canonizeGetCodes_286_10_14_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => canonizeGetCodes_286_10_14_U0_ap_start,
        ap_done => canonizeGetCodes_286_10_14_U0_ap_done,
        ap_continue => canonizeGetCodes_286_10_14_U0_ap_continue,
        ap_idle => canonizeGetCodes_286_10_14_U0_ap_idle,
        ap_ready => canonizeGetCodes_286_10_14_U0_ap_ready,
        heapCanzStream_dout => heapCanzStream_dout,
        heapCanzStream_num_data_valid => heapCanzStream_num_data_valid,
        heapCanzStream_fifo_cap => heapCanzStream_fifo_cap,
        heapCanzStream_empty_n => heapCanzStream_empty_n,
        heapCanzStream_read => canonizeGetCodes_286_10_14_U0_heapCanzStream_read,
        heapLenStream226_dout => heapLenStream2_dout,
        heapLenStream226_num_data_valid => heapLenStream2_num_data_valid,
        heapLenStream226_fifo_cap => heapLenStream2_fifo_cap,
        heapLenStream226_empty_n => heapLenStream2_empty_n,
        heapLenStream226_read => canonizeGetCodes_286_10_14_U0_heapLenStream226_read,
        truncLengthHistStream_dout => truncLengthHistStream_dout,
        truncLengthHistStream_num_data_valid => truncLengthHistStream_num_data_valid,
        truncLengthHistStream_fifo_cap => truncLengthHistStream_fifo_cap,
        truncLengthHistStream_empty_n => truncLengthHistStream_empty_n,
        truncLengthHistStream_read => canonizeGetCodes_286_10_14_U0_truncLengthHistStream_read,
        ldCodes_din => canonizeGetCodes_286_10_14_U0_ldCodes_din,
        ldCodes_num_data_valid => ldCodes_num_data_valid,
        ldCodes_fifo_cap => ldCodes_fifo_cap,
        ldCodes_full_n => ldCodes_full_n,
        ldCodes_write => canonizeGetCodes_286_10_14_U0_ldCodes_write);

    streamDistributor_4_U0 : component gzipcMulticoreStreaming_streamDistributor_4_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => streamDistributor_4_U0_ap_start,
        start_full_n => streamDistributor_4_U0_start_full_n,
        ap_done => streamDistributor_4_U0_ap_done,
        ap_continue => streamDistributor_4_U0_ap_continue,
        ap_idle => streamDistributor_4_U0_ap_idle,
        ap_ready => streamDistributor_4_U0_ap_ready,
        isEOBlocks27_dout => isEOBlocks_dout,
        isEOBlocks27_num_data_valid => isEOBlocks_num_data_valid,
        isEOBlocks27_fifo_cap => isEOBlocks_fifo_cap,
        isEOBlocks27_empty_n => isEOBlocks_empty_n,
        isEOBlocks27_read => streamDistributor_4_U0_isEOBlocks27_read,
        eoBlocks_0_din => streamDistributor_4_U0_eoBlocks_0_din,
        eoBlocks_0_num_data_valid => eoBlocks_0_num_data_valid,
        eoBlocks_0_fifo_cap => eoBlocks_0_fifo_cap,
        eoBlocks_0_full_n => eoBlocks_0_full_n,
        eoBlocks_0_write => streamDistributor_4_U0_eoBlocks_0_write,
        eoBlocks_1_din => streamDistributor_4_U0_eoBlocks_1_din,
        eoBlocks_1_num_data_valid => eoBlocks_1_num_data_valid,
        eoBlocks_1_fifo_cap => eoBlocks_1_fifo_cap,
        eoBlocks_1_full_n => eoBlocks_1_full_n,
        eoBlocks_1_write => streamDistributor_4_U0_eoBlocks_1_write,
        eoBlocks_2_din => streamDistributor_4_U0_eoBlocks_2_din,
        eoBlocks_2_num_data_valid => eoBlocks_2_num_data_valid,
        eoBlocks_2_fifo_cap => eoBlocks_2_fifo_cap,
        eoBlocks_2_full_n => eoBlocks_2_full_n,
        eoBlocks_2_write => streamDistributor_4_U0_eoBlocks_2_write,
        eoBlocks_3_din => streamDistributor_4_U0_eoBlocks_3_din,
        eoBlocks_3_num_data_valid => eoBlocks_3_num_data_valid,
        eoBlocks_3_fifo_cap => eoBlocks_3_fifo_cap,
        eoBlocks_3_full_n => eoBlocks_3_full_n,
        eoBlocks_3_write => streamDistributor_4_U0_eoBlocks_3_write,
        start_out => streamDistributor_4_U0_start_out,
        start_write => streamDistributor_4_U0_start_write);

    codeWordDistributor_U0 : component gzipcMulticoreStreaming_codeWordDistributor
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => codeWordDistributor_U0_ap_start,
        ap_done => codeWordDistributor_U0_ap_done,
        ap_continue => codeWordDistributor_U0_ap_continue,
        ap_idle => codeWordDistributor_U0_ap_idle,
        ap_ready => codeWordDistributor_U0_ap_ready,
        ldCodes_dout => ldCodes_dout,
        ldCodes_num_data_valid => ldCodes_num_data_valid,
        ldCodes_fifo_cap => ldCodes_fifo_cap,
        ldCodes_empty_n => ldCodes_empty_n,
        ldCodes_read => codeWordDistributor_U0_ldCodes_read,
        ldCodes1_din => codeWordDistributor_U0_ldCodes1_din,
        ldCodes1_num_data_valid => ldCodes1_num_data_valid,
        ldCodes1_fifo_cap => ldCodes1_fifo_cap,
        ldCodes1_full_n => ldCodes1_full_n,
        ldCodes1_write => codeWordDistributor_U0_ldCodes1_write,
        ldCodes2_din => codeWordDistributor_U0_ldCodes2_din,
        ldCodes2_num_data_valid => ldCodes2_num_data_valid,
        ldCodes2_fifo_cap => ldCodes2_fifo_cap,
        ldCodes2_full_n => ldCodes2_full_n,
        ldCodes2_write => codeWordDistributor_U0_ldCodes2_write,
        ldMaxCodes21_dout => ldMaxCodes_dout,
        ldMaxCodes21_num_data_valid => ldMaxCodes_num_data_valid,
        ldMaxCodes21_fifo_cap => ldMaxCodes_fifo_cap,
        ldMaxCodes21_empty_n => ldMaxCodes_empty_n,
        ldMaxCodes21_read => codeWordDistributor_U0_ldMaxCodes21_read,
        ldMaxCodes122_din => codeWordDistributor_U0_ldMaxCodes122_din,
        ldMaxCodes122_num_data_valid => ldMaxCodes1_num_data_valid,
        ldMaxCodes122_fifo_cap => ldMaxCodes1_fifo_cap,
        ldMaxCodes122_full_n => ldMaxCodes1_full_n,
        ldMaxCodes122_write => codeWordDistributor_U0_ldMaxCodes122_write,
        ldMaxCodes223_din => codeWordDistributor_U0_ldMaxCodes223_din,
        ldMaxCodes223_num_data_valid => ldMaxCodes2_num_data_valid,
        ldMaxCodes223_fifo_cap => ldMaxCodes2_fifo_cap,
        ldMaxCodes223_full_n => ldMaxCodes2_full_n,
        ldMaxCodes223_write => codeWordDistributor_U0_ldMaxCodes223_write,
        eoBlocks_0_dout => eoBlocks_0_dout,
        eoBlocks_0_num_data_valid => eoBlocks_0_num_data_valid,
        eoBlocks_0_fifo_cap => eoBlocks_0_fifo_cap,
        eoBlocks_0_empty_n => eoBlocks_0_empty_n,
        eoBlocks_0_read => codeWordDistributor_U0_eoBlocks_0_read);

    genBitLenFreq_14_U0 : component gzipcMulticoreStreaming_genBitLenFreq_14_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => genBitLenFreq_14_U0_ap_start,
        ap_done => genBitLenFreq_14_U0_ap_done,
        ap_continue => genBitLenFreq_14_U0_ap_continue,
        ap_idle => genBitLenFreq_14_U0_ap_idle,
        ap_ready => genBitLenFreq_14_U0_ap_ready,
        ldCodes1_dout => ldCodes1_dout,
        ldCodes1_num_data_valid => ldCodes1_num_data_valid,
        ldCodes1_fifo_cap => ldCodes1_fifo_cap,
        ldCodes1_empty_n => ldCodes1_empty_n,
        ldCodes1_read => genBitLenFreq_14_U0_ldCodes1_read,
        eoBlocks_1_dout => eoBlocks_1_dout,
        eoBlocks_1_num_data_valid => eoBlocks_1_num_data_valid,
        eoBlocks_1_fifo_cap => eoBlocks_1_fifo_cap,
        eoBlocks_1_empty_n => eoBlocks_1_empty_n,
        eoBlocks_1_read => genBitLenFreq_14_U0_eoBlocks_1_read,
        ldFrequency_din => genBitLenFreq_14_U0_ldFrequency_din,
        ldFrequency_num_data_valid => ldFrequency_num_data_valid,
        ldFrequency_fifo_cap => ldFrequency_fifo_cap,
        ldFrequency_full_n => ldFrequency_full_n,
        ldFrequency_write => genBitLenFreq_14_U0_ldFrequency_write,
        ldMaxCodes122_dout => ldMaxCodes1_dout,
        ldMaxCodes122_num_data_valid => ldMaxCodes1_num_data_valid,
        ldMaxCodes122_fifo_cap => ldMaxCodes1_fifo_cap,
        ldMaxCodes122_empty_n => ldMaxCodes1_empty_n,
        ldMaxCodes122_read => genBitLenFreq_14_U0_ldMaxCodes122_read);

    processBitLength_14_U0 : component gzipcMulticoreStreaming_processBitLength_14_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => processBitLength_14_U0_ap_start,
        ap_done => processBitLength_14_U0_ap_done,
        ap_continue => processBitLength_14_U0_ap_continue,
        ap_idle => processBitLength_14_U0_ap_idle,
        ap_ready => processBitLength_14_U0_ap_ready,
        ldFrequency_dout => ldFrequency_dout,
        ldFrequency_num_data_valid => ldFrequency_num_data_valid,
        ldFrequency_fifo_cap => ldFrequency_fifo_cap,
        ldFrequency_empty_n => ldFrequency_empty_n,
        ldFrequency_read => processBitLength_14_U0_ldFrequency_read,
        eoBlocks_2_dout => eoBlocks_2_dout,
        eoBlocks_2_num_data_valid => eoBlocks_2_num_data_valid,
        eoBlocks_2_fifo_cap => eoBlocks_2_fifo_cap,
        eoBlocks_2_empty_n => eoBlocks_2_empty_n,
        eoBlocks_2_read => processBitLength_14_U0_eoBlocks_2_read,
        blCodes_din => processBitLength_14_U0_blCodes_din,
        blCodes_num_data_valid => blCodes_num_data_valid,
        blCodes_fifo_cap => blCodes_fifo_cap,
        blCodes_full_n => blCodes_full_n,
        blCodes_write => processBitLength_14_U0_blCodes_write,
        blMaxCodes24_din => processBitLength_14_U0_blMaxCodes24_din,
        blMaxCodes24_num_data_valid => blMaxCodes_num_data_valid,
        blMaxCodes24_fifo_cap => blMaxCodes_fifo_cap,
        blMaxCodes24_full_n => blMaxCodes_full_n,
        blMaxCodes24_write => processBitLength_14_U0_blMaxCodes24_write);

    sendProcTrees_U0 : component gzipcMulticoreStreaming_sendProcTrees
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => sendProcTrees_U0_ap_start,
        start_full_n => start_for_sendHuffData_unsigned_char_0_U0_full_n,
        ap_done => sendProcTrees_U0_ap_done,
        ap_continue => sendProcTrees_U0_ap_continue,
        ap_idle => sendProcTrees_U0_ap_idle,
        ap_ready => sendProcTrees_U0_ap_ready,
        start_out => sendProcTrees_U0_start_out,
        start_write => sendProcTrees_U0_start_write,
        ldMaxCodes223_dout => ldMaxCodes2_dout,
        ldMaxCodes223_num_data_valid => ldMaxCodes2_num_data_valid,
        ldMaxCodes223_fifo_cap => ldMaxCodes2_fifo_cap,
        ldMaxCodes223_empty_n => ldMaxCodes2_empty_n,
        ldMaxCodes223_read => sendProcTrees_U0_ldMaxCodes223_read,
        blMaxCodes24_dout => blMaxCodes_dout,
        blMaxCodes24_num_data_valid => blMaxCodes_num_data_valid,
        blMaxCodes24_fifo_cap => blMaxCodes_fifo_cap,
        blMaxCodes24_empty_n => blMaxCodes_empty_n,
        blMaxCodes24_read => sendProcTrees_U0_blMaxCodes24_read,
        ldCodes2_dout => ldCodes2_dout,
        ldCodes2_num_data_valid => ldCodes2_num_data_valid,
        ldCodes2_fifo_cap => ldCodes2_fifo_cap,
        ldCodes2_empty_n => ldCodes2_empty_n,
        ldCodes2_read => sendProcTrees_U0_ldCodes2_read,
        blCodes_dout => blCodes_dout,
        blCodes_num_data_valid => blCodes_num_data_valid,
        blCodes_fifo_cap => blCodes_fifo_cap,
        blCodes_empty_n => blCodes_empty_n,
        blCodes_read => sendProcTrees_U0_blCodes_read,
        eoBlocks_3_dout => eoBlocks_3_dout,
        eoBlocks_3_num_data_valid => eoBlocks_3_num_data_valid,
        eoBlocks_3_fifo_cap => eoBlocks_3_fifo_cap,
        eoBlocks_3_empty_n => eoBlocks_3_empty_n,
        eoBlocks_3_read => sendProcTrees_U0_eoBlocks_3_read,
        intlHufCodeStream_din => sendProcTrees_U0_intlHufCodeStream_din,
        intlHufCodeStream_num_data_valid => intlHufCodeStream_num_data_valid,
        intlHufCodeStream_fifo_cap => intlHufCodeStream_fifo_cap,
        intlHufCodeStream_full_n => intlHufCodeStream_full_n,
        intlHufCodeStream_write => sendProcTrees_U0_intlHufCodeStream_write);

    sendHuffData_unsigned_char_0_U0 : component gzipcMulticoreStreaming_sendHuffData_unsigned_char_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => sendHuffData_unsigned_char_0_U0_ap_start,
        ap_done => sendHuffData_unsigned_char_0_U0_ap_done,
        ap_continue => sendHuffData_unsigned_char_0_U0_ap_continue,
        ap_idle => sendHuffData_unsigned_char_0_U0_ap_idle,
        ap_ready => sendHuffData_unsigned_char_0_U0_ap_ready,
        intlHufCodeStream_dout => intlHufCodeStream_dout,
        intlHufCodeStream_num_data_valid => intlHufCodeStream_num_data_valid,
        intlHufCodeStream_fifo_cap => intlHufCodeStream_fifo_cap,
        intlHufCodeStream_empty_n => intlHufCodeStream_empty_n,
        intlHufCodeStream_read => sendHuffData_unsigned_char_0_U0_intlHufCodeStream_read,
        hufSerialCodeStream2_din => sendHuffData_unsigned_char_0_U0_hufSerialCodeStream2_din,
        hufSerialCodeStream2_num_data_valid => ap_const_lv10_0,
        hufSerialCodeStream2_fifo_cap => ap_const_lv10_0,
        hufSerialCodeStream2_full_n => hufSerialCodeStream2_full_n,
        hufSerialCodeStream2_write => sendHuffData_unsigned_char_0_U0_hufSerialCodeStream2_write);

    intlHeapStream_i_0_U : component gzipcMulticoreStreaming_fifo_w25_d32_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filterRadixSortPart1_286_10_14_1_U0_intlHeapStream_i_0_din,
        if_full_n => intlHeapStream_i_0_full_n,
        if_write => filterRadixSortPart1_286_10_14_1_U0_intlHeapStream_i_0_write,
        if_dout => intlHeapStream_i_0_dout,
        if_num_data_valid => intlHeapStream_i_0_num_data_valid,
        if_fifo_cap => intlHeapStream_i_0_fifo_cap,
        if_empty_n => intlHeapStream_i_0_empty_n,
        if_read => radixSortMidPartial_286_10_14_U0_intlHeapStream_i_0_read);

    heapLenStream1_U : component gzipcMulticoreStreaming_fifo_w9_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filterRadixSortPart1_286_10_14_1_U0_heapLenStream125_din,
        if_full_n => heapLenStream1_full_n,
        if_write => filterRadixSortPart1_286_10_14_1_U0_heapLenStream125_write,
        if_dout => heapLenStream1_dout,
        if_num_data_valid => heapLenStream1_num_data_valid,
        if_fifo_cap => heapLenStream1_fifo_cap,
        if_empty_n => heapLenStream1_empty_n,
        if_read => createTreeWrapper_286_10_14_U0_heapLenStream125_read);

    heapLenStream2_U : component gzipcMulticoreStreaming_fifo_w9_d16_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filterRadixSortPart1_286_10_14_1_U0_heapLenStream226_din,
        if_full_n => heapLenStream2_full_n,
        if_write => filterRadixSortPart1_286_10_14_1_U0_heapLenStream226_write,
        if_dout => heapLenStream2_dout,
        if_num_data_valid => heapLenStream2_num_data_valid,
        if_fifo_cap => heapLenStream2_fifo_cap,
        if_empty_n => heapLenStream2_empty_n,
        if_read => canonizeGetCodes_286_10_14_U0_heapLenStream226_read);

    ldMaxCodes_U : component gzipcMulticoreStreaming_fifo_w10_d16_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filterRadixSortPart1_286_10_14_1_U0_ldMaxCodes21_din,
        if_full_n => ldMaxCodes_full_n,
        if_write => filterRadixSortPart1_286_10_14_1_U0_ldMaxCodes21_write,
        if_dout => ldMaxCodes_dout,
        if_num_data_valid => ldMaxCodes_num_data_valid,
        if_fifo_cap => ldMaxCodes_fifo_cap,
        if_empty_n => ldMaxCodes_empty_n,
        if_read => codeWordDistributor_U0_ldMaxCodes21_read);

    isEOBlocks_U : component gzipcMulticoreStreaming_fifo_w1_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filterRadixSortPart1_286_10_14_1_U0_isEOBlocks27_din,
        if_full_n => isEOBlocks_full_n,
        if_write => filterRadixSortPart1_286_10_14_1_U0_isEOBlocks27_write,
        if_dout => isEOBlocks_dout,
        if_num_data_valid => isEOBlocks_num_data_valid,
        if_fifo_cap => isEOBlocks_fifo_cap,
        if_empty_n => isEOBlocks_empty_n,
        if_read => streamDistributor_4_U0_isEOBlocks27_read);

    intlHeapStream_i_1_U : component gzipcMulticoreStreaming_fifo_w25_d32_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => radixSortMidPartial_286_10_14_U0_intlHeapStream_i_1_din,
        if_full_n => intlHeapStream_i_1_full_n,
        if_write => radixSortMidPartial_286_10_14_U0_intlHeapStream_i_1_write,
        if_dout => intlHeapStream_i_1_dout,
        if_num_data_valid => intlHeapStream_i_1_num_data_valid,
        if_fifo_cap => intlHeapStream_i_1_fifo_cap,
        if_empty_n => intlHeapStream_i_1_empty_n,
        if_read => radixSortMidPartial_286_10_14_71_U0_intlHeapStream_i_1_read);

    intlHeapStream_i_2_U : component gzipcMulticoreStreaming_fifo_w25_d32_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => radixSortMidPartial_286_10_14_71_U0_intlHeapStream_i_2_din,
        if_full_n => intlHeapStream_i_2_full_n,
        if_write => radixSortMidPartial_286_10_14_71_U0_intlHeapStream_i_2_write,
        if_dout => intlHeapStream_i_2_dout,
        if_num_data_valid => intlHeapStream_i_2_num_data_valid,
        if_fifo_cap => intlHeapStream_i_2_fifo_cap,
        if_empty_n => intlHeapStream_i_2_empty_n,
        if_read => radixPartialFinalSort_286_10_14_U0_intlHeapStream_i_2_read);

    heapTreeStream_U : component gzipcMulticoreStreaming_fifo_w25_d320_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => radixPartialFinalSort_286_10_14_U0_heapTreeStream_din,
        if_full_n => heapTreeStream_full_n,
        if_write => radixPartialFinalSort_286_10_14_U0_heapTreeStream_write,
        if_dout => heapTreeStream_dout,
        if_num_data_valid => heapTreeStream_num_data_valid,
        if_fifo_cap => heapTreeStream_fifo_cap,
        if_empty_n => heapTreeStream_empty_n,
        if_read => createTreeWrapper_286_10_14_U0_heapTreeStream_read);

    heapCanzStream_U : component gzipcMulticoreStreaming_fifo_w25_d1280_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => radixPartialFinalSort_286_10_14_U0_heapCanzStream_din,
        if_full_n => heapCanzStream_full_n,
        if_write => radixPartialFinalSort_286_10_14_U0_heapCanzStream_write,
        if_dout => heapCanzStream_dout,
        if_num_data_valid => heapCanzStream_num_data_valid,
        if_fifo_cap => heapCanzStream_fifo_cap,
        if_empty_n => heapCanzStream_empty_n,
        if_read => canonizeGetCodes_286_10_14_U0_heapCanzStream_read);

    parentStream_U : component gzipcMulticoreStreaming_fifo_w11_d640_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => createTreeWrapper_286_10_14_U0_parentStream_din,
        if_full_n => parentStream_full_n,
        if_write => createTreeWrapper_286_10_14_U0_parentStream_write,
        if_dout => parentStream_dout,
        if_num_data_valid => parentStream_num_data_valid,
        if_fifo_cap => parentStream_fifo_cap,
        if_empty_n => parentStream_empty_n,
        if_read => getHuffBitLengths_286_10_14_U0_parentStream_read);

    lengthHistogramStream_U : component gzipcMulticoreStreaming_fifo_w13_d36_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => getHuffBitLengths_286_10_14_U0_lengthHistogramStream_din,
        if_full_n => lengthHistogramStream_full_n,
        if_write => getHuffBitLengths_286_10_14_U0_lengthHistogramStream_write,
        if_dout => lengthHistogramStream_dout,
        if_num_data_valid => lengthHistogramStream_num_data_valid,
        if_fifo_cap => lengthHistogramStream_fifo_cap,
        if_empty_n => lengthHistogramStream_empty_n,
        if_read => truncateTreeStream_U0_lengthHistogramStream_read);

    truncLengthHistStream_U : component gzipcMulticoreStreaming_fifo_w13_d72_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateTreeStream_U0_truncLengthHistStream_din,
        if_full_n => truncLengthHistStream_full_n,
        if_write => truncateTreeStream_U0_truncLengthHistStream_write,
        if_dout => truncLengthHistStream_dout,
        if_num_data_valid => truncLengthHistStream_num_data_valid,
        if_fifo_cap => truncLengthHistStream_fifo_cap,
        if_empty_n => truncLengthHistStream_empty_n,
        if_read => canonizeGetCodes_286_10_14_U0_truncLengthHistStream_read);

    ldCodes_U : component gzipcMulticoreStreaming_fifo_w21_d16_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => canonizeGetCodes_286_10_14_U0_ldCodes_din,
        if_full_n => ldCodes_full_n,
        if_write => canonizeGetCodes_286_10_14_U0_ldCodes_write,
        if_dout => ldCodes_dout,
        if_num_data_valid => ldCodes_num_data_valid,
        if_fifo_cap => ldCodes_fifo_cap,
        if_empty_n => ldCodes_empty_n,
        if_read => codeWordDistributor_U0_ldCodes_read);

    eoBlocks_0_U : component gzipcMulticoreStreaming_fifo_w1_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => streamDistributor_4_U0_eoBlocks_0_din,
        if_full_n => eoBlocks_0_full_n,
        if_write => streamDistributor_4_U0_eoBlocks_0_write,
        if_dout => eoBlocks_0_dout,
        if_num_data_valid => eoBlocks_0_num_data_valid,
        if_fifo_cap => eoBlocks_0_fifo_cap,
        if_empty_n => eoBlocks_0_empty_n,
        if_read => codeWordDistributor_U0_eoBlocks_0_read);

    eoBlocks_1_U : component gzipcMulticoreStreaming_fifo_w1_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => streamDistributor_4_U0_eoBlocks_1_din,
        if_full_n => eoBlocks_1_full_n,
        if_write => streamDistributor_4_U0_eoBlocks_1_write,
        if_dout => eoBlocks_1_dout,
        if_num_data_valid => eoBlocks_1_num_data_valid,
        if_fifo_cap => eoBlocks_1_fifo_cap,
        if_empty_n => eoBlocks_1_empty_n,
        if_read => genBitLenFreq_14_U0_eoBlocks_1_read);

    eoBlocks_2_U : component gzipcMulticoreStreaming_fifo_w1_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => streamDistributor_4_U0_eoBlocks_2_din,
        if_full_n => eoBlocks_2_full_n,
        if_write => streamDistributor_4_U0_eoBlocks_2_write,
        if_dout => eoBlocks_2_dout,
        if_num_data_valid => eoBlocks_2_num_data_valid,
        if_fifo_cap => eoBlocks_2_fifo_cap,
        if_empty_n => eoBlocks_2_empty_n,
        if_read => processBitLength_14_U0_eoBlocks_2_read);

    eoBlocks_3_U : component gzipcMulticoreStreaming_fifo_w1_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => streamDistributor_4_U0_eoBlocks_3_din,
        if_full_n => eoBlocks_3_full_n,
        if_write => streamDistributor_4_U0_eoBlocks_3_write,
        if_dout => eoBlocks_3_dout,
        if_num_data_valid => eoBlocks_3_num_data_valid,
        if_fifo_cap => eoBlocks_3_fifo_cap,
        if_empty_n => eoBlocks_3_empty_n,
        if_read => sendProcTrees_U0_eoBlocks_3_read);

    ldCodes1_U : component gzipcMulticoreStreaming_fifo_w21_d320_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => codeWordDistributor_U0_ldCodes1_din,
        if_full_n => ldCodes1_full_n,
        if_write => codeWordDistributor_U0_ldCodes1_write,
        if_dout => ldCodes1_dout,
        if_num_data_valid => ldCodes1_num_data_valid,
        if_fifo_cap => ldCodes1_fifo_cap,
        if_empty_n => ldCodes1_empty_n,
        if_read => genBitLenFreq_14_U0_ldCodes1_read);

    ldCodes2_U : component gzipcMulticoreStreaming_fifo_w21_d640_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => codeWordDistributor_U0_ldCodes2_din,
        if_full_n => ldCodes2_full_n,
        if_write => codeWordDistributor_U0_ldCodes2_write,
        if_dout => ldCodes2_dout,
        if_num_data_valid => ldCodes2_num_data_valid,
        if_fifo_cap => ldCodes2_fifo_cap,
        if_empty_n => ldCodes2_empty_n,
        if_read => sendProcTrees_U0_ldCodes2_read);

    ldMaxCodes1_U : component gzipcMulticoreStreaming_fifo_w10_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => codeWordDistributor_U0_ldMaxCodes122_din,
        if_full_n => ldMaxCodes1_full_n,
        if_write => codeWordDistributor_U0_ldMaxCodes122_write,
        if_dout => ldMaxCodes1_dout,
        if_num_data_valid => ldMaxCodes1_num_data_valid,
        if_fifo_cap => ldMaxCodes1_fifo_cap,
        if_empty_n => ldMaxCodes1_empty_n,
        if_read => genBitLenFreq_14_U0_ldMaxCodes122_read);

    ldMaxCodes2_U : component gzipcMulticoreStreaming_fifo_w10_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => codeWordDistributor_U0_ldMaxCodes223_din,
        if_full_n => ldMaxCodes2_full_n,
        if_write => codeWordDistributor_U0_ldMaxCodes223_write,
        if_dout => ldMaxCodes2_dout,
        if_num_data_valid => ldMaxCodes2_num_data_valid,
        if_fifo_cap => ldMaxCodes2_fifo_cap,
        if_empty_n => ldMaxCodes2_empty_n,
        if_read => sendProcTrees_U0_ldMaxCodes223_read);

    ldFrequency_U : component gzipcMulticoreStreaming_fifo_w15_d32_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => genBitLenFreq_14_U0_ldFrequency_din,
        if_full_n => ldFrequency_full_n,
        if_write => genBitLenFreq_14_U0_ldFrequency_write,
        if_dout => ldFrequency_dout,
        if_num_data_valid => ldFrequency_num_data_valid,
        if_fifo_cap => ldFrequency_fifo_cap,
        if_empty_n => ldFrequency_empty_n,
        if_read => processBitLength_14_U0_ldFrequency_read);

    blCodes_U : component gzipcMulticoreStreaming_fifo_w21_d32_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => processBitLength_14_U0_blCodes_din,
        if_full_n => blCodes_full_n,
        if_write => processBitLength_14_U0_blCodes_write,
        if_dout => blCodes_dout,
        if_num_data_valid => blCodes_num_data_valid,
        if_fifo_cap => blCodes_fifo_cap,
        if_empty_n => blCodes_empty_n,
        if_read => sendProcTrees_U0_blCodes_read);

    blMaxCodes_U : component gzipcMulticoreStreaming_fifo_w10_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => processBitLength_14_U0_blMaxCodes24_din,
        if_full_n => blMaxCodes_full_n,
        if_write => processBitLength_14_U0_blMaxCodes24_write,
        if_dout => blMaxCodes_dout,
        if_num_data_valid => blMaxCodes_num_data_valid,
        if_fifo_cap => blMaxCodes_fifo_cap,
        if_empty_n => blMaxCodes_empty_n,
        if_read => sendProcTrees_U0_blMaxCodes24_read);

    intlHufCodeStream_U : component gzipcMulticoreStreaming_fifo_w59_d320_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => sendProcTrees_U0_intlHufCodeStream_din,
        if_full_n => intlHufCodeStream_full_n,
        if_write => sendProcTrees_U0_intlHufCodeStream_write,
        if_dout => intlHufCodeStream_dout,
        if_num_data_valid => intlHufCodeStream_num_data_valid,
        if_fifo_cap => intlHufCodeStream_fifo_cap,
        if_empty_n => intlHufCodeStream_empty_n,
        if_read => sendHuffData_unsigned_char_0_U0_intlHufCodeStream_read);

    start_for_radixSortMidPartial_286_10_14_U0_U : component gzipcMulticoreStreaming_start_for_radixSortMidPartial_286_10_14_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_radixSortMidPartial_286_10_14_U0_din,
        if_full_n => start_for_radixSortMidPartial_286_10_14_U0_full_n,
        if_write => filterRadixSortPart1_286_10_14_1_U0_start_write,
        if_dout => start_for_radixSortMidPartial_286_10_14_U0_dout,
        if_empty_n => start_for_radixSortMidPartial_286_10_14_U0_empty_n,
        if_read => radixSortMidPartial_286_10_14_U0_ap_ready);

    start_for_createTreeWrapper_286_10_14_U0_U : component gzipcMulticoreStreaming_start_for_createTreeWrapper_286_10_14_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_createTreeWrapper_286_10_14_U0_din,
        if_full_n => start_for_createTreeWrapper_286_10_14_U0_full_n,
        if_write => filterRadixSortPart1_286_10_14_1_U0_start_write,
        if_dout => start_for_createTreeWrapper_286_10_14_U0_dout,
        if_empty_n => start_for_createTreeWrapper_286_10_14_U0_empty_n,
        if_read => createTreeWrapper_286_10_14_U0_ap_ready);

    start_for_canonizeGetCodes_286_10_14_U0_U : component gzipcMulticoreStreaming_start_for_canonizeGetCodes_286_10_14_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_canonizeGetCodes_286_10_14_U0_din,
        if_full_n => start_for_canonizeGetCodes_286_10_14_U0_full_n,
        if_write => filterRadixSortPart1_286_10_14_1_U0_start_write,
        if_dout => start_for_canonizeGetCodes_286_10_14_U0_dout,
        if_empty_n => start_for_canonizeGetCodes_286_10_14_U0_empty_n,
        if_read => canonizeGetCodes_286_10_14_U0_ap_ready);

    start_for_streamDistributor_4_U0_U : component gzipcMulticoreStreaming_start_for_streamDistributor_4_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_streamDistributor_4_U0_din,
        if_full_n => start_for_streamDistributor_4_U0_full_n,
        if_write => filterRadixSortPart1_286_10_14_1_U0_start_write,
        if_dout => start_for_streamDistributor_4_U0_dout,
        if_empty_n => start_for_streamDistributor_4_U0_empty_n,
        if_read => streamDistributor_4_U0_ap_ready);

    start_for_codeWordDistributor_U0_U : component gzipcMulticoreStreaming_start_for_codeWordDistributor_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_codeWordDistributor_U0_din,
        if_full_n => start_for_codeWordDistributor_U0_full_n,
        if_write => filterRadixSortPart1_286_10_14_1_U0_start_write,
        if_dout => start_for_codeWordDistributor_U0_dout,
        if_empty_n => start_for_codeWordDistributor_U0_empty_n,
        if_read => codeWordDistributor_U0_ap_ready);

    start_for_radixSortMidPartial_286_10_14_71_U0_U : component gzipcMulticoreStreaming_start_for_radixSortMidPartial_286_10_14_71_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_radixSortMidPartial_286_10_14_71_U0_din,
        if_full_n => start_for_radixSortMidPartial_286_10_14_71_U0_full_n,
        if_write => radixSortMidPartial_286_10_14_U0_start_write,
        if_dout => start_for_radixSortMidPartial_286_10_14_71_U0_dout,
        if_empty_n => start_for_radixSortMidPartial_286_10_14_71_U0_empty_n,
        if_read => radixSortMidPartial_286_10_14_71_U0_ap_ready);

    start_for_radixPartialFinalSort_286_10_14_U0_U : component gzipcMulticoreStreaming_start_for_radixPartialFinalSort_286_10_14_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_radixPartialFinalSort_286_10_14_U0_din,
        if_full_n => start_for_radixPartialFinalSort_286_10_14_U0_full_n,
        if_write => radixSortMidPartial_286_10_14_71_U0_start_write,
        if_dout => start_for_radixPartialFinalSort_286_10_14_U0_dout,
        if_empty_n => start_for_radixPartialFinalSort_286_10_14_U0_empty_n,
        if_read => radixPartialFinalSort_286_10_14_U0_ap_ready);

    start_for_getHuffBitLengths_286_10_14_U0_U : component gzipcMulticoreStreaming_start_for_getHuffBitLengths_286_10_14_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_getHuffBitLengths_286_10_14_U0_din,
        if_full_n => start_for_getHuffBitLengths_286_10_14_U0_full_n,
        if_write => createTreeWrapper_286_10_14_U0_start_write,
        if_dout => start_for_getHuffBitLengths_286_10_14_U0_dout,
        if_empty_n => start_for_getHuffBitLengths_286_10_14_U0_empty_n,
        if_read => getHuffBitLengths_286_10_14_U0_ap_ready);

    start_for_truncateTreeStream_U0_U : component gzipcMulticoreStreaming_start_for_truncateTreeStream_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_truncateTreeStream_U0_din,
        if_full_n => start_for_truncateTreeStream_U0_full_n,
        if_write => getHuffBitLengths_286_10_14_U0_start_write,
        if_dout => start_for_truncateTreeStream_U0_dout,
        if_empty_n => start_for_truncateTreeStream_U0_empty_n,
        if_read => truncateTreeStream_U0_ap_ready);

    start_for_genBitLenFreq_14_U0_U : component gzipcMulticoreStreaming_start_for_genBitLenFreq_14_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_genBitLenFreq_14_U0_din,
        if_full_n => start_for_genBitLenFreq_14_U0_full_n,
        if_write => streamDistributor_4_U0_start_write,
        if_dout => start_for_genBitLenFreq_14_U0_dout,
        if_empty_n => start_for_genBitLenFreq_14_U0_empty_n,
        if_read => genBitLenFreq_14_U0_ap_ready);

    start_for_processBitLength_14_U0_U : component gzipcMulticoreStreaming_start_for_processBitLength_14_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_processBitLength_14_U0_din,
        if_full_n => start_for_processBitLength_14_U0_full_n,
        if_write => streamDistributor_4_U0_start_write,
        if_dout => start_for_processBitLength_14_U0_dout,
        if_empty_n => start_for_processBitLength_14_U0_empty_n,
        if_read => processBitLength_14_U0_ap_ready);

    start_for_sendProcTrees_U0_U : component gzipcMulticoreStreaming_start_for_sendProcTrees_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_sendProcTrees_U0_din,
        if_full_n => start_for_sendProcTrees_U0_full_n,
        if_write => streamDistributor_4_U0_start_write,
        if_dout => start_for_sendProcTrees_U0_dout,
        if_empty_n => start_for_sendProcTrees_U0_empty_n,
        if_read => sendProcTrees_U0_ap_ready);

    start_for_sendHuffData_unsigned_char_0_U0_U : component gzipcMulticoreStreaming_start_for_sendHuffData_unsigned_char_0_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_sendHuffData_unsigned_char_0_U0_din,
        if_full_n => start_for_sendHuffData_unsigned_char_0_U0_full_n,
        if_write => sendProcTrees_U0_start_write,
        if_dout => start_for_sendHuffData_unsigned_char_0_U0_dout,
        if_empty_n => start_for_sendHuffData_unsigned_char_0_U0_empty_n,
        if_read => sendHuffData_unsigned_char_0_U0_ap_ready);




    ap_done <= sendHuffData_unsigned_char_0_U0_ap_done;
    ap_idle <= (truncateTreeStream_U0_ap_idle and streamDistributor_4_U0_ap_idle and sendProcTrees_U0_ap_idle and sendHuffData_unsigned_char_0_U0_ap_idle and radixSortMidPartial_286_10_14_U0_ap_idle and radixSortMidPartial_286_10_14_71_U0_ap_idle and radixPartialFinalSort_286_10_14_U0_ap_idle and processBitLength_14_U0_ap_idle and getHuffBitLengths_286_10_14_U0_ap_idle and genBitLenFreq_14_U0_ap_idle and filterRadixSortPart1_286_10_14_1_U0_ap_idle and createTreeWrapper_286_10_14_U0_ap_idle and codeWordDistributor_U0_ap_idle and canonizeGetCodes_286_10_14_U0_ap_idle);
    ap_ready <= filterRadixSortPart1_286_10_14_1_U0_ap_ready;
    canonizeGetCodes_286_10_14_U0_ap_continue <= ap_const_logic_1;
    canonizeGetCodes_286_10_14_U0_ap_start <= start_for_canonizeGetCodes_286_10_14_U0_empty_n;
    codeWordDistributor_U0_ap_continue <= ap_const_logic_1;
    codeWordDistributor_U0_ap_start <= start_for_codeWordDistributor_U0_empty_n;
    createTreeWrapper_286_10_14_U0_ap_continue <= ap_const_logic_1;
    createTreeWrapper_286_10_14_U0_ap_start <= start_for_createTreeWrapper_286_10_14_U0_empty_n;
    filterRadixSortPart1_286_10_14_1_U0_ap_continue <= ap_const_logic_1;
    filterRadixSortPart1_286_10_14_1_U0_ap_start <= ap_start;
    filterRadixSortPart1_286_10_14_1_U0_start_full_n <= (start_for_streamDistributor_4_U0_full_n and start_for_radixSortMidPartial_286_10_14_U0_full_n and start_for_createTreeWrapper_286_10_14_U0_full_n and start_for_codeWordDistributor_U0_full_n and start_for_canonizeGetCodes_286_10_14_U0_full_n);
    genBitLenFreq_14_U0_ap_continue <= ap_const_logic_1;
    genBitLenFreq_14_U0_ap_start <= start_for_genBitLenFreq_14_U0_empty_n;
    getHuffBitLengths_286_10_14_U0_ap_continue <= ap_const_logic_1;
    getHuffBitLengths_286_10_14_U0_ap_start <= start_for_getHuffBitLengths_286_10_14_U0_empty_n;
    hufSerialCodeStream2_din <= sendHuffData_unsigned_char_0_U0_hufSerialCodeStream2_din;
    hufSerialCodeStream2_write <= sendHuffData_unsigned_char_0_U0_hufSerialCodeStream2_write;
    lz77SerialTree1_read <= filterRadixSortPart1_286_10_14_1_U0_lz77SerialTree1_read;
    processBitLength_14_U0_ap_continue <= ap_const_logic_1;
    processBitLength_14_U0_ap_start <= start_for_processBitLength_14_U0_empty_n;
    radixPartialFinalSort_286_10_14_U0_ap_continue <= ap_const_logic_1;
    radixPartialFinalSort_286_10_14_U0_ap_start <= start_for_radixPartialFinalSort_286_10_14_U0_empty_n;
    radixSortMidPartial_286_10_14_71_U0_ap_continue <= ap_const_logic_1;
    radixSortMidPartial_286_10_14_71_U0_ap_start <= start_for_radixSortMidPartial_286_10_14_71_U0_empty_n;
    radixSortMidPartial_286_10_14_U0_ap_continue <= ap_const_logic_1;
    radixSortMidPartial_286_10_14_U0_ap_start <= start_for_radixSortMidPartial_286_10_14_U0_empty_n;
    sendHuffData_unsigned_char_0_U0_ap_continue <= ap_continue;
    sendHuffData_unsigned_char_0_U0_ap_start <= start_for_sendHuffData_unsigned_char_0_U0_empty_n;
    sendProcTrees_U0_ap_continue <= ap_const_logic_1;
    sendProcTrees_U0_ap_start <= start_for_sendProcTrees_U0_empty_n;
    start_for_canonizeGetCodes_286_10_14_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_codeWordDistributor_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_createTreeWrapper_286_10_14_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_genBitLenFreq_14_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_getHuffBitLengths_286_10_14_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_processBitLength_14_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_radixPartialFinalSort_286_10_14_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_radixSortMidPartial_286_10_14_71_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_radixSortMidPartial_286_10_14_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_sendHuffData_unsigned_char_0_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_sendProcTrees_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_streamDistributor_4_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_truncateTreeStream_U0_din <= (0=>ap_const_logic_1, others=>'-');
    streamDistributor_4_U0_ap_continue <= ap_const_logic_1;
    streamDistributor_4_U0_ap_start <= start_for_streamDistributor_4_U0_empty_n;
    streamDistributor_4_U0_start_full_n <= (start_for_sendProcTrees_U0_full_n and start_for_processBitLength_14_U0_full_n and start_for_genBitLenFreq_14_U0_full_n);
    truncateTreeStream_U0_ap_continue <= ap_const_logic_1;
    truncateTreeStream_U0_ap_start <= start_for_truncateTreeStream_U0_empty_n;
end behav;
