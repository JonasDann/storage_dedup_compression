-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_filterRadixSortPart1_286_10_14_1_Pipeline_filter_compute_histogram is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    lz77SerialTree1_dout : IN STD_LOGIC_VECTOR (14 downto 0);
    lz77SerialTree1_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
    lz77SerialTree1_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
    lz77SerialTree1_empty_n : IN STD_LOGIC;
    lz77SerialTree1_read : OUT STD_LOGIC;
    tmp_data_V : IN STD_LOGIC_VECTOR (13 downto 0);
    i_symbolSize_V : IN STD_LOGIC_VECTOR (8 downto 0);
    heap_value_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    heap_value_V_ce1 : OUT STD_LOGIC;
    heap_value_V_we1 : OUT STD_LOGIC;
    heap_value_V_d1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    heap_frequency_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    heap_frequency_V_ce1 : OUT STD_LOGIC;
    heap_frequency_V_we1 : OUT STD_LOGIC;
    heap_frequency_V_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    prev_sorting_value_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    prev_sorting_value_V_ce0 : OUT STD_LOGIC;
    prev_sorting_value_V_we0 : OUT STD_LOGIC;
    prev_sorting_value_V_d0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    prev_sorting_frequency_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    prev_sorting_frequency_V_ce0 : OUT STD_LOGIC;
    prev_sorting_frequency_V_we0 : OUT STD_LOGIC;
    prev_sorting_frequency_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    current_digit_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    current_digit_V_ce0 : OUT STD_LOGIC;
    current_digit_V_we0 : OUT STD_LOGIC;
    current_digit_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    digit_histogram_V_166_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_166_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_165_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_165_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_164_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_164_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_163_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_163_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_162_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_162_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_161_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_161_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_160_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_160_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_159_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_159_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_158_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_158_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_157_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_157_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_156_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_156_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_155_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_155_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_154_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_154_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_153_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_153_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_201_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    digit_histogram_V_201_out_ap_vld : OUT STD_LOGIC;
    heapLength_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    heapLength_out_ap_vld : OUT STD_LOGIC;
    smLen_V_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    smLen_V_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of gzipcMulticoreStreaming_filterRadixSortPart1_286_10_14_1_Pipeline_filter_compute_histogram is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal read_flag_reg_442 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln310_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal lz77SerialTree1_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal n_5_reg_1042 : STD_LOGIC_VECTOR (8 downto 0);
    signal n_5_reg_1042_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln310_reg_1050 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln314_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln314_reg_1054 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal zext_ln321_fu_660_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1081_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cVal_value_V_fu_152 : STD_LOGIC_VECTOR (8 downto 0);
    signal n_fu_563_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_allocacmp_n_5 : STD_LOGIC_VECTOR (8 downto 0);
    signal digit_histogram_V_68_fu_156 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_fu_712_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_V_fu_669_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal digit_histogram_V_69_fu_160 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_70_fu_164 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_71_fu_168 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_72_fu_172 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_73_fu_176 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_74_fu_180 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_75_fu_184 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_76_fu_188 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_77_fu_192 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_78_fu_196 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_79_fu_200 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_80_fu_204 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_81_fu_208 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_82_fu_212 : STD_LOGIC_VECTOR (9 downto 0);
    signal digit_histogram_V_83_fu_216 : STD_LOGIC_VECTOR (9 downto 0);
    signal cf_V_fu_220 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln145_fu_574_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal smLen_V_fu_224 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln259_fu_657_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal heapLength_fu_228 : STD_LOGIC_VECTOR (15 downto 0);
    signal heapLength_10_fu_801_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal cf_V_5_fu_591_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_fu_674_p18 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_548 : BOOLEAN;
    signal ap_condition_552 : BOOLEAN;
    signal ap_condition_556 : BOOLEAN;
    signal ap_condition_560 : BOOLEAN;
    signal ap_condition_564 : BOOLEAN;
    signal ap_condition_568 : BOOLEAN;
    signal ap_condition_572 : BOOLEAN;
    signal ap_condition_576 : BOOLEAN;
    signal ap_condition_580 : BOOLEAN;
    signal ap_condition_584 : BOOLEAN;
    signal ap_condition_588 : BOOLEAN;
    signal ap_condition_592 : BOOLEAN;
    signal ap_condition_596 : BOOLEAN;
    signal ap_condition_600 : BOOLEAN;
    signal ap_condition_604 : BOOLEAN;
    signal ap_condition_608 : BOOLEAN;
    signal ap_condition_613 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component gzipcMulticoreStreaming_mux_164_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        din3 : IN STD_LOGIC_VECTOR (9 downto 0);
        din4 : IN STD_LOGIC_VECTOR (9 downto 0);
        din5 : IN STD_LOGIC_VECTOR (9 downto 0);
        din6 : IN STD_LOGIC_VECTOR (9 downto 0);
        din7 : IN STD_LOGIC_VECTOR (9 downto 0);
        din8 : IN STD_LOGIC_VECTOR (9 downto 0);
        din9 : IN STD_LOGIC_VECTOR (9 downto 0);
        din10 : IN STD_LOGIC_VECTOR (9 downto 0);
        din11 : IN STD_LOGIC_VECTOR (9 downto 0);
        din12 : IN STD_LOGIC_VECTOR (9 downto 0);
        din13 : IN STD_LOGIC_VECTOR (9 downto 0);
        din14 : IN STD_LOGIC_VECTOR (9 downto 0);
        din15 : IN STD_LOGIC_VECTOR (9 downto 0);
        din16 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_164_10_1_1_U1133 : component gzipcMulticoreStreaming_mux_164_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 10,
        din5_WIDTH => 10,
        din6_WIDTH => 10,
        din7_WIDTH => 10,
        din8_WIDTH => 10,
        din9_WIDTH => 10,
        din10_WIDTH => 10,
        din11_WIDTH => 10,
        din12_WIDTH => 10,
        din13_WIDTH => 10,
        din14_WIDTH => 10,
        din15_WIDTH => 10,
        din16_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        din0 => digit_histogram_V_68_fu_156,
        din1 => digit_histogram_V_69_fu_160,
        din2 => digit_histogram_V_70_fu_164,
        din3 => digit_histogram_V_71_fu_168,
        din4 => digit_histogram_V_72_fu_172,
        din5 => digit_histogram_V_73_fu_176,
        din6 => digit_histogram_V_74_fu_180,
        din7 => digit_histogram_V_75_fu_184,
        din8 => digit_histogram_V_76_fu_188,
        din9 => digit_histogram_V_77_fu_192,
        din10 => digit_histogram_V_78_fu_196,
        din11 => digit_histogram_V_79_fu_200,
        din12 => digit_histogram_V_80_fu_204,
        din13 => digit_histogram_V_81_fu_208,
        din14 => digit_histogram_V_82_fu_212,
        din15 => digit_histogram_V_83_fu_216,
        din16 => digit_V_fu_669_p1,
        dout => tmp_s_fu_674_p18);

    flow_control_loop_pipe_sequential_init_U : component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    cVal_value_V_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln310_fu_557_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    cVal_value_V_fu_152 <= n_fu_563_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    cVal_value_V_fu_152 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;

    cf_V_fu_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    cf_V_fu_220 <= tmp_data_V;
                elsif (((read_flag_reg_442 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    cf_V_fu_220 <= trunc_ln145_fu_574_p1;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_68_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_68_fu_156 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_548)) then 
                    digit_histogram_V_68_fu_156 <= digit_histogram_V_fu_712_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_69_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_69_fu_160 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_552)) then 
                    digit_histogram_V_69_fu_160 <= digit_histogram_V_fu_712_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_70_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_70_fu_164 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_556)) then 
                    digit_histogram_V_70_fu_164 <= digit_histogram_V_fu_712_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_71_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_71_fu_168 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_560)) then 
                    digit_histogram_V_71_fu_168 <= digit_histogram_V_fu_712_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_72_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_72_fu_172 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_564)) then 
                    digit_histogram_V_72_fu_172 <= digit_histogram_V_fu_712_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_73_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_73_fu_176 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_568)) then 
                    digit_histogram_V_73_fu_176 <= digit_histogram_V_fu_712_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_74_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_74_fu_180 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_572)) then 
                    digit_histogram_V_74_fu_180 <= digit_histogram_V_fu_712_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_75_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_75_fu_184 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_576)) then 
                    digit_histogram_V_75_fu_184 <= digit_histogram_V_fu_712_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_76_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_76_fu_188 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_580)) then 
                    digit_histogram_V_76_fu_188 <= digit_histogram_V_fu_712_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_77_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_77_fu_192 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_584)) then 
                    digit_histogram_V_77_fu_192 <= digit_histogram_V_fu_712_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_78_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_78_fu_196 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_588)) then 
                    digit_histogram_V_78_fu_196 <= digit_histogram_V_fu_712_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_79_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_79_fu_200 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_592)) then 
                    digit_histogram_V_79_fu_200 <= digit_histogram_V_fu_712_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_80_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_80_fu_204 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_596)) then 
                    digit_histogram_V_80_fu_204 <= digit_histogram_V_fu_712_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_81_fu_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_81_fu_208 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_600)) then 
                    digit_histogram_V_81_fu_208 <= digit_histogram_V_fu_712_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_82_fu_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_82_fu_212 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_604)) then 
                    digit_histogram_V_82_fu_212 <= digit_histogram_V_fu_712_p2;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_83_fu_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    digit_histogram_V_83_fu_216 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_608)) then 
                    digit_histogram_V_83_fu_216 <= digit_histogram_V_fu_712_p2;
                end if;
            end if; 
        end if;
    end process;

    heapLength_fu_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    heapLength_fu_228 <= ap_const_lv16_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0))) then 
                    heapLength_fu_228 <= heapLength_10_fu_801_p2;
                end if;
            end if; 
        end if;
    end process;

    read_flag_reg_442_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1))) then 
                    read_flag_reg_442 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_condition_613)) then 
                    read_flag_reg_442 <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;

    smLen_V_fu_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    smLen_V_fu_224(0) <= '0';
                    smLen_V_fu_224(1) <= '0';
                    smLen_V_fu_224(2) <= '0';
                    smLen_V_fu_224(3) <= '0';
                    smLen_V_fu_224(4) <= '0';
                    smLen_V_fu_224(5) <= '0';
                    smLen_V_fu_224(6) <= '0';
                    smLen_V_fu_224(7) <= '0';
                    smLen_V_fu_224(8) <= '0';
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0))) then 
                                        smLen_V_fu_224(8 downto 0) <= zext_ln259_fu_657_p1(8 downto 0);
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                icmp_ln310_reg_1050 <= icmp_ln310_fu_557_p2;
                icmp_ln314_reg_1054 <= icmp_ln314_fu_583_p2;
                n_5_reg_1042 <= ap_sig_allocacmp_n_5;
                n_5_reg_1042_pp0_iter1_reg <= n_5_reg_1042;
            end if;
        end if;
    end process;
    smLen_V_fu_224(9) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, lz77SerialTree1_empty_n, read_flag_reg_442)
    begin
                ap_block_pp0_stage0_01001 <= ((read_flag_reg_442 = ap_const_lv1_1) and (lz77SerialTree1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, lz77SerialTree1_empty_n, read_flag_reg_442)
    begin
                ap_block_pp0_stage0_11001 <= ((read_flag_reg_442 = ap_const_lv1_1) and (lz77SerialTree1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, lz77SerialTree1_empty_n, read_flag_reg_442)
    begin
                ap_block_pp0_stage0_subdone <= ((read_flag_reg_442 = ap_const_lv1_1) and (lz77SerialTree1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(lz77SerialTree1_empty_n, read_flag_reg_442)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((read_flag_reg_442 = ap_const_lv1_1) and (lz77SerialTree1_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_548_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1081_fu_600_p2, digit_V_fu_669_p1)
    begin
                ap_condition_548 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_fu_669_p1 = ap_const_lv4_0) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0));
    end process;


    ap_condition_552_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1081_fu_600_p2, digit_V_fu_669_p1)
    begin
                ap_condition_552 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_fu_669_p1 = ap_const_lv4_1) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0));
    end process;


    ap_condition_556_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1081_fu_600_p2, digit_V_fu_669_p1)
    begin
                ap_condition_556 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_fu_669_p1 = ap_const_lv4_2) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0));
    end process;


    ap_condition_560_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1081_fu_600_p2, digit_V_fu_669_p1)
    begin
                ap_condition_560 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_fu_669_p1 = ap_const_lv4_3) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0));
    end process;


    ap_condition_564_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1081_fu_600_p2, digit_V_fu_669_p1)
    begin
                ap_condition_564 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_fu_669_p1 = ap_const_lv4_4) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0));
    end process;


    ap_condition_568_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1081_fu_600_p2, digit_V_fu_669_p1)
    begin
                ap_condition_568 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_fu_669_p1 = ap_const_lv4_5) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0));
    end process;


    ap_condition_572_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1081_fu_600_p2, digit_V_fu_669_p1)
    begin
                ap_condition_572 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_fu_669_p1 = ap_const_lv4_6) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0));
    end process;


    ap_condition_576_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1081_fu_600_p2, digit_V_fu_669_p1)
    begin
                ap_condition_576 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_fu_669_p1 = ap_const_lv4_7) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0));
    end process;


    ap_condition_580_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1081_fu_600_p2, digit_V_fu_669_p1)
    begin
                ap_condition_580 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_fu_669_p1 = ap_const_lv4_8) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0));
    end process;


    ap_condition_584_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1081_fu_600_p2, digit_V_fu_669_p1)
    begin
                ap_condition_584 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_fu_669_p1 = ap_const_lv4_9) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0));
    end process;


    ap_condition_588_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1081_fu_600_p2, digit_V_fu_669_p1)
    begin
                ap_condition_588 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_fu_669_p1 = ap_const_lv4_A) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0));
    end process;


    ap_condition_592_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1081_fu_600_p2, digit_V_fu_669_p1)
    begin
                ap_condition_592 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_fu_669_p1 = ap_const_lv4_B) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0));
    end process;


    ap_condition_596_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1081_fu_600_p2, digit_V_fu_669_p1)
    begin
                ap_condition_596 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_fu_669_p1 = ap_const_lv4_C) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0));
    end process;


    ap_condition_600_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1081_fu_600_p2, digit_V_fu_669_p1)
    begin
                ap_condition_600 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_fu_669_p1 = ap_const_lv4_D) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0));
    end process;


    ap_condition_604_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1081_fu_600_p2, digit_V_fu_669_p1)
    begin
                ap_condition_604 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_fu_669_p1 = ap_const_lv4_E) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0));
    end process;


    ap_condition_608_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1081_fu_600_p2, digit_V_fu_669_p1)
    begin
                ap_condition_608 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (digit_V_fu_669_p1 = ap_const_lv4_F) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0));
    end process;


    ap_condition_613_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
                ap_condition_613 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln310_reg_1050 = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln310_fu_557_p2)
    begin
        if (((icmp_ln310_fu_557_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_n_5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, cVal_value_V_fu_152)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_n_5 <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_n_5 <= cVal_value_V_fu_152;
        end if; 
    end process;

    cf_V_5_fu_591_p3 <= 
        ap_const_lv14_1 when (icmp_ln314_reg_1054(0) = '1') else 
        cf_V_fu_220;
    current_digit_V_address0 <= zext_ln321_fu_660_p1(9 - 1 downto 0);

    current_digit_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_digit_V_ce0 <= ap_const_logic_1;
        else 
            current_digit_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    current_digit_V_d0 <= digit_V_fu_669_p1;

    current_digit_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln1081_fu_600_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0))) then 
            current_digit_V_we0 <= ap_const_logic_1;
        else 
            current_digit_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    digit_V_fu_669_p1 <= cf_V_5_fu_591_p3(4 - 1 downto 0);
    digit_histogram_V_153_out <= digit_histogram_V_69_fu_160;

    digit_histogram_V_153_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln310_reg_1050 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_153_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_153_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_154_out <= digit_histogram_V_70_fu_164;

    digit_histogram_V_154_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln310_reg_1050 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_154_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_154_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_155_out <= digit_histogram_V_71_fu_168;

    digit_histogram_V_155_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln310_reg_1050 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_155_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_155_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_156_out <= digit_histogram_V_72_fu_172;

    digit_histogram_V_156_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln310_reg_1050 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_156_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_156_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_157_out <= digit_histogram_V_73_fu_176;

    digit_histogram_V_157_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln310_reg_1050 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_157_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_157_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_158_out <= digit_histogram_V_74_fu_180;

    digit_histogram_V_158_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln310_reg_1050 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_158_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_158_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_159_out <= digit_histogram_V_75_fu_184;

    digit_histogram_V_159_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln310_reg_1050 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_159_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_159_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_160_out <= digit_histogram_V_76_fu_188;

    digit_histogram_V_160_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln310_reg_1050 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_160_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_160_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_161_out <= digit_histogram_V_77_fu_192;

    digit_histogram_V_161_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln310_reg_1050 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_161_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_161_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_162_out <= digit_histogram_V_78_fu_196;

    digit_histogram_V_162_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln310_reg_1050 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_162_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_162_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_163_out <= digit_histogram_V_79_fu_200;

    digit_histogram_V_163_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln310_reg_1050 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_163_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_163_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_164_out <= digit_histogram_V_80_fu_204;

    digit_histogram_V_164_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln310_reg_1050 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_164_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_164_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_165_out <= digit_histogram_V_81_fu_208;

    digit_histogram_V_165_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln310_reg_1050 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_165_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_165_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_166_out <= digit_histogram_V_82_fu_212;

    digit_histogram_V_166_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln310_reg_1050 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_166_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_166_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_201_out <= digit_histogram_V_68_fu_156;

    digit_histogram_V_201_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln310_reg_1050 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            digit_histogram_V_201_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_201_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_fu_712_p2 <= std_logic_vector(unsigned(tmp_s_fu_674_p18) + unsigned(ap_const_lv10_1));
    heapLength_10_fu_801_p2 <= std_logic_vector(unsigned(heapLength_fu_228) + unsigned(ap_const_lv16_1));
    heapLength_out <= heapLength_fu_228;

    heapLength_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln310_reg_1050 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            heapLength_out_ap_vld <= ap_const_logic_1;
        else 
            heapLength_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    heap_frequency_V_address1 <= zext_ln321_fu_660_p1(9 - 1 downto 0);

    heap_frequency_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            heap_frequency_V_ce1 <= ap_const_logic_1;
        else 
            heap_frequency_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    heap_frequency_V_d1 <= cf_V_5_fu_591_p3;

    heap_frequency_V_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln1081_fu_600_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0))) then 
            heap_frequency_V_we1 <= ap_const_logic_1;
        else 
            heap_frequency_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    heap_value_V_address1 <= zext_ln321_fu_660_p1(9 - 1 downto 0);

    heap_value_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            heap_value_V_ce1 <= ap_const_logic_1;
        else 
            heap_value_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    heap_value_V_d1 <= n_5_reg_1042_pp0_iter1_reg;

    heap_value_V_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln1081_fu_600_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0))) then 
            heap_value_V_we1 <= ap_const_logic_1;
        else 
            heap_value_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1081_fu_600_p2 <= "1" when (cf_V_5_fu_591_p3 = ap_const_lv14_0) else "0";
    icmp_ln310_fu_557_p2 <= "1" when (ap_sig_allocacmp_n_5 = i_symbolSize_V) else "0";
    icmp_ln314_fu_583_p2 <= "1" when (n_5_reg_1042 = ap_const_lv9_100) else "0";

    lz77SerialTree1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, lz77SerialTree1_empty_n, read_flag_reg_442, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (read_flag_reg_442 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lz77SerialTree1_blk_n <= lz77SerialTree1_empty_n;
        else 
            lz77SerialTree1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    lz77SerialTree1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, read_flag_reg_442, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (read_flag_reg_442 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lz77SerialTree1_read <= ap_const_logic_1;
        else 
            lz77SerialTree1_read <= ap_const_logic_0;
        end if; 
    end process;

    n_fu_563_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_n_5) + unsigned(ap_const_lv9_1));
    prev_sorting_frequency_V_address0 <= zext_ln321_fu_660_p1(9 - 1 downto 0);

    prev_sorting_frequency_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            prev_sorting_frequency_V_ce0 <= ap_const_logic_1;
        else 
            prev_sorting_frequency_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    prev_sorting_frequency_V_d0 <= cf_V_5_fu_591_p3;

    prev_sorting_frequency_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln1081_fu_600_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0))) then 
            prev_sorting_frequency_V_we0 <= ap_const_logic_1;
        else 
            prev_sorting_frequency_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    prev_sorting_value_V_address0 <= zext_ln321_fu_660_p1(9 - 1 downto 0);

    prev_sorting_value_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            prev_sorting_value_V_ce0 <= ap_const_logic_1;
        else 
            prev_sorting_value_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    prev_sorting_value_V_d0 <= n_5_reg_1042_pp0_iter1_reg;

    prev_sorting_value_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln1081_fu_600_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1081_fu_600_p2 = ap_const_lv1_0))) then 
            prev_sorting_value_V_we0 <= ap_const_logic_1;
        else 
            prev_sorting_value_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    smLen_V_out <= smLen_V_fu_224;

    smLen_V_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln310_reg_1050)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln310_reg_1050 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            smLen_V_out_ap_vld <= ap_const_logic_1;
        else 
            smLen_V_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln145_fu_574_p1 <= lz77SerialTree1_dout(14 - 1 downto 0);
    zext_ln259_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_5_reg_1042_pp0_iter1_reg),10));
    zext_ln321_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(heapLength_fu_228),64));
end behav;
