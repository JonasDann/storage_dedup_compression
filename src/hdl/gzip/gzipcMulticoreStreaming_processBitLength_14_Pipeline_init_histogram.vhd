-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_processBitLength_14_Pipeline_init_histogram is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    digit_histogram_V_87 : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_86 : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_85 : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_84 : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_83 : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_82 : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_81 : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_80 : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_79 : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_78 : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_77 : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_76 : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_75 : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_74 : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_73 : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V : IN STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_103_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_103_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_102_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_102_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_101_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_101_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_100_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_100_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_99_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_99_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_98_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_98_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_97_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_97_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_96_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_96_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_95_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_95_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_94_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_94_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_93_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_93_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_92_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_92_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_91_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_91_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_90_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_90_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_89_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_89_out_ap_vld : OUT STD_LOGIC;
    digit_histogram_V_88_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    digit_histogram_V_88_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of gzipcMulticoreStreaming_processBitLength_14_Pipeline_init_histogram is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln1073_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal i_V_fu_120 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln886_fu_490_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_V_1 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_22_fu_124 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln149_fu_496_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal digit_histogram_V_23_fu_128 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_24_fu_132 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_25_fu_136 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_26_fu_140 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_27_fu_144 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_28_fu_148 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_29_fu_152 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_30_fu_156 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_31_fu_160 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_32_fu_164 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_33_fu_168 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_34_fu_172 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_35_fu_176 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_36_fu_180 : STD_LOGIC_VECTOR (4 downto 0);
    signal digit_histogram_V_37_fu_184 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    digit_histogram_V_22_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if (((trunc_ln149_fu_496_p1 = ap_const_lv4_0) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_0))) then 
                    digit_histogram_V_22_fu_124 <= ap_const_lv5_0;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_22_fu_124 <= digit_histogram_V;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_23_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if (((trunc_ln149_fu_496_p1 = ap_const_lv4_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_0))) then 
                    digit_histogram_V_23_fu_128 <= ap_const_lv5_0;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_23_fu_128 <= digit_histogram_V_73;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_24_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if (((trunc_ln149_fu_496_p1 = ap_const_lv4_2) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_0))) then 
                    digit_histogram_V_24_fu_132 <= ap_const_lv5_0;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_24_fu_132 <= digit_histogram_V_74;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_25_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if (((trunc_ln149_fu_496_p1 = ap_const_lv4_3) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_0))) then 
                    digit_histogram_V_25_fu_136 <= ap_const_lv5_0;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_25_fu_136 <= digit_histogram_V_75;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_26_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if (((trunc_ln149_fu_496_p1 = ap_const_lv4_4) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_0))) then 
                    digit_histogram_V_26_fu_140 <= ap_const_lv5_0;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_26_fu_140 <= digit_histogram_V_76;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_27_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if (((trunc_ln149_fu_496_p1 = ap_const_lv4_5) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_0))) then 
                    digit_histogram_V_27_fu_144 <= ap_const_lv5_0;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_27_fu_144 <= digit_histogram_V_77;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_28_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if (((trunc_ln149_fu_496_p1 = ap_const_lv4_6) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_0))) then 
                    digit_histogram_V_28_fu_148 <= ap_const_lv5_0;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_28_fu_148 <= digit_histogram_V_78;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_29_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if (((trunc_ln149_fu_496_p1 = ap_const_lv4_7) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_0))) then 
                    digit_histogram_V_29_fu_152 <= ap_const_lv5_0;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_29_fu_152 <= digit_histogram_V_79;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_30_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if (((trunc_ln149_fu_496_p1 = ap_const_lv4_8) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_0))) then 
                    digit_histogram_V_30_fu_156 <= ap_const_lv5_0;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_30_fu_156 <= digit_histogram_V_80;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_31_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if (((trunc_ln149_fu_496_p1 = ap_const_lv4_9) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_0))) then 
                    digit_histogram_V_31_fu_160 <= ap_const_lv5_0;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_31_fu_160 <= digit_histogram_V_81;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_32_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if (((trunc_ln149_fu_496_p1 = ap_const_lv4_A) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_0))) then 
                    digit_histogram_V_32_fu_164 <= ap_const_lv5_0;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_32_fu_164 <= digit_histogram_V_82;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_33_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if (((trunc_ln149_fu_496_p1 = ap_const_lv4_B) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_0))) then 
                    digit_histogram_V_33_fu_168 <= ap_const_lv5_0;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_33_fu_168 <= digit_histogram_V_83;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_34_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if (((trunc_ln149_fu_496_p1 = ap_const_lv4_C) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_0))) then 
                    digit_histogram_V_34_fu_172 <= ap_const_lv5_0;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_34_fu_172 <= digit_histogram_V_84;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_35_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if (((trunc_ln149_fu_496_p1 = ap_const_lv4_D) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_0))) then 
                    digit_histogram_V_35_fu_176 <= ap_const_lv5_0;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_35_fu_176 <= digit_histogram_V_85;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_36_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if (((trunc_ln149_fu_496_p1 = ap_const_lv4_E) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_0))) then 
                    digit_histogram_V_36_fu_180 <= ap_const_lv5_0;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_36_fu_180 <= digit_histogram_V_86;
                end if;
            end if; 
        end if;
    end process;

    digit_histogram_V_37_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if (((trunc_ln149_fu_496_p1 = ap_const_lv4_F) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_0))) then 
                    digit_histogram_V_37_fu_184 <= ap_const_lv5_0;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    digit_histogram_V_37_fu_184 <= digit_histogram_V_87;
                end if;
            end if; 
        end if;
    end process;

    i_V_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if ((icmp_ln1073_fu_484_p2 = ap_const_lv1_0)) then 
                    i_V_fu_120 <= add_ln886_fu_490_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_V_fu_120 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln886_fu_490_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_V_1) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start_int)
    begin
        if ((ap_start_int = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_state1, icmp_ln1073_fu_484_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state1, ap_loop_exit_ready, ap_done_reg, ap_start_int)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_V_1_assign_proc : process(ap_CS_fsm_state1, i_V_fu_120, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_i_V_1 <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_i_V_1 <= i_V_fu_120;
        end if; 
    end process;

    digit_histogram_V_100_out <= digit_histogram_V_34_fu_172;

    digit_histogram_V_100_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln1073_fu_484_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            digit_histogram_V_100_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_100_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_101_out <= digit_histogram_V_35_fu_176;

    digit_histogram_V_101_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln1073_fu_484_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            digit_histogram_V_101_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_101_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_102_out <= digit_histogram_V_36_fu_180;

    digit_histogram_V_102_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln1073_fu_484_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            digit_histogram_V_102_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_102_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_103_out <= digit_histogram_V_37_fu_184;

    digit_histogram_V_103_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln1073_fu_484_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            digit_histogram_V_103_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_103_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_88_out <= digit_histogram_V_22_fu_124;

    digit_histogram_V_88_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln1073_fu_484_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            digit_histogram_V_88_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_88_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_89_out <= digit_histogram_V_23_fu_128;

    digit_histogram_V_89_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln1073_fu_484_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            digit_histogram_V_89_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_89_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_90_out <= digit_histogram_V_24_fu_132;

    digit_histogram_V_90_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln1073_fu_484_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            digit_histogram_V_90_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_90_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_91_out <= digit_histogram_V_25_fu_136;

    digit_histogram_V_91_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln1073_fu_484_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            digit_histogram_V_91_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_91_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_92_out <= digit_histogram_V_26_fu_140;

    digit_histogram_V_92_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln1073_fu_484_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            digit_histogram_V_92_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_92_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_93_out <= digit_histogram_V_27_fu_144;

    digit_histogram_V_93_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln1073_fu_484_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            digit_histogram_V_93_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_93_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_94_out <= digit_histogram_V_28_fu_148;

    digit_histogram_V_94_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln1073_fu_484_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            digit_histogram_V_94_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_94_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_95_out <= digit_histogram_V_29_fu_152;

    digit_histogram_V_95_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln1073_fu_484_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            digit_histogram_V_95_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_95_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_96_out <= digit_histogram_V_30_fu_156;

    digit_histogram_V_96_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln1073_fu_484_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            digit_histogram_V_96_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_96_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_97_out <= digit_histogram_V_31_fu_160;

    digit_histogram_V_97_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln1073_fu_484_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            digit_histogram_V_97_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_97_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_98_out <= digit_histogram_V_32_fu_164;

    digit_histogram_V_98_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln1073_fu_484_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            digit_histogram_V_98_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_98_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    digit_histogram_V_99_out <= digit_histogram_V_33_fu_168;

    digit_histogram_V_99_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln1073_fu_484_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln1073_fu_484_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            digit_histogram_V_99_out_ap_vld <= ap_const_logic_1;
        else 
            digit_histogram_V_99_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1073_fu_484_p2 <= "1" when (ap_sig_allocacmp_i_V_1 = ap_const_lv5_10) else "0";
    trunc_ln149_fu_496_p1 <= ap_sig_allocacmp_i_V_1(4 - 1 downto 0);
end behav;
